From 92c7b909c9853bf21b507c9a378209920751ea4b Mon Sep 17 00:00:00 2001
From: xsoar-bot <xsoar-bot@paloaltonetworks.com>
Date: Wed, 9 Aug 2023 16:01:35 +0000
Subject: [PATCH 01/26] "contribution update to pack "VMRay Analyzer""

---
 Packs/VMRay/Integrations/VMRay/VMRay.py       | 73 ++++++++++++++++++-
 Packs/VMRay/Integrations/VMRay/VMRay.yml      | 29 +++++++-
 .../Integrations/VMRay/VMRay_description.md   |  2 +-
 .../playbook-VMRay-File-Enrichment.yml        |  0
 .../playbook-VMRay-File-Enrichment_README.md  |  0
 Packs/VMRay/ReleaseNotes/1_1_1.md             |  0
 Packs/VMRay/ReleaseNotes/1_2_0.md             | 13 ++++
 .../playbook-VMRay-test-File-Enrichment.yml   |  0
 Packs/VMRay/pack_metadata.json                |  2 +-
 9 files changed, 114 insertions(+), 5 deletions(-)
 mode change 100755 => 100644 Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment.yml
 mode change 100755 => 100644 Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment_README.md
 mode change 100755 => 100644 Packs/VMRay/ReleaseNotes/1_1_1.md
 create mode 100644 Packs/VMRay/ReleaseNotes/1_2_0.md
 mode change 100755 => 100644 Packs/VMRay/TestPlaybooks/playbook-VMRay-test-File-Enrichment.yml

diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.py b/Packs/VMRay/Integrations/VMRay/VMRay.py
index 1409f3dde6..9621c94595 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.py
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.py
@@ -1,3 +1,6 @@
+import demistomock as demisto  # noqa: F401
+from CommonServerPython import *  # noqa: F401
+
 import random
 import time
 import urllib3
@@ -5,7 +8,7 @@ import urllib3
 from typing import Optional, Union
 
 import requests
-from CommonServerPython import *
+
 
 ''' GLOBAL PARAMS '''
 API_KEY = demisto.params().get('api_key') or demisto.params().get('credentials', {}).get('password')
@@ -344,6 +347,7 @@ def build_upload_params():
     shareable = demisto.args().get('shareable')
     max_jobs = demisto.args().get('max_jobs')
     tags = demisto.args().get('tags')
+    net_scheme_name = demisto.args().get('net_scheme_name')
 
     params = dict()
     if doc_pass:
@@ -362,6 +366,9 @@ def build_upload_params():
             raise ValueError('max_jobs arguments isn\'t a number')
     if tags:
         params['tags'] = tags
+    if net_scheme_name:
+        params['user_config'] = "{\"net_scheme_name\": \"" + str(net_scheme_name) + "\"}"
+        print(params)
     return params
 
 
@@ -1342,6 +1349,66 @@ def get_summary_command():
     return_results(file_entry)
 
 
+def vmray_get_license_usage_detections_command():
+    """
+
+    Returns:
+        dict: response
+    """
+    suffix = 'billing_info'
+    raw_response = http_request('GET', suffix)
+    data = raw_response.get('data')
+
+    entry = dict()
+    entry['DetectionsQuota'] = data.get('detector_quota')
+    entry['DetectionsRemaining'] = data.get('detector_remaining')
+    entry['DetectionsUsage'] = round((100 / float(data.get('detector_quota')))
+                                     * (float(data.get('detector_quota')) - float(data.get('detector_remaining'))), 2)
+    entry['PeriodEndDate'] = data.get('end_date')
+
+    markdown = tableToMarkdown('VMRay Detections Quota Information', entry, headers=[
+                               'DetectionsQuota', 'DetectionsRemaining', 'DetectionsUsage', 'PeriodEndDate',])
+
+    results = CommandResults(
+        readable_output=markdown,
+        outputs_prefix='VMRay.DetectionsQuota',
+        outputs_key_field='PeriodEndDate',
+        outputs=entry
+    )
+
+    return_results(results)
+
+
+def vmray_get_license_usage_reports_command():
+    """
+
+    Returns:
+        dict: response
+    """
+    suffix = 'billing_info'
+    raw_response = http_request('GET', suffix)
+    data = raw_response.get('data')
+
+    entry = dict()
+    entry['ReportQuota'] = data.get('report_quota')
+    entry['ReportRemaining'] = data.get('report_remaining')
+    entry['ReportUsage'] = round((100 / float(data.get('report_quota')))
+                                 * (float(data.get('report_quota')) - float(data.get('report_remaining'))), 2)
+    entry['PeriodEndDate'] = data.get('end_date')
+
+    markdown = tableToMarkdown('VMRay Reports Quota Information', entry, headers=[
+                               'ReportQuota', 'ReportRemaining', 'ReportUsage', 'PeriodEndDate',])
+
+    results = CommandResults(
+        readable_output=markdown,
+        outputs_prefix='VMRay.ReportsQuota',
+        outputs_key_field='PeriodEndDate',
+        outputs=entry
+    )
+
+    return_results(results)
+
+
 def main():
     try:
         command = demisto.command()
@@ -1376,6 +1443,10 @@ def main():
             get_iocs_command()
         elif command == 'vmray-get-summary':
             get_summary_command()
+        elif command == 'vmray-get-license-usage-detections':
+            vmray_get_license_usage_detections_command()
+        elif command == 'vmray-get-license-usage-reports':
+            vmray_get_license_usage_reports_command()
     except Exception as exc:
         return_error(f"Failed to execute `{demisto.command()}` command. Error: {str(exc)}")
 
diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.yml b/Packs/VMRay/Integrations/VMRay/VMRay.yml
index 5092f0af6f..0934b23ddb 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.yml
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.yml
@@ -27,6 +27,7 @@ configuration:
   hiddenusername: true
   type: 9
   required: false
+  display: ''
 - display: Use system proxy settings
   name: proxy
   type: 8
@@ -78,6 +79,25 @@ script:
       predefined:
       - 'true'
       - 'false'
+    - auto: PREDEFINED
+      description: Setting the Network Scheme
+      name: net_scheme_name
+      predefined:
+      - Isolated
+      - Random VPN
+      - Austria (VPN)
+      - Brazil (VPN)
+      - Canada (VPN)
+      - France (VPN)
+      - Germany (VPN)
+      - Japan (VPN)
+      - Luxembourg (VPN)
+      - Spain (VPN)
+      - Sweden (VPN)
+      - Switzerland (VPN)
+      - United Arab Emirates (VPN)
+      - United Kingdom (VPN)
+      - United States (VPN)
     description: Submits a sample to VMRay for analysis.
     name: vmray-upload-sample
     outputs:
@@ -1068,9 +1088,14 @@ script:
   - deprecated: true
     description: Retrieves a sample using the sample ID. (Deprecated)
     name: upload_sample
-  dockerimage: demisto/python3:3.10.12.63474
+    arguments: []
+  - arguments: []
+    name: vmray-get-license-usage-detections
+  - arguments: []
+    name: vmray-get-license-usage-reports
+  dockerimage: demisto/python3:3.10.12.68300
   runonce: false
-  script: '-'
+  script: ''
   subtype: python3
   type: python
 tests:
diff --git a/Packs/VMRay/Integrations/VMRay/VMRay_description.md b/Packs/VMRay/Integrations/VMRay/VMRay_description.md
index ee7abb31f6..04e645ea0f 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay_description.md
+++ b/Packs/VMRay/Integrations/VMRay/VMRay_description.md
@@ -1,3 +1,3 @@
 # How To get your VMRay API Key
 1. Access your VMRay environment.
-2. Navigate to **VMRay -> Profile -> API KEYS**. 
+2. Navigate to **VMRay -> Profile -> API KEYS**. 
\ No newline at end of file
diff --git a/Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment.yml b/Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment.yml
old mode 100755
new mode 100644
diff --git a/Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment_README.md b/Packs/VMRay/Playbooks/playbook-VMRay-File-Enrichment_README.md
old mode 100755
new mode 100644
diff --git a/Packs/VMRay/ReleaseNotes/1_1_1.md b/Packs/VMRay/ReleaseNotes/1_1_1.md
old mode 100755
new mode 100644
diff --git a/Packs/VMRay/ReleaseNotes/1_2_0.md b/Packs/VMRay/ReleaseNotes/1_2_0.md
new file mode 100644
index 0000000000..6e54d2ce6f
--- /dev/null
+++ b/Packs/VMRay/ReleaseNotes/1_2_0.md
@@ -0,0 +1,13 @@
+
+#### Integrations
+
+##### VMRay
+
+- %%UPDATE_RN%%
+- Updated the Docker image to: *demisto/python3:3.10.12.68300*.
+
+#### Playbooks
+
+##### File Enrichment - VMRay
+
+- %%UPDATE_RN%%
diff --git a/Packs/VMRay/TestPlaybooks/playbook-VMRay-test-File-Enrichment.yml b/Packs/VMRay/TestPlaybooks/playbook-VMRay-test-File-Enrichment.yml
old mode 100755
new mode 100644
diff --git a/Packs/VMRay/pack_metadata.json b/Packs/VMRay/pack_metadata.json
index d0e43860c3..a228e3bc7f 100644
--- a/Packs/VMRay/pack_metadata.json
+++ b/Packs/VMRay/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "VMRay Analyzer",
     "description": "Analyze files and URLs using the VMRay Platform for accurate threat intelligence and high-quality IOCs.",
     "support": "partner",
-    "currentVersion": "1.1.10",
+    "currentVersion": "1.2.0",
     "author": "VMRay",
     "url": "https://www.vmray.com/",
     "email": "support@vmray.com",
-- 
2.41.0


From 9287de124cd50929a4ef31fbefab208a0a52d358 Mon Sep 17 00:00:00 2001
From: Konrad <15833518+Drizzt-IT@users.noreply.github.com>
Date: Wed, 9 Aug 2023 18:50:31 +0200
Subject: [PATCH 02/26] Fixed several issues / added docs

---
 Packs/VMRay/Integrations/VMRay/README.md |  3 +++
 Packs/VMRay/Integrations/VMRay/VMRay.py  |  5 ++---
 Packs/VMRay/ReleaseNotes/1_2_0.md        | 11 ++++-------
 3 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/Packs/VMRay/Integrations/VMRay/README.md b/Packs/VMRay/Integrations/VMRay/README.md
index e7b27a3d3f..0eebcfabb1 100644
--- a/Packs/VMRay/Integrations/VMRay/README.md
+++ b/Packs/VMRay/Integrations/VMRay/README.md
@@ -43,6 +43,8 @@ After you successfully execute a command, a DBot message appears in the War Room
 - [vmray-get-iocs](#vmray-get-iocs): Get IOCs for a sample
 - [vmray-get-job-by-id](#vmray-get-job-by-id): Get information for a job
 - [vmray-get-summary](#vmray-get-summary): Download Summary JSON v2 for an analysis
+- [vmray-get-license-usage-detections](#vmray-get-license-usage-detections): Get the used quota of detections
+- [vmray-get-license-usage-reports](#vmray-get-license-usage-reports): Get the used quota of reports
 
 
 ### vmray-upload-sample
@@ -64,6 +66,7 @@ Submits a sample to VMRay for analysis.
 | shareable | Whether the file is shareable. Possible values are: true, false. | Optional | 
 | max_jobs | Maximum number of jobs to create (number). Default is 1. | Optional | 
 | tags | A CSV list of tags to add to the sample. | Optional | 
+| net_scheme_name | The Network Scheme to use | Optional |
 
 
 #### Context Output
diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.py b/Packs/VMRay/Integrations/VMRay/VMRay.py
index 9621c94595..ab5eac16af 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.py
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.py
@@ -368,7 +368,6 @@ def build_upload_params():
         params['tags'] = tags
     if net_scheme_name:
         params['user_config'] = "{\"net_scheme_name\": \"" + str(net_scheme_name) + "\"}"
-        print(params)
     return params
 
 
@@ -1367,7 +1366,7 @@ def vmray_get_license_usage_detections_command():
     entry['PeriodEndDate'] = data.get('end_date')
 
     markdown = tableToMarkdown('VMRay Detections Quota Information', entry, headers=[
-                               'DetectionsQuota', 'DetectionsRemaining', 'DetectionsUsage', 'PeriodEndDate',])
+                               'DetectionsQuota', 'DetectionsRemaining', 'DetectionsUsage', 'PeriodEndDate'])
 
     results = CommandResults(
         readable_output=markdown,
@@ -1397,7 +1396,7 @@ def vmray_get_license_usage_reports_command():
     entry['PeriodEndDate'] = data.get('end_date')
 
     markdown = tableToMarkdown('VMRay Reports Quota Information', entry, headers=[
-                               'ReportQuota', 'ReportRemaining', 'ReportUsage', 'PeriodEndDate',])
+                               'ReportQuota', 'ReportRemaining', 'ReportUsage', 'PeriodEndDate'])
 
     results = CommandResults(
         readable_output=markdown,
diff --git a/Packs/VMRay/ReleaseNotes/1_2_0.md b/Packs/VMRay/ReleaseNotes/1_2_0.md
index 6e54d2ce6f..1f32897c24 100644
--- a/Packs/VMRay/ReleaseNotes/1_2_0.md
+++ b/Packs/VMRay/ReleaseNotes/1_2_0.md
@@ -3,11 +3,8 @@
 
 ##### VMRay
 
-- %%UPDATE_RN%%
-- Updated the Docker image to: *demisto/python3:3.10.12.68300*.
+- Added 2 commands:
+    - ***vmray-get-license-usage-detections***
+    - ***vmray-get-license-usage-reports***
 
-#### Playbooks
-
-##### File Enrichment - VMRay
-
-- %%UPDATE_RN%%
+- Added parameter *net_scheme_name* to ***vmray-upload-sample***
\ No newline at end of file
-- 
2.41.0


From bc1651868cc7a144a30f7c23463bbe25cc11c475 Mon Sep 17 00:00:00 2001
From: Konrad <15833518+Drizzt-IT@users.noreply.github.com>
Date: Fri, 11 Aug 2023 12:18:01 +0200
Subject: [PATCH 03/26] Update VMRay.yml

Added  Descriptions to command
---
 Packs/VMRay/Integrations/VMRay/VMRay.yml | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.yml b/Packs/VMRay/Integrations/VMRay/VMRay.yml
index 0934b23ddb..7792cf8f39 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.yml
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.yml
@@ -1091,8 +1091,10 @@ script:
     arguments: []
   - arguments: []
     name: vmray-get-license-usage-detections
+    description: Get the used quota of detections
   - arguments: []
     name: vmray-get-license-usage-reports
+    description: Get the used quota of reports
   dockerimage: demisto/python3:3.10.12.68300
   runonce: false
   script: ''
-- 
2.41.0


From 918d7f82a21f7efbf6bf74caa460fbb7d3ffaa81 Mon Sep 17 00:00:00 2001
From: Konrad <15833518+Drizzt-IT@users.noreply.github.com>
Date: Fri, 1 Sep 2023 10:05:32 +0200
Subject: [PATCH 04/26] Changed as requested

---
 Packs/VMRay/Integrations/VMRay/README.md      |  2 +-
 Packs/VMRay/Integrations/VMRay/VMRay.py       | 20 +++++++++----------
 Packs/VMRay/Integrations/VMRay/VMRay.yml      |  4 ++--
 .../ReleaseNotes/{1_2_0.md => 1_1_12.md}      |  2 +-
 Packs/VMRay/pack_metadata.json                |  2 +-
 5 files changed, 15 insertions(+), 15 deletions(-)
 rename Packs/VMRay/ReleaseNotes/{1_2_0.md => 1_1_12.md} (77%)

diff --git a/Packs/VMRay/Integrations/VMRay/README.md b/Packs/VMRay/Integrations/VMRay/README.md
index 0eebcfabb1..40c080f751 100644
--- a/Packs/VMRay/Integrations/VMRay/README.md
+++ b/Packs/VMRay/Integrations/VMRay/README.md
@@ -43,7 +43,7 @@ After you successfully execute a command, a DBot message appears in the War Room
 - [vmray-get-iocs](#vmray-get-iocs): Get IOCs for a sample
 - [vmray-get-job-by-id](#vmray-get-job-by-id): Get information for a job
 - [vmray-get-summary](#vmray-get-summary): Download Summary JSON v2 for an analysis
-- [vmray-get-license-usage-detections](#vmray-get-license-usage-detections): Get the used quota of detections
+- [vmray-get-license-usage-verdicts](#vmray-get-license-usage-verdicts): Get the used quota of verdicts
 - [vmray-get-license-usage-reports](#vmray-get-license-usage-reports): Get the used quota of reports
 
 
diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.py b/Packs/VMRay/Integrations/VMRay/VMRay.py
index ab5eac16af..1bb72b19e3 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.py
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.py
@@ -1348,7 +1348,7 @@ def get_summary_command():
     return_results(file_entry)
 
 
-def vmray_get_license_usage_detections_command():
+def vmray_get_license_usage_verdicts_command():
     """
 
     Returns:
@@ -1359,18 +1359,18 @@ def vmray_get_license_usage_detections_command():
     data = raw_response.get('data')
 
     entry = dict()
-    entry['DetectionsQuota'] = data.get('detector_quota')
-    entry['DetectionsRemaining'] = data.get('detector_remaining')
-    entry['DetectionsUsage'] = round((100 / float(data.get('detector_quota')))
-                                     * (float(data.get('detector_quota')) - float(data.get('detector_remaining'))), 2)
+    entry['VerdictsQuota'] = data.get('verdict_quota')
+    entry['VerdictsRemaining'] = data.get('verdict_remaining')
+    entry['VerdictsUsage'] = round((100 / float(data.get('verdict_quota')))
+                                     * (float(data.get('verdict_quota')) - float(data.get('verdict_remaining'))), 2)
     entry['PeriodEndDate'] = data.get('end_date')
 
-    markdown = tableToMarkdown('VMRay Detections Quota Information', entry, headers=[
-                               'DetectionsQuota', 'DetectionsRemaining', 'DetectionsUsage', 'PeriodEndDate'])
+    markdown = tableToMarkdown('VMRay Verdicts Quota Information', entry, headers=[
+                               'VerdictsQuota', 'VerdictsRemaining', 'VerdictsUsage', 'PeriodEndDate'])
 
     results = CommandResults(
         readable_output=markdown,
-        outputs_prefix='VMRay.DetectionsQuota',
+        outputs_prefix='VMRay.VerdicsQuota',
         outputs_key_field='PeriodEndDate',
         outputs=entry
     )
@@ -1442,8 +1442,8 @@ def main():
             get_iocs_command()
         elif command == 'vmray-get-summary':
             get_summary_command()
-        elif command == 'vmray-get-license-usage-detections':
-            vmray_get_license_usage_detections_command()
+        elif command == 'vmray-get-license-usage-verdicts':
+            vmray_get_license_usage_verdicts_command()
         elif command == 'vmray-get-license-usage-reports':
             vmray_get_license_usage_reports_command()
     except Exception as exc:
diff --git a/Packs/VMRay/Integrations/VMRay/VMRay.yml b/Packs/VMRay/Integrations/VMRay/VMRay.yml
index 7792cf8f39..672c05cad9 100644
--- a/Packs/VMRay/Integrations/VMRay/VMRay.yml
+++ b/Packs/VMRay/Integrations/VMRay/VMRay.yml
@@ -1090,8 +1090,8 @@ script:
     name: upload_sample
     arguments: []
   - arguments: []
-    name: vmray-get-license-usage-detections
-    description: Get the used quota of detections
+    name: vmray-get-license-usage-verdicts
+    description: Get the used quota of verdicts
   - arguments: []
     name: vmray-get-license-usage-reports
     description: Get the used quota of reports
diff --git a/Packs/VMRay/ReleaseNotes/1_2_0.md b/Packs/VMRay/ReleaseNotes/1_1_12.md
similarity index 77%
rename from Packs/VMRay/ReleaseNotes/1_2_0.md
rename to Packs/VMRay/ReleaseNotes/1_1_12.md
index 1f32897c24..1ab98e44e0 100644
--- a/Packs/VMRay/ReleaseNotes/1_2_0.md
+++ b/Packs/VMRay/ReleaseNotes/1_1_12.md
@@ -4,7 +4,7 @@
 ##### VMRay
 
 - Added 2 commands:
-    - ***vmray-get-license-usage-detections***
+    - ***vmray-get-license-usage-verdicts***
     - ***vmray-get-license-usage-reports***
 
 - Added parameter *net_scheme_name* to ***vmray-upload-sample***
\ No newline at end of file
diff --git a/Packs/VMRay/pack_metadata.json b/Packs/VMRay/pack_metadata.json
index a228e3bc7f..d6c4e80c20 100644
--- a/Packs/VMRay/pack_metadata.json
+++ b/Packs/VMRay/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "VMRay Analyzer",
     "description": "Analyze files and URLs using the VMRay Platform for accurate threat intelligence and high-quality IOCs.",
     "support": "partner",
-    "currentVersion": "1.2.0",
+    "currentVersion": "1.1.12",
     "author": "VMRay",
     "url": "https://www.vmray.com/",
     "email": "support@vmray.com",
-- 
2.41.0


From f7b7d5c654b3ab87328911735414aa2a6cd94297 Mon Sep 17 00:00:00 2001
From: Darya Koval <72339940+daryakoval@users.noreply.github.com>
Date: Thu, 7 Sep 2023 07:53:37 +0300
Subject: [PATCH 05/26] Cs falcon fetch limit issue (#29411)

* fixed the parameter that send as a limit

* update rn

* update test playbook

* Update Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_7.md

Co-authored-by: Shelly Tzohar <45915502+Shellyber@users.noreply.github.com>

* fixing test playbook

* adding sort incidents by the ids order; fix time field issue

* rename rn

* bump version

* added unitest

* fix rn

* save unitest fix

* save format

* save unitest fix

* update docker

---------

Co-authored-by: Shelly Tzohar <45915502+Shellyber@users.noreply.github.com>
---
 .../CrowdStrikeFalcon/CrowdStrikeFalcon.py    | 47 +++++++++++++++----
 .../CrowdStrikeFalcon/CrowdStrikeFalcon.yml   | 34 +++++++-------
 .../CrowdStrikeFalcon_test.py                 | 43 ++++++++++++++---
 .../CrowdStrikeFalcon/ReleaseNotes/1_11_8.md  |  8 ++++
 Packs/CrowdStrikeFalcon/pack_metadata.json    |  2 +-
 5 files changed, 100 insertions(+), 34 deletions(-)
 create mode 100644 Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_8.md

diff --git a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
index 15fc6907ef..8323ce049b 100644
--- a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
+++ b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
@@ -529,7 +529,7 @@ def detection_to_incident(detection):
 
     incident = {
         'name': 'Detection ID: ' + str(detection.get('detection_id')),
-        'occurred': str(detection.get('created_timestamp')),
+        'occurred': str(detection.get('first_behavior')),
         'rawJSON': json.dumps(detection),
         'severity': severity_string_to_int(detection.get('max_severity_displayname'))
     }
@@ -1306,7 +1306,7 @@ def get_fetch_detections(last_created_timestamp=None, filter_arg=None, offset: i
     if filter_arg:
         params['filter'] = filter_arg
     elif last_created_timestamp:
-        params['filter'] = f"created_timestamp:>'{last_created_timestamp}'"
+        params['filter'] = f"first_behavior:>'{last_created_timestamp}'"
     elif last_updated_timestamp:
         params['filter'] = f"date_updated:>'{last_updated_timestamp}'"
 
@@ -2500,6 +2500,21 @@ def migrate_last_run(last_run: dict[str, str] | list[dict]) -> list[dict]:
         return [updated_last_run_detections, updated_last_run_incidents, {}]
 
 
+def sort_incidents_summaries_by_ids_order(ids_order, full_incidents, id_field):
+    """ sort incidents list by the order that ids_order list has
+
+    Args:
+        ids_order: list of ids
+        full_incidents: list of incidents
+        id_field: name of the id field
+    Returns:
+        list[dict]: New last run object.
+    """
+    incidents_by_id = {i[id_field]: i for i in full_incidents}
+    incidents = [incidents_by_id[i] for i in ids_order]
+    return incidents
+
+
 def fetch_incidents():
     incidents: list = []
     detections: list = []
@@ -2527,7 +2542,7 @@ def fetch_incidents():
         incident_type = 'detection'
         fetch_query = demisto.params().get('fetch_query')
         if fetch_query:
-            fetch_query = f"created_timestamp:>'{start_fetch_time}'+{fetch_query}"
+            fetch_query = f"first_behavior:>'{start_fetch_time}'+{fetch_query}"
             detections_ids = demisto.get(get_fetch_detections(filter_arg=fetch_query, limit=fetch_limit), 'resources')
         else:
             detections_ids = demisto.get(get_fetch_detections(last_created_timestamp=start_fetch_time, limit=fetch_limit),
@@ -2536,18 +2551,22 @@ def fetch_incidents():
         raw_res = get_detections_entities(detections_ids)
 
         if raw_res is not None and "resources" in raw_res:
-            for detection in demisto.get(raw_res, "resources"):
+            full_detections = demisto.get(raw_res, "resources")
+            sorted_detections = sort_incidents_summaries_by_ids_order(ids_order=detections_ids,
+                                                                      full_incidents=full_detections,
+                                                                      id_field='detection_id')
+            for detection in sorted_detections:
                 detection['incident_type'] = incident_type
                 demisto.debug(
                     f"CrowdStrikeFalconMsg: Detection {detection['detection_id']} "
-                    f"was fetched which was created in {detection['created_timestamp']}")
+                    f"was fetched which was created in {detection['first_behavior']}")
                 incident = detection_to_incident(detection)
 
                 detections.append(incident)
 
         detections = filter_incidents_by_duplicates_and_limit(incidents_res=detections,
                                                               last_run=current_fetch_info_detections,
-                                                              fetch_limit=fetch_limit, id_field='name')
+                                                              fetch_limit=INCIDENTS_PER_FETCH, id_field='name')
 
         for detection in detections:
             occurred = dateparser.parse(detection["occurred"])
@@ -2583,13 +2602,17 @@ def fetch_incidents():
         if incidents_ids:
             raw_res = get_incidents_entities(incidents_ids)
             if raw_res is not None and "resources" in raw_res:
-                for incident in demisto.get(raw_res, "resources"):
+                full_incidents = demisto.get(raw_res, "resources")
+                sorted_incidents = sort_incidents_summaries_by_ids_order(ids_order=incidents_ids,
+                                                                         full_incidents=full_incidents,
+                                                                         id_field='incident_id')
+                for incident in sorted_incidents:
                     incident['incident_type'] = incident_type
                     incident_to_context = incident_to_incident_context(incident)
                     incidents.append(incident_to_context)
 
         incidents = filter_incidents_by_duplicates_and_limit(incidents_res=incidents, last_run=current_fetch_info_incidents,
-                                                             fetch_limit=fetch_limit, id_field='name')
+                                                             fetch_limit=INCIDENTS_PER_FETCH, id_field='name')
         for incident in incidents:
             occurred = dateparser.parse(incident["occurred"])
             if occurred:
@@ -2617,14 +2640,18 @@ def fetch_incidents():
         if idp_detections_ids:
             raw_res = get_idp_detection_entities(idp_detections_ids)
             if "resources" in raw_res:
-                for idp_detection in demisto.get(raw_res, "resources"):
+                full_detections = demisto.get(raw_res, "resources")
+                sorted_detections = sort_incidents_summaries_by_ids_order(ids_order=idp_detections_ids,
+                                                                          full_incidents=full_detections,
+                                                                          id_field='composite_id')
+                for idp_detection in sorted_detections:
                     idp_detection['incident_type'] = IDP_DETECTION
                     idp_detection_to_context = idp_detection_to_incident_context(idp_detection)
                     idp_detections.append(idp_detection_to_context)
 
             idp_detections = filter_incidents_by_duplicates_and_limit(incidents_res=idp_detections,
                                                                       last_run=current_fetch_info_idp_detections,
-                                                                      fetch_limit=fetch_limit, id_field='name')
+                                                                      fetch_limit=INCIDENTS_PER_FETCH, id_field='name')
             updated_last_run = update_last_run_object(last_run=current_fetch_info_idp_detections, incidents=idp_detections,
                                                       fetch_limit=fetch_limit,
                                                       start_fetch_time=start_fetch_time, end_fetch_time=end_fetch_time,
diff --git a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.yml b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.yml
index 57bd70bef5..8ac65bf1b9 100644
--- a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.yml
+++ b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.yml
@@ -412,7 +412,7 @@ script:
     - description: Any commands run against an offline-queued session will be queued up and executed when the host comes online.
       name: queue_offline
       defaultValue: false
-    - description: A comma-separated list of host agent IDs to run commands for. (Can be retrieved by running the 'cs-falcon-search-device' command.)
+    - description: A comma-separated list of host agent IDs to run commands for. (Can be retrieved by running the 'cs-falcon-search-device' command.).
       name: host_ids
       required: true
     - description: The type of command to run.
@@ -423,7 +423,7 @@ script:
       required: true
     - auto: PREDEFINED
       defaultValue: read
-      description: 'The scope to run the command for. Possible values are: "read", "write", and "admin". (NOTE: In order to run the CrowdStrike RTR `put` command, it is necessary to pass `scope=admin`.)'
+      description: 'The scope to run the command for. Possible values are: "read", "write", and "admin". (NOTE: In order to run the CrowdStrike RTR `put` command, it is necessary to pass `scope=admin`.).'
       name: scope
       predefined:
       - read
@@ -491,7 +491,7 @@ script:
     - description: The file entry ID to upload.
       name: entry_id
       required: true
-    description: Uploads a file to the CrowdStrike cloud. (Can be used for the RTR 'put' command.)
+    description: Uploads a file to the CrowdStrike cloud. (Can be used for the RTR 'put' command.).
     name: cs-falcon-upload-file
   - arguments:
     - description: The ID of the file to delete. (The ID of the file can be retrieved by running the 'cs-falcon-list-files' command).
@@ -500,7 +500,7 @@ script:
     description: Deletes a file based on the provided ID. Can delete only one file at a time.
     name: cs-falcon-delete-file
   - arguments:
-    - description: A comma-separated list of file IDs to get. (The list of file IDs can be retrieved by running the 'cs-falcon-list-files' command.)
+    - description: A comma-separated list of file IDs to get. (The list of file IDs can be retrieved by running the 'cs-falcon-list-files' command.).
       name: file_id
       required: true
     description: Returns files based on the provided IDs. These files are used for the RTR 'put' command.
@@ -531,7 +531,7 @@ script:
       description: The full name of the file.
       type: String
     - contextPath: CrowdStrike.File.Permission
-      description: 'The permission type of the file. Possible values are: "private", which is used only by the user who uploaded it, "group", which is used by all RTR Admins, and "public", which is used by all active-responders and RTR admins'
+      description: 'The permission type of the file. Possible values are: "private", which is used only by the user who uploaded it, "group", which is used by all RTR Admins, and "public", which is used by all active-responders and RTR admins.'
       type: String
     - contextPath: CrowdStrike.File.SHA256
       description: The SHA-256 hash of the file.
@@ -595,7 +595,7 @@ script:
       description: The size of the file in bytes.
       type: Number
   - arguments:
-    - description: A comma-separated list of script IDs to return. (The script IDs can be retrieved by running the 'cs-falcon-list-scripts' command.)
+    - description: A comma-separated list of script IDs to return. (The script IDs can be retrieved by running the 'cs-falcon-list-scripts' command.).
       name: script_id
       required: true
     description: Returns custom scripts based on the provided ID. Used for the RTR 'runscript' command.
@@ -641,7 +641,7 @@ script:
       description: Whether the user has write access to the script.
       type: Boolean
   - arguments:
-    - description: The script ID to delete. (Script IDs can be retrieved by running the 'cs-falcon-list-scripts' command.)
+    - description: The script ID to delete. (Script IDs can be retrieved by running the 'cs-falcon-list-scripts' command.).
       name: script_id
       required: true
     description: Deletes a custom-script based on the provided ID. Can delete only one script at a time.
@@ -692,7 +692,7 @@ script:
   - arguments:
     - description: The name of the script to run.
       name: script_name
-    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.)
+    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.).
       name: host_ids
       required: true
     - description: The PowerShell script code to run.
@@ -1290,7 +1290,7 @@ script:
       description: The identity of the user/process who last updated the IOC.
       type: string
     - contextPath: CrowdStrike.NextPageToken
-      description: A pagination token used with the limit parameter to manage pagination of results
+      description: A pagination token used with the limit parameter to manage pagination of results.
   - arguments:
     - auto: PREDEFINED
       description: 'The IOC type to retrieve. Possible values are: "sha256", "sha1", "md5", "domain", "ipv4", and "ipv6". Either ioc_id or ioc_type and value must be provided.'
@@ -2274,7 +2274,7 @@ script:
     - description: The ID of the host group.
       name: host_group_id
       required: true
-    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.)
+    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.).
       isArray: true
       name: host_ids
       required: true
@@ -2309,7 +2309,7 @@ script:
     - description: The ID of the host group.
       name: host_group_id
       required: true
-    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.)
+    - description: A comma-separated list of host agent IDs to run commands. (The list of host agent IDs can be retrieved by running the 'cs-falcon-search-device' command.).
       isArray: true
       name: host_ids
       required: true
@@ -2627,7 +2627,7 @@ script:
     description: Updates the remote incident or detection with local incident or detection changes. This method is only used for debugging purposes and will not update the current incident or detection.
     name: update-remote-system
   - arguments:
-    - description: Limit the vulnerabilities returned to specific properties. Each value must be enclosed in single quotes and placed immediately after the colon with no space. For example, 'filter=status:'open'+cve.id:['CVE-2013-3900','CVE-2021-1675']'
+    - description: Limit the vulnerabilities returned to specific properties. Each value must be enclosed in single quotes and placed immediately after the colon with no space. For example, 'filter=status:'open'+cve.id:['CVE-2013-3900','CVE-2021-1675']'.
       name: filter
     - description: Unique agent identifier (AID) of a sensor.
       name: aid
@@ -2652,7 +2652,7 @@ script:
     - description: Type of host a sensor is running on.
       name: host_type
       isArray: true
-    - description: Filter for vulnerabilities based on the number of days since a host last connected to CrowdStrike Falcon. Enter a numeric value from 3 to 45 to indicate the number of days you want to look back. Example- last_seen_within:10
+    - description: Filter for vulnerabilities based on the number of days since a host last connected to CrowdStrike Falcon. Enter a numeric value from 3 to 45 to indicate the number of days you want to look back. Example- last_seen_within:10.
       name: last_seen_within
     - auto: PREDEFINED
       description: Indicates if the vulnerability is suppressed by a suppression rule.
@@ -3864,7 +3864,7 @@ script:
       description: A unique identifier for the scan profile used in the scan.
       type: String
     - contextPath: CrowdStrike.ODSScanHost.host_id
-      description: A unique identifier for the host that was scanned
+      description: A unique identifier for the host that was scanned.
       type: String
     - contextPath: CrowdStrike.ODSScanHost.host_scan_id
       description: A unique identifier for the scan that was performed on the host.
@@ -3882,10 +3882,10 @@ script:
       description: The number of files that were skipped during the scan.
       type: Number
     - contextPath: CrowdStrike.ODSScanHost.status
-      description: The status of the scan. (e.g., "completed", "pending", "cancelled", "running", or "failed")
+      description: The status of the scan. (e.g., "completed", "pending", "cancelled", "running", or "failed").
       type: String
     - contextPath: CrowdStrike.ODSScanHost.severity
-      description: A severity score assigned to the scan, ranging from 0 to 100
+      description: A severity score assigned to the scan, ranging from 0 to 100.
       type: Number
     - contextPath: CrowdStrike.ODSScanHost.started_on
       description: The date and time when the scan was started.
@@ -4375,7 +4375,7 @@ script:
     - contextPath: CrowdStrike.IDPEntity.EmailAddresses
       description: The identity entity email address.
       type: String
-  dockerimage: demisto/py3-tools:1.0.0.72621
+  dockerimage: demisto/py3-tools:1.0.0.73055
   isfetch: true
   ismappable: true
   isremotesyncin: true
diff --git a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon_test.py b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon_test.py
index c30d28e10b..938f5fcc6b 100644
--- a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon_test.py
+++ b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon_test.py
@@ -2184,10 +2184,13 @@ class TestFetch:
         requests_mock.post(f'{SERVER_URL}/detects/entities/summaries/GET/v1',
                            json={'resources': [{'detection_id': 'ldt:1',
                                                 'created_timestamp': '2020-09-04T09:16:11Z',
-                                                'max_severity_displayname': 'Low'},
+                                                'max_severity_displayname': 'Low',
+                                                'first_behavior': '2020-09-04T09:16:11Z'
+                                                },
                                                {'detection_id': 'ldt:2',
                                                 'created_timestamp': '2020-09-04T09:20:11Z',
-                                                'max_severity_displayname': 'Low'}]})
+                                                'max_severity_displayname': 'Low',
+                                                'first_behavior': '2020-09-04T09:16:11Z'}]})
         requests_mock.get(f'{SERVER_URL}/incidents/queries/incidents/v1', json={})
         requests_mock.post(f'{SERVER_URL}/incidents/entities/incidents/GET/v1', json={})
 
@@ -2255,11 +2258,16 @@ class TestFetch:
         requests_mock.post(f'{SERVER_URL}/detects/entities/summaries/GET/v1',
                            json={'resources': [{'detection_id': 'ldt:1',
                                                 'created_timestamp': '2020-09-04T09:16:11Z',
-                                                'max_severity_displayname': 'Low'}]})
+                                                'max_severity_displayname': 'Low', 'first_behavior': '2020-09-04T09:16:11Z'},
+                                               {'detection_id': 'ldt:2',
+                                                'created_timestamp': '2020-09-04T09:16:11Z',
+                                                'max_severity_displayname': 'Low', 'first_behavior': '2020-09-04T09:16:11Z'}
+                                               ]})
         from CrowdStrikeFalcon import fetch_incidents
         fetch_incidents()
         assert demisto.setLastRun.mock_calls[0][1][0][0] == {
-            'time': '2020-09-04T09:16:11Z', 'limit': 2, "found_incident_ids": {'Detection ID: ldt:1': 1599210970}}
+            'time': '2020-09-04T09:16:11Z', 'limit': 2, "found_incident_ids": {'Detection ID: ldt:1': 1599210970,
+                                                                               'Detection ID: ldt:2': 1599210970}}
 
     def test_fetch_incident_type(self, set_up_mocks, mocker):
         """
@@ -2394,12 +2402,14 @@ class TestIncidentFetch:
                                                                       'offset': 2}, {}])
         # Override post to have 1 results so FETCH_LIMIT won't be reached
         requests_mock.post(f'{SERVER_URL}/incidents/entities/incidents/GET/v1',
-                           json={'resources': [{'incident_id': 'ldt:1', 'start': '2020-09-04T09:16:11Z'}]})
+                           json={'resources': [{'incident_id': 'ldt:1', 'start': '2020-09-04T09:16:11Z'},
+                                               {'incident_id': 'ldt:2', 'start': '2020-09-04T09:16:11Z'}]})
         from CrowdStrikeFalcon import fetch_incidents
         fetch_incidents()
         assert demisto.setLastRun.mock_calls[0][1][0][1] == {'time': '2020-09-04T09:16:11Z',
                                                              'limit': 2,
-                                                             'found_incident_ids': {'Incident ID: ldt:1': 1598462533}}
+                                                             'found_incident_ids': {'Incident ID: ldt:1': 1598462533,
+                                                                                    'Incident ID: ldt:2': 1598462533}}
 
     def test_incident_type_in_fetch(self, set_up_mocks, mocker):
         """Tests the addition of incident_type field to the context
@@ -5502,3 +5512,24 @@ def test_list_detection_summaries_command_no_results(mocker):
     mocker.patch('CrowdStrikeFalcon.http_request', return_value=response)
     res = list_detection_summaries_command()
     assert res.readable_output == '### CrowdStrike Detections\n**No entries.**\n'
+
+
+def test_sort_incidents_summaries_by_ids_order():
+    """
+    Test sort incidents in the order by incidents ids
+
+    Given:
+     - Full incidents response, sorted ids
+    When:
+     - Searching for detections using fetch_incidents()
+    Then:
+     - The incidents returned in sorted order
+    """
+    from CrowdStrikeFalcon import sort_incidents_summaries_by_ids_order
+    full_incidents = [{"id": "2", "name": "test2"},
+                      {"id": "3", "name": "test3"},
+                      {"id": "1", "name": "test1"}]
+    res = sort_incidents_summaries_by_ids_order(ids_order=["1", "2", "3"], full_incidents=full_incidents, id_field="id")
+    assert res == [{"id": "1", "name": "test1"}, {"id": "2", "name": "test2"},
+                   {"id": "3", "name": "test3"},
+                   ]
diff --git a/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_8.md b/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_8.md
new file mode 100644
index 0000000000..4896bdd212
--- /dev/null
+++ b/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_8.md
@@ -0,0 +1,8 @@
+
+#### Integrations
+
+##### CrowdStrike Falcon
+
+- Fixed an issue where the **Max incidents per fetch** parameter did not work properly. 
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
+
diff --git a/Packs/CrowdStrikeFalcon/pack_metadata.json b/Packs/CrowdStrikeFalcon/pack_metadata.json
index db5a73c4b5..333712b727 100644
--- a/Packs/CrowdStrikeFalcon/pack_metadata.json
+++ b/Packs/CrowdStrikeFalcon/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "CrowdStrike Falcon",
     "description": "The CrowdStrike Falcon OAuth 2 API (formerly the Falcon Firehose API), enables fetching and resolving detections, searching devices, getting behaviors by ID, containing hosts, and lifting host containment.",
     "support": "xsoar",
-    "currentVersion": "1.11.7",
+    "currentVersion": "1.11.8",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 50f0dbb657d4524c59b5eb4ea333123bdf94e84c Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 08:53:38 +0300
Subject: [PATCH 06/26] Stamus integration v1.0.0 (#29426)

* Stamus integration v1.0.0 (#26286)

* packs: add stamus pack to xsoar content

Implement a new set of commands to interact with
Stamus Security Platform.

* Stamus: remove dummy test

* Stamus: use StamusIntegration prefix

* Stamus: fix some descriptions

* Stamus: update result to return markdown

* Stamus: rename commands

* Stamus: update pack metadata

* Stamus: homogeneize message

* Stamus: really basic README

* Stamus: fix some linters warning

* Stamus: import playbook and mapper

* Stamus: more import

Import Stamus' IncidentFields, IncidentFields and Layouts

* Stamus: add playbook documentation

* Stamus: more documentation

* Stamus: add generated docs

* Stamus: remove template comment

* Stamus: use f-string

* Stamus: simply test connection

* Stamus: remove commented code

* Stamus: docstring on escape function

* Stamus: fix to have one context for each command

* Stamus: refactoring

* Stamus: remove useless code

* Stamus: get default value in results if no results

* Stamus: run demisto format on yaml files

* Stamus: update README

* Stamus: fix missing description and format

* Stamus: fix following validation

* Stamus: add missing playbook image

* Stamus: remove marketplacev2 support

* Stamus: fix info extraction in get DoC command

* Stamus: use getter function

Co-authored-by: Guy Afik <53861351+GuyAfik@users.noreply.github.com>

* Stamus: command should be lower case

* Stamus: avoid double read of event

* Stamus: little optimization

* Stamus: add docstring

* Stamus: remove not needed files

* Stamus: add basic integration doc

* Stamus: fix JSON format

* Stamus: fix some name in playbook

* Stamus: rename IOC params

* Stamus: fix demisto sdk validation

validation: demisto-sdk validate -i Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json
validation: fix: demisto-sdk format -i /home/snuser/cortex/Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json

* Stamus: fix params name gotten from conf

* Stamus: fix stamus extra data playbook following new naming

* Stamus: fix playbook ID

* Stamus: Add descriptions

* Stamus: move constants with other constants

* Stamus: use getter function + fix linter

* Stamus: use fstring

* Stamus: unit tests impl

* Stamus: remove template doc

Co-authored-by: Guy Afik <53861351+GuyAfik@users.noreply.github.com>

* Stamus: add test data to secret-ignore

* Stamus: fix event type

* Stamus: update demisto docker image

* Stamus: fix reference in classifier

* Stamus: update README.md

Runned demisto-sdk generate-docs -i Packs/Stamus/Integrations/Stamus/Stamus.yml
and fixed the version string.

* Stamus: fix linter error

* Stamus: fix linter warning

* Stamus: fix a playbook param

* Stamus: fix key value

* Stamus: set default value for incident

* Stamus: update from version

* Stamus: set default incoming mapper

* Stamus: improve layout

* Stamus: some more layout work

* Stamus: use already defined fields

* Stamus: don't extract indicators

Most fields are information and we should not extract indicators.

* Stamus: display threat info in layout

* Stamus: don't try to display removed field

* Stamus: add host first seen

* Stamus: add host insight info in incident layout

This is the first pass, we need to add the role.

* Stamus: display major host insight information

* Stamus: retry policy and fix a field

Host insight info can be available after some time if ever the
host has not be seen before.

* Stamus: update to fix validation

* Stamus: add description to mapper

* Stamus: add integration as 'start time' user

---------

Co-authored-by: Nicolas Frisoni <nfrisoni@stamus-networks.com>
Co-authored-by: Guy Afik <53861351+GuyAfik@users.noreply.github.com>
Co-authored-by: Peter <pmanev@stamus-networks.com>

* bump rn

* rn

* pre-commit

* Bump pack from version CommonTypes to 3.3.85.

* update mapper

* bump rn

* update rn

* Empty-Commit

* bump rn

* ds108 validation fixes

* fix validation

* ds108

---------

Co-authored-by: Eric Leblond <eric@regit.org>
Co-authored-by: Nicolas Frisoni <nfrisoni@stamus-networks.com>
Co-authored-by: Guy Afik <53861351+GuyAfik@users.noreply.github.com>
Co-authored-by: Peter <pmanev@stamus-networks.com>
Co-authored-by: GuyAfik <guyafik11@gmail.com>
Co-authored-by: Content Bot <bot@demisto.com>
---
 .../incidentfield-Start_Time.json             |   3 +-
 Packs/CommonTypes/ReleaseNotes/3_3_85.md      |   4 +
 Packs/CommonTypes/pack_metadata.json          |   2 +-
 Packs/Stamus/.pack-ignore                     |   0
 Packs/Stamus/.secrets-ignore                  |   7 +
 Packs/Stamus/Author_image.png                 | Bin 0 -> 9773 bytes
 ...ifier-Stamus_Networks_incoming_mapper.json |  62 +++
 ...incidentfield-StamusFamilyDescription.json |  30 ++
 .../incidentfield-StamusFamilyID.json         |  30 ++
 .../incidentfield-StamusFamilyLink.json       |  30 ++
 .../incidentfield-StamusHostFirstSeen.json    |  30 ++
 .../incidentfield-StamusHostLastSeen.json     |  30 ++
 .../incidentfield-StamusHostRoles.json        |  30 ++
 .../incidentfield-StamusID.json               |  30 ++
 .../incidentfield-StamusKillchain.json        |  30 ++
 .../incidentfield-StamusTarget.json           |  30 ++
 .../incidentfield-StamusTargettype.json       |  30 ++
 .../incidentfield-StamusTenant.json           |  30 ++
 ...incidentfield-StamusThreatDescription.json |  30 ++
 .../incidentfield-StamusThreatId.json         |  30 ++
 .../incidentfield-StamusThreatLink.json       |  30 ++
 .../incidenttype-Stamus_Networks.json         |  28 +
 Packs/Stamus/Integrations/Stamus/README.md    | 118 +++++
 Packs/Stamus/Integrations/Stamus/Stamus.py    | 376 ++++++++++++++
 Packs/Stamus/Integrations/Stamus/Stamus.yml   | 195 +++++++
 .../Integrations/Stamus/Stamus_description.md |  26 +
 .../Integrations/Stamus/Stamus_image.png      | Bin 0 -> 3195 bytes
 .../Stamus/Integrations/Stamus/Stamus_test.py | 193 +++++++
 .../Integrations/Stamus/command_examples      |   0
 .../Stamus/test_data/fetch_by_ioc.json        |  77 +++
 .../Stamus/test_data/fetch_events.json        | 175 +++++++
 .../Stamus/test_data/fetch_host_id.json       |  29 ++
 .../Stamus/test_data/fetch_incidents.json     |  18 +
 ...youtscontainer-Stamus_Networks_Layout.json | 482 ++++++++++++++++++
 .../Stamus_Networks_-_Get_Extra_Data.yml      | 323 ++++++++++++
 ...Stamus_Networks_-_Get_Extra_Data_README.md |  39 ++
 Packs/Stamus/README.md                        |   4 +
 .../Stamus_Networks_-_Get_Extra_Data.png      | Bin 0 -> 61692 bytes
 Packs/Stamus/pack_metadata.json               |  29 ++
 39 files changed, 2608 insertions(+), 2 deletions(-)
 create mode 100644 Packs/CommonTypes/ReleaseNotes/3_3_85.md
 create mode 100644 Packs/Stamus/.pack-ignore
 create mode 100644 Packs/Stamus/.secrets-ignore
 create mode 100644 Packs/Stamus/Author_image.png
 create mode 100644 Packs/Stamus/Classifiers/classifier-Stamus_Networks_incoming_mapper.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusFamilyDescription.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusFamilyID.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusFamilyLink.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusHostFirstSeen.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusHostLastSeen.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusHostRoles.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusID.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusKillchain.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusTarget.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusTargettype.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusTenant.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusThreatDescription.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusThreatId.json
 create mode 100644 Packs/Stamus/IncidentFields/incidentfield-StamusThreatLink.json
 create mode 100644 Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json
 create mode 100644 Packs/Stamus/Integrations/Stamus/README.md
 create mode 100644 Packs/Stamus/Integrations/Stamus/Stamus.py
 create mode 100644 Packs/Stamus/Integrations/Stamus/Stamus.yml
 create mode 100644 Packs/Stamus/Integrations/Stamus/Stamus_description.md
 create mode 100644 Packs/Stamus/Integrations/Stamus/Stamus_image.png
 create mode 100644 Packs/Stamus/Integrations/Stamus/Stamus_test.py
 create mode 100644 Packs/Stamus/Integrations/Stamus/command_examples
 create mode 100644 Packs/Stamus/Integrations/Stamus/test_data/fetch_by_ioc.json
 create mode 100644 Packs/Stamus/Integrations/Stamus/test_data/fetch_events.json
 create mode 100644 Packs/Stamus/Integrations/Stamus/test_data/fetch_host_id.json
 create mode 100644 Packs/Stamus/Integrations/Stamus/test_data/fetch_incidents.json
 create mode 100644 Packs/Stamus/Layouts/layoutscontainer-Stamus_Networks_Layout.json
 create mode 100644 Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data.yml
 create mode 100644 Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data_README.md
 create mode 100644 Packs/Stamus/README.md
 create mode 100644 Packs/Stamus/doc_files/Stamus_Networks_-_Get_Extra_Data.png
 create mode 100644 Packs/Stamus/pack_metadata.json

diff --git a/Packs/CommonTypes/IncidentFields/incidentfield-Start_Time.json b/Packs/CommonTypes/IncidentFields/incidentfield-Start_Time.json
index b6cadc5b6c..fd4edfb42e 100644
--- a/Packs/CommonTypes/IncidentFields/incidentfield-Start_Time.json
+++ b/Packs/CommonTypes/IncidentFields/incidentfield-Start_Time.json
@@ -12,7 +12,8 @@
         "Exabeam Incident",
         "Microsoft Sentinel Incident",
         "Graph Security Alert",
-        "CrowdStrike Falcon IDP Detection"
+        "CrowdStrike Falcon IDP Detection",
+        "Stamus Networks DoC"
     ],
     "breachScript": "",
     "caseInsensitive": true,
diff --git a/Packs/CommonTypes/ReleaseNotes/3_3_85.md b/Packs/CommonTypes/ReleaseNotes/3_3_85.md
new file mode 100644
index 0000000000..d5e0ac854d
--- /dev/null
+++ b/Packs/CommonTypes/ReleaseNotes/3_3_85.md
@@ -0,0 +1,4 @@
+
+#### Incident Fields
+Added the **Stamus Networks DoC** incident type to the following incident fields:
+- **Start Time**
diff --git a/Packs/CommonTypes/pack_metadata.json b/Packs/CommonTypes/pack_metadata.json
index 4910b45354..b9db93c1c4 100644
--- a/Packs/CommonTypes/pack_metadata.json
+++ b/Packs/CommonTypes/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Common Types",
     "description": "This Content Pack will get you up and running in no-time and provide you with the most commonly used incident & indicator fields and types.",
     "support": "xsoar",
-    "currentVersion": "3.3.84",
+    "currentVersion": "3.3.85",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/Stamus/.pack-ignore b/Packs/Stamus/.pack-ignore
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/Packs/Stamus/.secrets-ignore b/Packs/Stamus/.secrets-ignore
new file mode 100644
index 0000000000..3790503f35
--- /dev/null
+++ b/Packs/Stamus/.secrets-ignore
@@ -0,0 +1,7 @@
+10.11.13.101
+https://10.136.0.72
+10.136.0.72
+10.7.5.101
+95.142.46.236
+https://scs.my.org
+217.116.0.227
\ No newline at end of file
diff --git a/Packs/Stamus/Author_image.png b/Packs/Stamus/Author_image.png
new file mode 100644
index 0000000000000000000000000000000000000000..4ee20d06cfeff9e8bba7fbf9ef60bd95ff510ba3
GIT binary patch
literal 9773
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

literal 0
HcmV?d00001

diff --git a/Packs/Stamus/Classifiers/classifier-Stamus_Networks_incoming_mapper.json b/Packs/Stamus/Classifiers/classifier-Stamus_Networks_incoming_mapper.json
new file mode 100644
index 0000000000..d269f58584
--- /dev/null
+++ b/Packs/Stamus/Classifiers/classifier-Stamus_Networks_incoming_mapper.json
@@ -0,0 +1,62 @@
+{
+    "description": "Stamus Networks Incoming Mapper",
+    "feed": false,
+    "id": "Stamus Networks incoming mapper",
+    "mapping": {
+        "Stamus Networks DoC": {
+            "dontMapEventToLabels": false,
+            "internalMapping": {
+                "Threat Family Name": {
+                    "simple": "family"
+                },
+                "StamusFamilyDescription": {
+                    "simple": "family_description"
+                },
+                "StamusFamilyID": {
+                    "simple": "family_id"
+                },
+                "StamusFamilyLink": {
+                    "simple": "family_link"
+                },
+                "StamusID": {
+                    "simple": "id"
+                },
+                "StamusKillchain": {
+                    "simple": "kill_chain"
+                },
+                "StamusTarget": {
+                    "simple": "target"
+                },
+                "StamusTargettype": {
+                    "simple": "target_type"
+                },
+                "StamusTenant": {
+                    "simple": "tenant"
+                },
+                "StamusThreatDescription": {
+                    "simple": "threat_description"
+                },
+                "StamusThreatId": {
+                    "simple": "threat_id"
+                },
+                "StamusThreatLink": {
+                    "simple": "threat_link"
+                },
+                "Start Time": {
+                    "simple": "timestamp"
+                },
+                "Threat Name": {
+                    "simple": "threat"
+                }
+            }
+        },
+        "dbot_classification_incident_type_all": {
+            "dontMapEventToLabels": false,
+            "internalMapping": {}
+        }
+    },
+    "name": "Stamus Networks incoming mapper",
+    "type": "mapping-incoming",
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyDescription.json b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyDescription.json
new file mode 100644
index 0000000000..2f6f0b38ec
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyDescription.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusfamilydescription",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusfamilydescription",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusFamilyDescription",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyID.json b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyID.json
new file mode 100644
index 0000000000..c614b5d4d7
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyID.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusfamilyid",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusfamilyid",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusFamilyID",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyLink.json b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyLink.json
new file mode 100644
index 0000000000..91b4025057
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusFamilyLink.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusfamilylink",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusfamilylink",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusFamilyLink",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusHostFirstSeen.json b/Packs/Stamus/IncidentFields/incidentfield-StamusHostFirstSeen.json
new file mode 100644
index 0000000000..769a9e2b8c
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusHostFirstSeen.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamushostfirstseen",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamushostfirstseen",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "Stamus Host First Seen",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "date",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusHostLastSeen.json b/Packs/Stamus/IncidentFields/incidentfield-StamusHostLastSeen.json
new file mode 100644
index 0000000000..324bd2842f
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusHostLastSeen.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamushostlastseen",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamushostlastseen",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "Stamus Host Last Seen",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "date",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusHostRoles.json b/Packs/Stamus/IncidentFields/incidentfield-StamusHostRoles.json
new file mode 100644
index 0000000000..d236ea0721
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusHostRoles.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamushostroles",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamushostroles",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "Stamus Host Roles",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusID.json b/Packs/Stamus/IncidentFields/incidentfield-StamusID.json
new file mode 100644
index 0000000000..b3a84d1156
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusID.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusid",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusid",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusID",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusKillchain.json b/Packs/Stamus/IncidentFields/incidentfield-StamusKillchain.json
new file mode 100644
index 0000000000..93639e9f7b
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusKillchain.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamuskillchain",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamuskillchain",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusKillchain",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusTarget.json b/Packs/Stamus/IncidentFields/incidentfield-StamusTarget.json
new file mode 100644
index 0000000000..3ffa1dbc58
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusTarget.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamustarget",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamustarget",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusTarget",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusTargettype.json b/Packs/Stamus/IncidentFields/incidentfield-StamusTargettype.json
new file mode 100644
index 0000000000..5a4e514190
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusTargettype.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamustargettype",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamustargettype",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusTargettype",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusTenant.json b/Packs/Stamus/IncidentFields/incidentfield-StamusTenant.json
new file mode 100644
index 0000000000..3396c65b6a
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusTenant.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamustenant",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamustenant",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusTenant",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusThreatDescription.json b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatDescription.json
new file mode 100644
index 0000000000..6a27d20c92
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatDescription.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusthreatdescription",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusthreatdescription",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusThreatDescription",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusThreatId.json b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatId.json
new file mode 100644
index 0000000000..bac35037d5
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatId.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusthreatid",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusthreatid",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusThreatId",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentFields/incidentfield-StamusThreatLink.json b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatLink.json
new file mode 100644
index 0000000000..e62e66687e
--- /dev/null
+++ b/Packs/Stamus/IncidentFields/incidentfield-StamusThreatLink.json
@@ -0,0 +1,30 @@
+{
+    "associatedToAll": false,
+    "associatedTypes": [
+        "Stamus Networks DoC"
+    ],
+    "caseInsensitive": true,
+    "cliName": "stamusthreatlink",
+    "closeForm": true,
+    "content": true,
+    "editForm": true,
+    "group": 0,
+    "hidden": false,
+    "id": "incident_stamusthreatlink",
+    "isReadOnly": false,
+    "locked": false,
+    "name": "StamusThreatLink",
+    "neverSetAsRequired": false,
+    "openEnded": false,
+    "ownerOnly": false,
+    "required": false,
+    "sla": 0,
+    "system": false,
+    "threshold": 72,
+    "type": "shortText",
+    "unmapped": false,
+    "unsearchable": true,
+    "useAsKpi": false,
+    "version": -1,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json b/Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json
new file mode 100644
index 0000000000..c748e4b3a1
--- /dev/null
+++ b/Packs/Stamus/IncidentTypes/incidenttype-Stamus_Networks.json
@@ -0,0 +1,28 @@
+{
+    "autorun": true,
+    "color": "#92F4EF",
+    "days": 0,
+    "daysR": 0,
+    "default": false,
+    "detached": false,
+    "disabled": false,
+    "extractSettings": {
+        "fieldCliNameToExtractSettings": {},
+        "mode": "Specific"
+    },
+    "hours": 0,
+    "hoursR": 0,
+    "id": "Stamus Networks DoC",
+    "layout": "Stamus Networks DoC Layout",
+    "locked": false,
+    "name": "Stamus Networks DoC",
+    "onChangeRepAlg": 0,
+    "playbookId": "Stamus Networks - Get Extra Data",
+    "readonly": false,
+    "reputationCalc": 0,
+    "system": false,
+    "version": -1,
+    "weeks": 0,
+    "weeksR": 0,
+    "fromVersion": "6.9.0"
+}
\ No newline at end of file
diff --git a/Packs/Stamus/Integrations/Stamus/README.md b/Packs/Stamus/Integrations/Stamus/README.md
new file mode 100644
index 0000000000..114f05f7d2
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/README.md
@@ -0,0 +1,118 @@
+[Get Declaration of Compromises from Stamus Security Platform and build Incidents. Then get related artifacts, events and Host Insight information]
+This integration was integrated and tested with version 39.0.1 of Stamus Security Platform
+
+## Configure Stamus on Cortex XSOAR
+
+1. Navigate to **Settings** > **Integrations** > **Servers & Services**.
+2. Search for Stamus.
+3. Click **Add instance** to create and configure a new integration instance.
+
+    | **Parameter** | **Description** | **Required** |
+    | --- | --- | --- |
+    | Stamus Central Server |  | True |
+    | API Key | The API Key to use for connection | True |
+    | Trust any certificate (not secure) |  | False |
+    | Use system proxy settings |  | False |
+    | Incident type |  | False |
+    | Fetch incidents |  | False |
+    | Maximum number of incidents per fetch |  | False |
+    | First fetch time |  | False |
+
+4. Click **Test** to validate the URLs, token, and connection.
+
+## Commands
+
+You can execute these commands from the Cortex XSOAR CLI, as part of an automation, or in a playbook.
+After you successfully execute a command, a DBot message appears in the War Room with the command details.
+
+### stamus-check-ioc
+
+***
+[Get events with IOC key/value filter]
+
+#### Base Command
+
+`stamus-check-ioc`
+
+#### Input
+
+| **Argument Name** | **Description** | **Required** |
+| --- | --- | --- |
+| indicator_key | [Indicator of Compromise key]. | Required | 
+| indicator_value | [Indicator of Compromise value]. | Required | 
+
+#### Context Output
+
+| **Path** | **Type** | **Description** |
+| --- | --- | --- |
+| StamusIntegration.IOC | String | \[Fetch events matching an IOC.\] | 
+| StamusIntegration.IOC.timestamp | String | \[Timestamp of the event\] | 
+| StamusIntegration.IOC.src_ip | String | \[Source IP of the event\] | 
+| StamusIntegration.IOC.dest_ip | String | \[Destination IP of the event\] | 
+| StamusIntegration.IOC.event_type | String | \[Type of the event - can be multitude, example: HTTP,SMB,DNS,Flow,TLS,KRB5,FTP etc\] | 
+
+### stamus-get-host-insight
+
+***
+[Get Host Insights information]
+
+#### Base Command
+
+`stamus-get-host-insight`
+
+#### Input
+
+| **Argument Name** | **Description** | **Required** |
+| --- | --- | --- |
+| ip | [IP to get Host Insights information]. | Required | 
+
+#### Context Output
+
+| **Path** | **Type** | **Description** |
+| --- | --- | --- |
+| StamusIntegration.HostInsights | String | \[Fetch information about a host known by Host Insight module\] | 
+| StamusIntegration.HostInsights.ip | String | \[Stamus Host Insights IP address\] | 
+| StamusIntegration.HostInsights.host_id.client_service.first_seen | String | \[Timestamp of first time seen\] | 
+| StamusIntegration.HostInsights.host_id.client_service | String | \[Client network service detected\] | 
+| StamusIntegration.HostInsights.host_id.services.proto | String | \[Network services protocol\] | 
+| StamusIntegration.HostInsights.host_id.services.port | String | \[Network services port\] | 
+| StamusIntegration.HostInsights.host_id.services.values.first_seen | String | \[Network services for the corresponding application protocol first time seen\] | 
+| StamusIntegration.HostInsights.host_id.services.values.last_seen | String | \[Network services for the corresponding application protocol last time seen\] | 
+| StamusIntegration.HostInsights.host_id.services.values.app_proto | String | \[Network services application layer protocol\] | 
+| StamusIntegration.HostInsights.host_id.services.services_count | Number | \[Number of network services detected on the host\] | 
+| StamusIntegration.HostInsights.host_id.client_service.name | String | \[Type of client network service detected - can be HTTP,KRB5,TLS,DCERPC,SMB etc\] | 
+| StamusIntegration.HostInsights.host_id.hostname.host | String | \[Hostname detected on the host\] | 
+| StamusIntegration.HostInsights.host_id.username.user | String | \[Username detected loggin in on the host\] | 
+| StamusIntegration.HostInsights.host_id.http\.user_agent.agent | String | \[HTTP User-Agent detected being used from the host\] | 
+| StamusIntegration.HostInsights.host_id.tls\.ja3.hash | String | \[TLS JA3 hash detected being used from the host\] | 
+| StamusIntegration.HostInsights.host_id.tls\.ja3s.hash | String | \[TLS JA3S hash detected being used from the host\] | 
+
+### stamus-get-doc-events
+
+***
+[Get events for a Declaration of Compromise using the Stamus ID]
+
+#### Base Command
+
+`stamus-get-doc-events`
+
+#### Input
+
+| **Argument Name** | **Description** | **Required** |
+| --- | --- | --- |
+| id | [Stamus ID used to get related information]. | Required | 
+
+#### Context Output
+
+| **Path** | **Type** | **Description** |
+| --- | --- | --- |
+| StamusIntegration.RelatedEvents | String | \[Get events for a Declaration of Compromise.\] | 
+| StamusIntegration.RelatedEvents.timestamp | String | \[Timestamp of the Stamus event\] | 
+| StamusIntegration.RelatedEvents.stamus.asset | String | \[Stamus asset\] | 
+| StamusIntegration.RelatedEvents.offender | String | \[Offender, against the Stamus asset\] | 
+| StamusIntegration.RelatedEvents.killchain | String | \[Killchain stage\] | 
+| StamusIntegration.RelatedEvents.method | String | \[Stamus method triggered\] | 
+| StamusIntegration.RelatedEvents.info | String | \[Extra Information\] | 
+| StamusIntegration.RelatedEvents.src_ip | String | \[Source IP of the event\] | 
+| StamusIntegration.RelatedEvents.dest_ip | String | \[Destination IP of the event\] | 
+| StamusIntegration.RelatedEvents.app_proto | String | \[Application protocol of the event\] | 
\ No newline at end of file
diff --git a/Packs/Stamus/Integrations/Stamus/Stamus.py b/Packs/Stamus/Integrations/Stamus/Stamus.py
new file mode 100644
index 0000000000..40b998000a
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/Stamus.py
@@ -0,0 +1,376 @@
+"""Stamus Integration for Cortex XSOAR (aka Demisto)
+
+This is an integration with Stamus Security Platform.
+"""
+# mocks: is removed by xsoar server
+import demistomock as demisto
+from CommonServerPython import *  # noqa # pylint: disable=unused-wildcard-import
+from CommonServerUserPython import *  # noqa
+#
+
+import urllib3
+from datetime import datetime
+from collections.abc import Iterable
+from typing import Any
+
+# Disable insecure warnings
+urllib3.disable_warnings()
+
+''' CONSTANTS '''
+
+DATE_FORMAT = '%Y-%m-%dT%H:%M:%S.%f%z'
+PAGE_SIZE = 200  # https://xsoar.pan.dev/docs/integrations/fetching-incidents#fetch-limit
+ARRAY_ITEMS = ['client_service', 'hostname', 'username', 'http.user_agent', 'tls.ja3', 'ssh.client', 'roles']
+ITEM_KEY = {'client_service': 'name', 'hostname': 'host', 'username': 'user', 'http.user_agent': 'agent',
+            'tls.ja3': 'hash', 'ssh.client': 'software_version', 'roles': 'name', 'services': 'app_proto'}
+FIELDS_SUBSTITUTION = (['http.user_agent', 'http_user_agent'], ['http.user_agent_count', 'http_user_agent_count'],
+                       ['tls.ja3', 'tls_ja3'], ['tls.ja3_count', 'tls_ja3_count'], ['ssh.client', 'ssh_client'],
+                       ['ssh.client_count', 'ssh_client_count'])
+FIELDS_SUBSTITUTION_DICT = {'http.user_agent': 'http_user_agent', 'http.user_agent_count': 'http_user_agent_count',
+                            'tls.ja3': 'tls_ja3', 'tls.ja3_count': 'tls_ja3_count', 'ssh.client': 'ssh_client',
+                            'ssh.client_count': 'ssh_client_count'}
+
+''' CLIENT CLASS '''
+
+
+class Client(BaseClient):
+    """Client class to interact with the service API
+
+    This Client implements API calls, and does not contain any XSOAR logic.
+    Should only do requests and return data.
+    It inherits from BaseClient defined in CommonServer Python.
+    Most calls use _http_request() that handles proxy, SSL verification, etc.
+    For this  implementation, no special attributes defined
+    """
+
+    def test_connection(self):
+        self._http_request(
+            method='GET',
+            params={},
+            url_suffix='/rest/')
+
+    def get_events(self, _id: str) -> dict[str, Any]:
+        """Get all related events with _id that comes from incidents (dbotMirrorId)
+
+        Args:
+            _id (str): ID used to get all related events
+
+        Returns:
+            dict: dict containing all related events
+        """
+        return self._http_request(
+            method='GET',
+            params={},
+            url_suffix=f'/rest/appliances/threat_history_incident/{_id}/get_events')
+
+    def get_by_ioc(self, key, value):
+        """Get events from Stamus Central Server
+
+        Args:
+            ip (str): IP address
+
+        Returns:
+            dict: dict containing Host ID informations
+        """
+        return self._http_request(
+            method='GET',
+            params={'qfilter': f'{key}:{escape(value)}'},
+            url_suffix='/rest/rules/es/events_tail/')
+
+    def get_host_id(self, ip: str) -> dict[str, Any]:
+        """Get host id from Stamus Central Server
+
+        Args:
+            ip (str): IP address
+
+        Returns:
+            dict: dict containing Host ID informations
+        """
+        return self._http_request(
+            method='GET',
+            params={},
+            url_suffix=f'/rest/appliances/host_id/{ip}')
+
+    def get_incidents(self, timestamp: int) -> Iterable:
+        """Get incidents from Stamus Central Server
+
+        Args:
+            timestamp (int): start timestamp (epoch in seconds) for the search.
+
+        Returns:
+            list: list of kill chains changes
+        """
+        params = {'timestamp': str(timestamp), 'page_size': PAGE_SIZE}
+
+        response = self._http_request(
+            method='GET',
+            params=params,
+            url_suffix='/rest/appliances/threat_history_incident/')
+
+        yield from response.get('results', [])
+
+
+''' HELPER FUNCTIONS '''
+
+
+def escape(string):
+    '''
+    Escape other elasticsearch reserved characters
+    '''
+    return string. \
+        replace('=', r'\='). \
+        replace('+', r'\+'). \
+        replace('-', r'\-'). \
+        replace('&', r'\&'). \
+        replace('|', r'\|'). \
+        replace('!', r'\!'). \
+        replace('(', r'\('). \
+        replace(')', r'\)'). \
+        replace('{', r'\{'). \
+        replace('}', r'\}'). \
+        replace('[', r'\['). \
+        replace(']', r'\]'). \
+        replace('^', r'\^'). \
+        replace('"', r'\"'). \
+        replace('~', r'\~'). \
+        replace(':', r'\:'). \
+        replace('/', r'\/'). \
+        replace('\\', r'\\')
+
+
+def convert_to_demisto_severity(severity: int) -> int:
+    """
+    Maps severity to Cortex XSOAR severity.
+    Converts stamus alert severity level to Cortex XSOAR incident
+    severity (1 to 4) => (Low to CRITICAL).
+
+    Args:
+        severity (str): severity as returned from the HelloWorld API.
+        first_fetch_time (int): The first fetch time as configured in the integration params.
+
+    Returns:
+        int: Cortex XSOAR Severity (1 to 4)
+    """
+    return {
+        1: IncidentSeverity.CRITICAL,
+        2: IncidentSeverity.HIGH,
+        3: IncidentSeverity.MEDIUM,
+        4: IncidentSeverity.LOW,
+    }.get(severity, IncidentSeverity.UNKNOWN)
+
+
+def get_command_results(data: dict[str, Any], table: str, context: str) -> CommandResults:
+    return CommandResults(
+        readable_output=table,
+        outputs_prefix=f'StamusIntegration.{context}',
+        outputs=data
+    )
+
+# TODO: ADD HERE ANY HELPER FUNCTION YOU MIGHT NEED (if any)
+
+
+''' COMMAND FUNCTIONS '''
+
+
+def fetch_by_ioc(client: Client, args: dict[str, Any]) -> CommandResults:
+    """Fetch events from indicator of compromise
+    """
+    results = client.get_by_ioc(args['indicator_key'], args['indicator_value']).get('results', [])
+    table = tableToMarkdown('IOC Matches', results, headers=['timestamp', 'src_ip', 'dest_ip', 'event_type'])
+    return get_command_results(results, table, 'IOC')
+
+
+def fetch_events(client: Client, args: dict[str, Any]) -> CommandResults:
+    """Fetch events from an incident ID
+    """
+    results = client.get_events(str(args.get('id'))).get('results', [])
+    for result in results:
+        result['method'] = result.get('alert', {}).get('signature', 'algorithmic detection')
+        result['info'] = ""
+        if result.get("hostname_info"):
+            result['info'] = 'Hostname: %s' % (result.get('hostname_info', {}).get('host', 'unknown'))
+        result['asset'] = result.get('stamus', {}).get('asset', 'unknown')
+        result['offender'] = result.get('stamus', {}).get('source', 'unknown')
+        result['killchain'] = result.get('stamus', {}).get('kill_chain', 'unknown')
+    headers = ['timestamp', 'asset', 'offender', 'killchain', 'method', 'info', 'src_ip', 'dest_ip', 'app_proto']
+    table = tableToMarkdown('Individual Events List', results, headers=headers)
+    return get_command_results(results, table, 'RelatedEvents')
+
+
+def linearize_host_id(host: dict) -> list:
+    """Host Insights structure is nested and this function convert it to
+    a suite of events.
+    """
+    host_info = []
+    host_data = host['host_id']
+    item_data = {'ip': host['ip']}
+    item_data['event_type'] = 'discovery'
+    item_data['first_seen'] = host_data['first_seen']
+    if 'last_seen' in host_data:
+        item_data['last_seen'] = host_data['last_seen']
+    if 'net_info' in host_data:
+        item_data['net_info'] = host_data['net_info']
+    host_services = host_data.get('services')
+    if host_services is not None:
+        item_data['type'] = 'service'
+        for service in host_services:
+            for value in service['values']:
+                item_data['service'] = value
+                item_data['service']['proto'] = service['proto']
+                item_data['service']['port'] = service['port']
+                item_data['value'] = value['app_proto']
+                if '+' in value['first_seen'] and value['first_seen'][-3] != ':':
+                    item_data['timestamp'] = value['first_seen'][:-2] + ':' + value['first_seen'][-2:]
+                else:
+                    item_data['timestamp'] = value['first_seen']
+                host_info.append(item_data.copy())
+        item_data.pop('service')
+    for key in ARRAY_ITEMS:
+        if key in host_data:
+            item_data['type'] = FIELDS_SUBSTITUTION_DICT.get(key, key)
+            for item in host_data[key]:
+                if key in FIELDS_SUBSTITUTION_DICT:
+                    item_data[FIELDS_SUBSTITUTION_DICT[key]] = item
+                else:
+                    item_data[key] = item
+                item_data['value'] = item[ITEM_KEY[key]]
+                item_data['timestamp'] = item['first_seen']
+                host_info.append(item_data.copy())
+            item_data.pop('timestamp')
+            if key in FIELDS_SUBSTITUTION_DICT:
+                item_data.pop(FIELDS_SUBSTITUTION_DICT[key])
+            else:
+                item_data.pop(key)
+    return host_info
+
+
+def fetch_host_id(client: Client, args: dict[str, Any]) -> CommandResults:
+    """Fetch host_id info from an IP
+    """
+    result = client.get_host_id(str(args.get('ip')))
+    host_info = linearize_host_id(result)
+
+    table = tableToMarkdown('Host Insight', host_info, headers=['timestamp', 'ip', 'type', 'value'])
+
+    return get_command_results(result, table, 'HostInsights')
+
+
+def fetch_incidents(client: Client, timestamp: int) -> tuple[dict[str, int], list[dict]]:
+    """Fetch last alerts and build new incident structs
+    """
+
+    incidents: list[dict] = []
+    next_run = {'timestamp': timestamp}
+
+    for idx, alert in enumerate(client.get_incidents(timestamp)):
+        incident = {
+            'name': f'{alert.get("target")}_incident_{idx}',
+            # Stamus ID used to get related events
+            'dbotMirrorId': str(alert.get('id')),
+            'details': alert.get('threat_description'),
+            'occurred': alert.get('timestamp'),
+            'rawJSON': json.dumps(alert),
+            'type': alert.get('target_type'),
+        }
+        incidents.append(incident)
+
+        timestamp = int(datetime.strptime(alert['timestamp'], DATE_FORMAT).timestamp())
+        if timestamp > next_run['timestamp']:
+            next_run['timestamp'] = timestamp + 1
+
+    return next_run, incidents
+
+
+def test_module(client: Client) -> str:
+    """Tests API connectivity and authentication'
+
+    Returning 'ok' indicates that the integration works like it is supposed to.
+    Connection to the service is successful.
+    Raises exceptions if something goes wrong.
+
+    :type client: ``Client``
+    :param Client: client to use
+
+    :return: 'ok' if test passed, anything else will fail the test.
+    :rtype: ``str``
+    """
+
+    client.test_connection()
+    return 'ok'
+
+
+# TODO: ADD additional command functions that translate XSOAR inputs/outputs to Client
+
+
+''' MAIN FUNCTION '''
+
+
+def main() -> None:
+    """main function, parses params and runs command functions
+
+    :return:
+    :rtype:
+    """
+
+    params = demisto.params()
+    args = demisto.args()
+    api_token = params.get('credentials', {}).get('password')
+    server_url = params.get('url')
+    proxy = params.get('proxy', False)
+    verify_certificate = not params.get('insecure', False)
+
+    headers = {'Authorization': f'Token {api_token}'}
+
+    try:
+        client = Client(
+            base_url=server_url,
+            verify=verify_certificate,
+            headers=headers,
+            proxy=proxy)
+
+        demisto.debug(f'Command being called is {demisto.command()}')
+
+        if demisto.command() == 'test-module':
+            # This is the call made when pressing the integration Test button.
+            result = test_module(client)
+            return_results(result)
+
+        elif demisto.command() == 'fetch-incidents':
+            first_fetch_time = arg_to_datetime(
+                arg=params.get('first_fetch', '3 days'),
+                arg_name='First fetch time',
+                required=True
+            )
+            if first_fetch_time is None:
+                raise Exception('Invalid first fetch time')
+
+            timestamp = int(first_fetch_time.timestamp())
+            last_fetch = demisto.getLastRun().get('timestamp', None)
+            timestamp = timestamp if last_fetch is None else int(last_fetch)
+
+            next_run, incidents = fetch_incidents(
+                client=client,
+                timestamp=timestamp,
+            )
+
+            demisto.setLastRun(next_run)
+            demisto.incidents(incidents)
+
+        elif demisto.command() == 'stamus-get-host-insight':
+            return_results(fetch_host_id(client, args))
+
+        elif demisto.command() == 'stamus-get-doc-events':
+            return_results(fetch_events(client, args))
+
+        elif demisto.command() == 'stamus-check-ioc':
+            return_results(fetch_by_ioc(client, args))
+
+    except Exception as e:
+        return_error(f'Failed to execute {demisto.command()} command.\nError:\n{str(e)}')
+
+
+''' ENTRY POINT '''
+
+
+if __name__ in ('__main__', '__builtin__', 'builtins'):
+    main()
diff --git a/Packs/Stamus/Integrations/Stamus/Stamus.yml b/Packs/Stamus/Integrations/Stamus/Stamus.yml
new file mode 100644
index 0000000000..bdc08a43d4
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/Stamus.yml
@@ -0,0 +1,195 @@
+category: Network Security
+commonfields:
+  id: Stamus
+  version: -1
+configuration:
+- defaultvalue: https://example.com/
+  display: Stamus Central Server
+  name: url
+  required: true
+  type: 0
+- displaypassword: API Key
+  additionalinfo: The API Key to use for connection
+  name: credentials
+  required: true
+  hiddenusername: true
+  type: 9
+- display: Trust any certificate (not secure)
+  name: insecure
+  required: false
+  type: 8
+- display: Use system proxy settings
+  name: proxy
+  required: false
+  type: 8
+- display: Incident type
+  name: incidentType
+  required: false
+  type: 13
+  defaultvalue: 'Stamus Networks DoC'
+- display: Fetch incidents
+  name: isFetch
+  required: false
+  type: 8
+- defaultvalue: '200'
+  display: Maximum number of incidents per fetch
+  name: max_fetch
+  required: false
+  type: 0
+  section: Collect
+- defaultvalue: 3 days
+  display: First fetch time
+  name: first_fetch
+  required: false
+  type: 0
+  section: Collect
+description: '[Get Declaration of Compromises from Stamus Security Platform and build Incidents. Then get related artifacts, events and Host Insight information].'
+display: 'Stamus'
+name: Stamus
+script:
+  commands:
+  - arguments:
+    - name: indicator_key
+      default: false
+      description: '[Indicator of Compromise key].'
+      isArray: false
+      required: true
+      secret: false
+    - name: indicator_value
+      default: false
+      description: '[Indicator of Compromise value].'
+      isArray: false
+      required: true
+      secret: false
+    deprecated: false
+    description: '[Get events with IOC key/value filter].'
+    execution: false
+    name: stamus-check-ioc
+    outputs:
+    - contextPath: StamusIntegration.IOC
+      description: '[Fetch events matching an IOC].'
+      type: String
+    - contextPath: StamusIntegration.IOC.timestamp
+      description: '[Timestamp of the event].'
+      type: String
+    - contextPath: StamusIntegration.IOC.src_ip
+      description: '[Source IP of the event].'
+      type: String
+    - contextPath: StamusIntegration.IOC.dest_ip
+      description: '[Destination IP of the event].'
+      type: String
+    - contextPath: StamusIntegration.IOC.event_type
+      description: '[Type of the event - can be multitude, example: HTTP,SMB,DNS,Flow,TLS,KRB5,FTP etc].'
+      type: String
+  - arguments:
+    - default: false
+      description: '[IP to get Host Insights information].'
+      isArray: false
+      name: ip
+      required: true
+      secret: false
+    deprecated: false
+    description: '[Get Host Insights information].'
+    execution: false
+    name: stamus-get-host-insight
+    outputs:
+    - contextPath: StamusIntegration.HostInsights
+      description: '[Fetch information about a host known by Host Insight module].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.ip
+      description: '[Stamus Host Insights IP address].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.client_service.first_seen
+      description: '[Timestamp of first time seen].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.client_service
+      description: '[Client network service detected].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.proto
+      description: '[Network services protocol].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.port
+      description: '[Network services port].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.values.first_seen
+      description: '[Network services for the corresponding application protocol first time seen].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.values.last_seen
+      description: '[Network services for the corresponding application protocol last time seen].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.values.app_proto
+      description: '[Network services application layer protocol].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.services.services_count
+      description: '[Number of network services detected on the host].'
+      type: Number
+    - contextPath: StamusIntegration.HostInsights.host_id.client_service.name
+      description: '[Type of client network service detected - can be HTTP,KRB5,TLS,DCERPC,SMB etc].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.hostname.host
+      description: '[Hostname detected on the host].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.username.user
+      description: '[Username detected loggin in on the host].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.http\.user_agent.agent
+      description: '[HTTP User-Agent detected being used from the host].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.tls\.ja3.hash
+      description: '[TLS JA3 hash detected being used from the host].'
+      type: String
+    - contextPath: StamusIntegration.HostInsights.host_id.tls\.ja3s.hash
+      description: '[TLS JA3S hash detected being used from the host].'
+      type: String
+  - arguments:
+    - default: false
+      description: '[Stamus ID used to get related information].'
+      isArray: false
+      name: id
+      required: true
+      secret: false
+    deprecated: false
+    description: '[Get events for a Declaration of Compromise using the Stamus ID].'
+    execution: false
+    name: stamus-get-doc-events
+    outputs:
+    - contextPath: StamusIntegration.RelatedEvents
+      description: '[Get events for a Declaration of Compromise].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.timestamp
+      description: '[Timestamp of the Stamus event].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.stamus.asset
+      description: '[Stamus asset].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.offender
+      description: '[Offender, against the Stamus asset].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.killchain
+      description: '[Killchain stage].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.method
+      description: '[Stamus method triggered].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.info
+      description: '[Extra Information].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.src_ip
+      description: '[Source IP of the event].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.dest_ip
+      description: '[Destination IP of the event].'
+      type: String
+    - contextPath: StamusIntegration.RelatedEvents.app_proto
+      description: '[Application protocol of the event].'
+      type: String
+  isfetch: true
+  runonce: false
+  script: '-'
+  type: python
+  subtype: python3
+  dockerimage: demisto/python3:3.10.13.72123
+fromversion: 6.9.0
+defaultmapperin: Stamus Networks incoming mapper
+tests:
+- No tests (auto formatted)
\ No newline at end of file
diff --git a/Packs/Stamus/Integrations/Stamus/Stamus_description.md b/Packs/Stamus/Integrations/Stamus/Stamus_description.md
new file mode 100644
index 0000000000..a953291728
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/Stamus_description.md
@@ -0,0 +1,26 @@
+## Stamus Security Platform Integration Help
+
+### Introduction
+
+This integration connect XSOAR with Stamus Security Platform (SSP). It allows XSOAR
+to fetch Declaration of Compromises from SSP and to enrich events with metadata and
+Host Insights information.
+
+### API key generation
+
+To access the REST-API, a user first need to generate a unique token associated to its account. The API accesses are made on the behalf of a given user.
+
+To do that, login to SCS and go under your account settings from the top right of the header’s menu.
+
+From the left side panel, under User Settings, select Edit Token.
+
+If you already generated a token for this account, it will be presented in the Token field, otherwise this field will be empty.
+
+In both cases, to generate a new token, simply click the Regenerate button at the bottom of the page and you should see the Token field updated with a hash value such as 3064d9deadbeef36436daba5531e105123ec0fee.
+
+### Setting up the Integration
+
+To set up the integration you need to specify the base address of the server like `https://scs.my.org/` and the API keys.
+
+Additional options are available such as `Don't Trust any certificate (not secure)` that you need to check if a
+recognized certificate as not been deployed on the Stamus Central Server.
\ No newline at end of file
diff --git a/Packs/Stamus/Integrations/Stamus/Stamus_image.png b/Packs/Stamus/Integrations/Stamus/Stamus_image.png
new file mode 100644
index 0000000000000000000000000000000000000000..ab7b2e2d2bf4faa71e3f1156449d33a95f4be2f3
GIT binary patch
literal 3195
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

literal 0
HcmV?d00001

diff --git a/Packs/Stamus/Integrations/Stamus/Stamus_test.py b/Packs/Stamus/Integrations/Stamus/Stamus_test.py
new file mode 100644
index 0000000000..1f994bd952
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/Stamus_test.py
@@ -0,0 +1,193 @@
+
+import json
+
+
+def util_load_json(path):
+    with open(path, encoding='utf-8') as f:
+        return json.loads(f.read())
+
+
+# TODO: ADD HERE unit tests for every command
+def test_fetch_incidents(requests_mock):
+    """
+    Tests the fetch-incidents command function.
+
+        Given:
+            - requests_mock instance to generate the appropriate get_alert API response,
+              loaded from a local JSON file.
+
+        When:
+            - Running the 'fetch_incidents' command.
+
+        Then:
+            - Checks the output of the command function with the expected output.
+    """
+    from Stamus import Client, fetch_incidents
+
+    url = 'https://stamus-test.com/rest/appliances/threat_history_incident/?timestamp=1689340848&page_size=200'
+    mock_response = util_load_json('test_data/fetch_incidents.json')
+    requests_mock.get(url, json=mock_response)
+
+    client = Client(
+        base_url='https://stamus-test.com',
+        verify=False,
+        headers={
+            'Authentication': 'Bearer some_api_key'
+        }
+    )
+
+    _, new_incidents = fetch_incidents(
+        client=client,
+        timestamp=1689340848
+    )
+
+    assert new_incidents == [{
+        "name": "10.11.13.101_incident_0",
+        "dbotMirrorId": "283115",
+        "rawJSON": json.dumps(mock_response['results'][0]),
+        "details": "description of my custom threat",
+        "occurred": "2023-07-14T15:20:48.231617+02:00",
+        "type": "ip"
+    }]
+
+
+def test_fetch_by_ioc(requests_mock):
+    '''
+        Given:
+            - key/value to check.
+
+        When:
+            - Running the 'fetch_by_ioc'.
+
+        Then:
+            - Checks that results are the same than the ones built in tests.
+    '''
+    from Stamus import Client, fetch_by_ioc, CommandResults, tableToMarkdown, get_command_results
+
+    filter = ('src_ip', '10.7.5.101')
+    url = f'https://stamus-test.com/rest/rules/es/events_tail/?qfilter={filter[0]}%3A{filter[1]}'
+    mock_response = util_load_json('test_data/fetch_by_ioc.json')
+    requests_mock.get(url, json=mock_response)
+
+    client = Client(
+        base_url='https://stamus-test.com',
+        verify=False,
+        headers={
+            'Authentication': 'Bearer some_api_key'
+        }
+    )
+
+    events = fetch_by_ioc(
+        client,
+        args={
+            'indicator_key': filter[0],
+            'indicator_value': filter[1]
+        }
+    )
+    results = mock_response.get('results', [])
+    table = tableToMarkdown('IOC Matches', results, headers=['timestamp', 'src_ip', 'dest_ip', 'event_type'])
+
+    cmd_results = get_command_results(results, table, 'IOC')
+
+    for key in cmd_results.__dict__:
+        assert cmd_results.__dict__.get(key) == events.__dict__.get(key)
+    assert events.raw_response == mock_response['results']
+    assert isinstance(events, CommandResults)
+    assert events.outputs_prefix == 'StamusIntegration.IOC'
+
+
+def test_fetch_events(requests_mock):
+    '''
+        Given:
+            - An id address to check.
+
+        When:
+            - Running the 'fetch_events'.
+
+        Then:
+            - Checks that results are the same than the ones built in tests.
+    '''
+    from Stamus import Client, fetch_events, CommandResults, tableToMarkdown, get_command_results
+
+    id_to_check = 3
+    url = f'https://stamus-test.com/rest/appliances/threat_history_incident/{id_to_check}/get_events'
+    mock_response = util_load_json('test_data/fetch_events.json')
+    requests_mock.get(url, json=mock_response)
+
+    client = Client(
+        base_url='https://stamus-test.com',
+        verify=False,
+        headers={
+            'Authentication': 'Bearer some_api_key'
+        }
+    )
+
+    events = fetch_events(
+        client,
+        args={'id': id_to_check}
+    )
+    results = mock_response.get('results', [])
+    for result in results:
+        result['method'] = result.get('alert', {}).get('signature', 'algorithmic detection')
+        result['info'] = ""
+        if result.get("hostname_info"):
+            result['info'] = 'Hostname: %s' % (result.get('hostname_info', {}).get('host', 'unknown'))
+        result['asset'] = result.get('stamus', {}).get('asset', 'unknown')
+        result['offender'] = result.get('stamus', {}).get('source', 'unknown')
+        result['killchain'] = result.get('stamus', {}).get('kill_chain', 'unknown')
+    headers = ['timestamp', 'asset', 'offender', 'killchain', 'method', 'info', 'src_ip', 'dest_ip', 'app_proto']
+    table = tableToMarkdown('Individual Events List', results, headers=headers)
+
+    cmd_results = get_command_results(results, table, 'RelatedEvents')
+
+    for key in cmd_results.__dict__:
+        assert cmd_results.__dict__.get(key) == events.__dict__.get(key)
+    assert events.raw_response == mock_response['results']
+    assert isinstance(events, CommandResults)
+    assert events.outputs_prefix == 'StamusIntegration.RelatedEvents'
+
+
+def test_fetch_host_id(requests_mock):
+    '''
+        Given:
+            - An ip address to check.
+
+        When:
+            - Running the 'fetch_host_id'.
+
+        Then:
+            - Checks that results are the same than the ones built in tests.
+    '''
+    from Stamus import Client, fetch_host_id, CommandResults, tableToMarkdown, get_command_results, linearize_host_id
+
+    ip = '217.116.0.227'
+    url = f'https://stamus-test.com/rest/appliances/host_id/{ip}'
+    mock_response = util_load_json('test_data/fetch_host_id.json')
+    requests_mock.get(url, json=mock_response)
+
+    client = Client(
+        base_url='https://stamus-test.com',
+        verify=False,
+        headers={
+            'Authentication': 'Bearer some_api_key'
+        }
+    )
+
+    events = fetch_host_id(
+        client,
+        args={'ip': ip}
+    )
+    results = mock_response
+    headers = ['timestamp', 'ip', 'type', 'value']
+    host_info = linearize_host_id(results)
+    table = tableToMarkdown('Host Insight', host_info, headers=headers)
+
+    cmd_results = get_command_results(results, table, 'HostInsights')
+
+    for key in cmd_results.__dict__:
+        assert cmd_results.__dict__.get(key) == events.__dict__.get(key)
+    assert cmd_results.readable_output == table
+    assert cmd_results.outputs == results
+    assert events.raw_response == results
+    assert isinstance(events, CommandResults)
+    assert events.outputs_prefix == 'StamusIntegration.HostInsights'
diff --git a/Packs/Stamus/Integrations/Stamus/command_examples b/Packs/Stamus/Integrations/Stamus/command_examples
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/Packs/Stamus/Integrations/Stamus/test_data/fetch_by_ioc.json b/Packs/Stamus/Integrations/Stamus/test_data/fetch_by_ioc.json
new file mode 100644
index 0000000000..de115f2671
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/test_data/fetch_by_ioc.json
@@ -0,0 +1,77 @@
+{
+    "results": [{
+        "app_proto": "http",
+        "see_name": "stamus-central-server",
+        "type": "json-log",
+        "tags": [
+            "beats_input_codec_json_applied"
+        ],
+        "dest_port": 80,
+        "flow_id": 758953541069220,
+        "input": {
+            "type": "log"
+        },
+        "src_ip": "10.7.5.101",
+        "proto": "TCP",
+        "tcp": {
+            "syn": true,
+            "state": "established",
+            "tcp_flags": "1a",
+            "tcp_flags_ts": "1a",
+            "ack": true,
+            "tcp_flags_tc": "1a",
+            "psh": true
+        },
+        "see_id": "0a00af96dd83",
+        "ether": {
+            "src_macs": [
+                "00:08:02:1c:47:ae"
+            ],
+            "dest_macs": [
+                "20:e5:2a:b6:93:f1"
+            ]
+        },
+        "flow": {
+            "tx_cnt": 1,
+            "start": "2023-07-25T13:20:50.176707+0200",
+            "age": 135,
+            "pkts_toserver": 54,
+            "bytes_toclient": 3156,
+            "reason": "timeout",
+            "state": "established",
+            "pkts_toclient": 54,
+            "alerted": true,
+            "end": "2023-07-25T13:23:05.700097+0200",
+            "bytes_toserver": 3225
+        },
+        "in_iface": "tppdummy0",
+        "host": "host",
+        "@version": "1",
+        "metadata": {
+            "flowbits": [
+                "min.gethttp"
+            ]
+        },
+        "src_port": 49669,
+        "@timestamp": "2023-07-25T11:29:08.108Z",
+        "timestamp": "2023-07-25T13:29:08.108744+0200",
+        "agent": {
+            "hostname": "nico-probe-2-ssp-2",
+            "id": "9f305fa4-6db1-485c-81f9-598dce1469e3",
+            "type": "filebeat",
+            "ephemeral_id": "068737ef-d3c2-4903-b71b-5a955bd32ba5",
+            "version": "7.17.8",
+            "name": "host"
+        },
+        "dest_ip": "95.142.46.236",
+        "event_type": "flow",
+        "log": {
+            "file": {
+                "path": "/var/log/suricata/eve-0.json"
+            },
+            "offset": 443949853
+        },
+        "logger": "logstash-manager",
+        "_id": "oa3YjIkBWK2kIefhKqRO"
+    }]
+}
diff --git a/Packs/Stamus/Integrations/Stamus/test_data/fetch_events.json b/Packs/Stamus/Integrations/Stamus/test_data/fetch_events.json
new file mode 100644
index 0000000000..a37ba2f63c
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/test_data/fetch_events.json
@@ -0,0 +1,175 @@
+{
+  "results": [{
+    "@timestamp": "2023-07-25T09:07:24.192Z",
+    "@version": "1",
+    "_id": "IKpNjIkBWK2kIefhuEoN",
+    "agent": {
+      "ephemeral_id": "068737ef-d3c2-4903-b71b-5a955bd32ba5",
+      "hostname": "host",
+      "id": "9f305fa4-6db1-485c-81f9-598dce1469e3",
+      "name": "host",
+      "type": "filebeat",
+      "version": "7.17.8"
+    },
+    "alert": {
+      "action": "allowed",
+      "category": "A Network Trojan was detected",
+      "gid": 2,
+      "metadata": {
+        "affected_product": [
+          "Windows_XP_Vista_7_8_10_Server_32_64_Bit"
+        ],
+        "attack_target": [
+          "Client_Endpoint"
+        ],
+        "created_at": [
+          "2018_11_29"
+        ],
+        "deployment": [
+          "Perimeter"
+        ],
+        "former_category": [
+          "TROJAN"
+        ],
+        "malware_family": [
+          "IcedID"
+        ],
+        "signature_severity": [
+          "Major"
+        ],
+        "updated_at": [
+          "2020_09_16"
+        ]
+      },
+      "rev": 5,
+      "severity": 1,
+      "signature": "IcedID WebSocket Request",
+      "signature_id": 1002026673
+    },
+    "alerted": true,
+    "app_proto": "http",
+    "asset": "10.7.5.101",
+    "dest_ip": "95.142.46.236",
+    "dest_port": 80,
+    "ether": {
+      "dest_mac": "20:e5:2a:b6:93:f1",
+      "src_mac": "00:08:02:1c:47:ae"
+    },
+    "event_type": "stamus",
+    "flow": {
+      "bytes_toclient": 351,
+      "bytes_toserver": 336,
+      "dest_ip": "95.142.46.236",
+      "dest_port": 80,
+      "pkts_toclient": 3,
+      "pkts_toserver": 4,
+      "src_ip": "10.7.5.101",
+      "src_port": 49669,
+      "start": "2023-07-25T11:07:24.016182+0200"
+    },
+    "flow_id": 1195403822721444,
+    "geoip": {
+      "continent": {
+        "code": "EU",
+        "geoname_id": 6255148,
+        "name": "Europe"
+      },
+      "continent_code": "EU",
+      "coordinate": [
+        37.6068,
+        55.7386
+      ],
+      "country": {
+        "geoname_id": 2017370,
+        "iso_code": "RU",
+        "name": "Russia"
+      },
+      "country_code2": "RU",
+      "country_code3": "RU",
+      "country_name": "Russia",
+      "ip": "95.142.46.236",
+      "latitude": 55.7386,
+      "location": {
+        "lat": 55.7386,
+        "lon": 37.6068
+      },
+      "longitude": 37.6068,
+      "registered_country": {
+        "geoname_id": 2017370,
+        "iso_code": "RU",
+        "name": "Russia"
+      },
+      "timezone": ""
+    },
+    "host": "nico-probe-2-ssp-2",
+    "hostname_info": {
+      "domain": "germakhya.xyz",
+      "domain_without_tld": "germakhya",
+      "host": "germakhya.xyz",
+      "tld": "xyz",
+      "url": "germakhya.xyz"
+    },
+    "http": {
+      "hostname": "germakhya.xyz",
+      "http_method": "GET",
+      "length": 0,
+      "protocol": "HTTP/1.1",
+      "server": "openresty",
+      "status": 101,
+      "url": "/data2.php?697F79036433CFE3"
+    },
+    "in_iface": "tppdummy0",
+    "info": "Hostname: germakhya.xyz",
+    "input": {
+      "type": "log"
+    },
+    "killchain": "command_and_control",
+    "log": {
+      "file": {
+        "path": "/var/log/suricata/eve-stamus-0.json"
+      },
+      "offset": 93437693
+    },
+    "logger": "logstash-manager",
+    "metadata": {
+      "flowbits": [
+        "min.gethttp"
+      ]
+    },
+    "method": "IcedID WebSocket Request",
+    "offender": "95.142.46.236",
+    "packet": "IOUqtpPxAAgCHEeuCABFAAAqISRAAIAGO8QKBwVlX44u7MIFAFC0RXwWYCcE0VAY+jc99QAAgg0=",
+    "packet_info": {
+      "linktype": 1
+    },
+    "payload_printable": "GET /data2.php?697F79036433CFE3 HTTP/1.1\\r\\nHost: germakhya.xyz\\r\\nUpgrade: websocket\\r\\nConnection: Upgrade\\r\\n\\r\\n",
+    "proto": "TCP",
+    "see_id": "0a00af96dd83",
+    "see_name": "stamus-central-server",
+    "src_ip": "10.7.5.101",
+    "src_port": 49669,
+    "stamus": {
+      "asset": "10.7.5.101",
+      "asset_net_info": "",
+      "asset_type": "ip",
+      "event_id": "24",
+      "extra_info": null,
+      "family_id": 4,
+      "family_name": "Data Theft",
+      "family_type": "family",
+      "kill_chain": "command_and_control",
+      "method_id": 1002026673,
+      "pk": 2358,
+      "source": "95.142.46.236",
+      "threat_id": 17,
+      "threat_name": "IcedID"
+    },
+    "stream": 1,
+    "tags": [
+      "beats_input_codec_json_applied"
+    ],
+    "timestamp": "2023-07-25T11:07:24.192879+0200",
+    "tx_id": 0,
+    "type": "json-log"
+  }]
+}
diff --git a/Packs/Stamus/Integrations/Stamus/test_data/fetch_host_id.json b/Packs/Stamus/Integrations/Stamus/test_data/fetch_host_id.json
new file mode 100644
index 0000000000..e1eba67f8d
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/test_data/fetch_host_id.json
@@ -0,0 +1,29 @@
+{
+	"ip": "217.116.0.227",
+	"host_id": {
+	    "first_seen": "2023-07-11T16:07:33.559720+02:00",
+	    "last_seen": "2023-07-25T12:04:16.060288+02:00",
+	    "hostname": [
+	        {
+	            "host": "mx.geacam.com",
+	            "first_seen": "2023-07-11T16:07:33.559720+02:00",
+	            "last_seen": "2023-07-25T12:04:16.059759+02:00"
+	        }
+	    ],
+	    "hostname_count": 1,
+	    "services": [
+	        {
+	            "proto": "tcp",
+	            "port": 25,
+	            "values": [
+	                {
+	                    "app_proto": "smtp",
+	                    "last_seen": "2023-07-25T12:04:33.188748+0200",
+	                    "first_seen": "2023-07-11T16:07:50.108895+0200"
+	                }
+	            ]
+	        }
+	    ],
+	    "services_count": 1
+	}
+}
diff --git a/Packs/Stamus/Integrations/Stamus/test_data/fetch_incidents.json b/Packs/Stamus/Integrations/Stamus/test_data/fetch_incidents.json
new file mode 100644
index 0000000000..ca906b673a
--- /dev/null
+++ b/Packs/Stamus/Integrations/Stamus/test_data/fetch_incidents.json
@@ -0,0 +1,18 @@
+{
+    "results": [{
+        "id": 283115,
+        "timestamp": "2023-07-14T15:20:48.231617+02:00",
+        "target": "10.11.13.101",
+        "target_type": "ip",
+        "kill_chain": "command_and_control",
+        "threat_id": "17",
+        "threat": "My custom threat",
+        "threat_description": "description of my custom threat",
+        "threat_link": "https://10.136.0.72/stamus/compromises/coverage/4/threat/17",
+        "family_id": "4",
+        "family": "Data Theft",
+        "family_description": "spyware",
+        "family_link": "https://10.136.0.72/stamus/compromises/coverage/4/",
+        "tenant": -1
+    }]
+}
diff --git a/Packs/Stamus/Layouts/layoutscontainer-Stamus_Networks_Layout.json b/Packs/Stamus/Layouts/layoutscontainer-Stamus_Networks_Layout.json
new file mode 100644
index 0000000000..8f9fc97048
--- /dev/null
+++ b/Packs/Stamus/Layouts/layoutscontainer-Stamus_Networks_Layout.json
@@ -0,0 +1,482 @@
+{
+    "detailsV2": {
+        "tabs": [
+            {
+                "id": "summary",
+                "name": "Legacy Summary",
+                "type": "summary"
+            },
+            {
+                "id": "caseinfoid",
+                "name": "Incident Info",
+                "sections": [
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-fce71720-98b0-11e9-97d7-ed26ef9e46c8",
+                        "isVisible": true,
+                        "items": [
+                            {
+                                "endCol": 2,
+                                "fieldId": "type",
+                                "height": 22,
+                                "id": "incident-type-field",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "severity",
+                                "height": 22,
+                                "id": "incident-severity-field",
+                                "index": 1,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamusid",
+                                "height": 22,
+                                "id": "3ad6c1f0-bdd5-11ed-92fc-831964606e8e",
+                                "index": 2,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "owner",
+                                "height": 22,
+                                "id": "incident-owner-field",
+                                "index": 3,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "sourcebrand",
+                                "height": 22,
+                                "id": "incident-sourceBrand-field",
+                                "index": 4,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "sourceinstance",
+                                "height": 22,
+                                "id": "incident-sourceInstance-field",
+                                "index": 5,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamustarget",
+                                "height": 22,
+                                "id": "59ab84d0-bdd5-11ed-92fc-831964606e8e",
+                                "index": 6,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "playbookid",
+                                "height": 22,
+                                "id": "incident-playbookId-field",
+                                "index": 7,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            }                        ],
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Case Details",
+                        "static": false,
+                        "w": 1,
+                        "x": 0,
+                        "y": 0
+                    },
+                    {
+                        "h": 2,
+                        "i": "caseinfoid-61263cc0-98b1-11e9-97d7-ed26ef9e46c8",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Notes",
+                        "static": false,
+                        "type": "notes",
+                        "w": 1,
+                        "x": 2,
+                        "y": 0
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-6aabad20-98b1-11e9-97d7-ed26ef9e46c8",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Work Plan",
+                        "static": false,
+                        "type": "workplan",
+                        "w": 1,
+                        "x": 1,
+                        "y": 0
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-770ec200-98b1-11e9-97d7-ed26ef9e46c8",
+                        "isVisible": true,
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Linked Incidents",
+                        "static": false,
+                        "type": "linkedIncidents",
+                        "w": 1,
+                        "x": 1,
+                        "y": 8
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-842632c0-98b1-11e9-97d7-ed26ef9e46c8",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Child Incidents",
+                        "static": false,
+                        "type": "childInv",
+                        "w": 1,
+                        "x": 2,
+                        "y": 4
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-4a31afa0-98ba-11e9-a519-93a53c759fe0",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Evidence",
+                        "static": false,
+                        "type": "evidence",
+                        "w": 1,
+                        "x": 2,
+                        "y": 2
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "hideName": false,
+                        "i": "caseinfoid-7717e580-9bed-11e9-9a3f-8b4b2158e260",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Team Members",
+                        "static": false,
+                        "type": "team",
+                        "w": 1,
+                        "x": 2,
+                        "y": 6
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-7ce69dd0-a07f-11e9-936c-5395a1acf11e",
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Indicators",
+                        "query": "",
+                        "queryType": "input",
+                        "static": false,
+                        "type": "indicators",
+                        "w": 2,
+                        "x": 0,
+                        "y": 6
+                    },
+                    {
+                        "displayType": "CARD",
+                        "h": 2,
+                        "i": "caseinfoid-ac32f620-a0b0-11e9-b27f-13ae1773d289",
+                        "items": [
+                            {
+                                "endCol": 1,
+                                "fieldId": "occurred",
+                                "height": 22,
+                                "id": "incident-occurred-field",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 1,
+                                "fieldId": "dbotmodified",
+                                "height": 22,
+                                "id": "incident-modified-field",
+                                "index": 1,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "dbotduedate",
+                                "height": 22,
+                                "id": "incident-dueDate-field",
+                                "index": 2,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "dbotcreated",
+                                "height": 22,
+                                "id": "incident-created-field",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 1
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "dbotclosed",
+                                "height": 22,
+                                "id": "incident-closed-field",
+                                "index": 1,
+                                "sectionItemType": "field",
+                                "startCol": 1
+                            }
+                        ],
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Timeline Information",
+                        "static": false,
+                        "w": 1,
+                        "x": 0,
+                        "y": 4
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "i": "caseinfoid-88e6bf70-a0b1-11e9-b27f-13ae1773d289",
+                        "isVisible": true,
+                        "items": [
+                            {
+                                "endCol": 2,
+                                "fieldId": "dbotclosed",
+                                "height": 22,
+                                "id": "incident-dbotClosed-field",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "closereason",
+                                "height": 22,
+                                "id": "incident-closeReason-field",
+                                "index": 1,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "closenotes",
+                                "height": 22,
+                                "id": "incident-closeNotes-field",
+                                "index": 2,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            }
+                        ],
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Closing Information",
+                        "static": false,
+                        "w": 1,
+                        "x": 0,
+                        "y": 8
+                    },
+                    {
+                        "displayType": "CARD",
+                        "h": 2,
+                        "i": "caseinfoid-e54b1770-a0b1-11e9-b27f-13ae1773d289",
+                        "isVisible": true,
+                        "items": [
+                            {
+                                "endCol": 2,
+                                "fieldId": "details",
+                                "height": 22,
+                                "id": "incident-details-field",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            }
+                        ],
+                        "maxW": 3,
+                        "moved": false,
+                        "name": "Threat Description",
+                        "static": false,
+                        "w": 1,
+                        "x": 1,
+                        "y": 4
+                    },
+                    {
+                        "displayType": "ROW",
+                        "h": 2,
+                        "hideName": false,
+                        "i": "caseinfoid-edc8a720-bdd4-11ed-92fc-831964606e8e",
+                        "items": [
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamustarget",
+                                "height": 22,
+                                "id": "5c7bbbd0-bdd5-11ed-92fc-831964606e8e",
+                                "index": 0,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamustargettype",
+                                "height": 22,
+                                "id": "5d7e85d0-bdd5-11ed-92fc-831964606e8e",
+                                "index": 1,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamuskillchain",
+                                "height": 22,
+                                "id": "61fc45c0-bdd5-11ed-92fc-831964606e8e",
+                                "index": 2,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "threatname",
+                                "height": 22,
+                                "id": "7dffc030-bdd5-11ed-92fc-831964606e8e",
+                                "index": 3,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "threatfamilyname",
+                                "height": 22,
+                                "id": "7dffc030-bdd5-11ed-92fc-831964606e8e",
+                                "index": 4,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            },
+                            {
+                                "endCol": 2,
+                                "fieldId": "stamusthreatlink",
+                                "height": 22,
+                                "id": "8982fc60-bdd5-11ed-92fc-831964606e8e",
+                                "index": 5,
+                                "sectionItemType": "field",
+                                "startCol": 0
+                            }
+                        ],
+                        "maxW": 3,
+                        "minH": 1,
+                        "moved": false,
+                        "name": "DoC Details",
+                        "static": false,
+                        "w": 1,
+                        "x": 0,
+                        "y": 2
+                    },
+					{
+						"displayType": "ROW",
+						"h": 2,
+						"hideName": false,
+						"i": "caseinfoid-a1518d40-3556-11ee-b6d7-43215be57d6b",
+						"items": [
+							{
+								"endCol": 2,
+								"fieldId": "stamushostfirstseen",
+								"height": 22,
+								"id": "d3456b90-4290-11ee-816d-07e14dea38c7",
+								"index": 0,
+								"sectionItemType": "field",
+								"startCol": 0
+							},
+							{
+								"endCol": 2,
+								"fieldId": "stamushostlastseen",
+								"height": 22,
+								"index": 1,
+								"sectionItemType": "field",
+								"startCol": 0
+							},
+							{
+								"endCol": 2,
+								"fieldId": "hostnames",
+								"height": 22,
+								"index": 2,
+								"sectionItemType": "field",
+								"startCol": 0
+							},
+                            {
+								"endCol": 2,
+								"fieldId": "deviceusername",
+								"height": 22,
+								"index": 3,
+								"sectionItemType": "field",
+								"startCol": 0
+							},
+							{
+								"endCol": 2,
+								"fieldId": "stamushostroles",
+								"height": 22,
+								"index": 4,
+								"sectionItemType": "field",
+								"startCol": 0
+							}
+						],
+						"maxW": 3,
+						"minH": 1,
+						"moved": false,
+						"name": "Asset Information",
+						"static": false,
+						"w": 1,
+						"x": 1,
+						"y": 2
+					}
+                ],
+                "type": "custom"
+            },
+            {
+                "id": "warRoom",
+                "name": "War Room",
+                "type": "warRoom"
+            },
+            {
+                "id": "workPlan",
+                "name": "Work Plan",
+                "type": "workPlan"
+            },
+            {
+                "id": "evidenceBoard",
+                "name": "Evidence Board",
+                "type": "evidenceBoard"
+            },
+            {
+                "id": "relatedIncidents",
+                "name": "Related Incidents",
+                "type": "relatedIncidents"
+            },
+            {
+                "id": "canvas",
+                "name": "Canvas",
+                "type": "canvas"
+            }
+        ]
+    },
+    "group": "incident",
+    "id": "Stamus Networks DoC Layout",
+    "name": "Stamus Networks DoC Layout",
+    "system": false,
+    "version": -1,
+    "fromVersion": "6.9.0",
+    "description": ""
+}
\ No newline at end of file
diff --git a/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data.yml b/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data.yml
new file mode 100644
index 0000000000..b2a9d26ac6
--- /dev/null
+++ b/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data.yml
@@ -0,0 +1,323 @@
+id: Stamus Networks - Get Extra Data
+version: -1
+name: Stamus Networks - Get Extra Data
+description: Get Extra Information from a Declaration of Compromise
+fromversion: "6.9.0"
+starttaskid: "0"
+tasks:
+  "0":
+    id: "0"
+    taskid: 2748770b-db10-492a-8d38-5c7973bade90
+    type: start
+    task:
+      id: 2748770b-db10-492a-8d38-5c7973bade90
+      version: -1
+      name: ""
+      iscommand: false
+      brand: ""
+      description: ''
+    nexttasks:
+      '#none#':
+      - "6"
+      - "7"
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 265,
+          "y": 50
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "1":
+    id: "1"
+    taskid: af372da4-9b8f-4cf0-8e48-f4cfca8eedb1
+    type: regular
+    task:
+      id: af372da4-9b8f-4cf0-8e48-f4cfca8eedb1
+      version: -1
+      name: Get Event
+      description: '[Get base events including protocol metadata that can be used as IOCs.]'
+      script: '|||stamus-get-doc-events'
+      type: regular
+      iscommand: true
+      brand: ""
+    nexttasks:
+      '#none#':
+      - "3"
+    scriptarguments:
+      id:
+        simple: ${incident.dbotMirrorId}
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 50,
+          "y": 340
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "2":
+    id: "2"
+    taskid: ad2be62a-9ca9-4bed-857c-ef05560502ee
+    type: regular
+    task:
+      id: ad2be62a-9ca9-4bed-857c-ef05560502ee
+      version: -1
+      name: Get Host Information
+      description: '[Get host-id informations]'
+      script: '|||stamus-get-host-insight'
+      type: regular
+      iscommand: true
+      brand: ""
+    nexttasks:
+      '#none#':
+      - "4"
+      - "5"
+      - "8"
+    scriptarguments:
+      ip:
+        simple: ${incident.stamustarget}
+      retry-count:
+        simple: "5"
+      retry-interval:
+        simple: "60"
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 480,
+          "y": 340
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "3":
+    id: "3"
+    taskid: 1f1dbec6-3073-4e54-87b4-b8981fa4a6b6
+    type: regular
+    task:
+      id: 1f1dbec6-3073-4e54-87b4-b8981fa4a6b6
+      version: -1
+      name: Get By IOC (event by source ip)
+      description: '[Get events with IOC key/value filter]'
+      script: '|||stamus-check-ioc'
+      type: regular
+      iscommand: true
+      brand: ""
+    scriptarguments:
+      indicator_key:
+        simple: src_ip
+      indicator_value:
+        simple: ${StamusIntegration.RelatedEvents.src_ip}
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 50,
+          "y": 515
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "4":
+    id: "4"
+    taskid: 12c9eb19-e96b-47f6-8b4f-47232395acfb
+    type: regular
+    task:
+      id: 12c9eb19-e96b-47f6-8b4f-47232395acfb
+      version: -1
+      name: Quarantine EDR
+      description: '[Trigger Quarantine on EDR]'
+      type: regular
+      iscommand: false
+      brand: ""
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 480,
+          "y": 515
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "5":
+    id: "5"
+    taskid: 3e883fee-f4e5-4c0d-8b79-0b0385109651
+    type: regular
+    task:
+      id: 3e883fee-f4e5-4c0d-8b79-0b0385109651
+      version: -1
+      name: Send Event to SIEM
+      description: '[Send event to SIEM]'
+      type: regular
+      iscommand: false
+      brand: ""
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 480,
+          "y": 690
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "6":
+    id: "6"
+    taskid: 8e53acab-c40b-4d0d-862d-f06e4ec62bfc
+    type: title
+    task:
+      id: 8e53acab-c40b-4d0d-862d-f06e4ec62bfc
+      version: -1
+      name: Get Event Details
+      type: title
+      iscommand: false
+      brand: ""
+      description: '[Get Metadata associated to event]'
+    nexttasks:
+      '#none#':
+      - "1"
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 50,
+          "y": 195
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "7":
+    id: "7"
+    taskid: 51e46a4c-ff68-4883-8251-1676f59ec87a
+    type: title
+    task:
+      id: 51e46a4c-ff68-4883-8251-1676f59ec87a
+      version: -1
+      name: Get Host Details
+      type: title
+      iscommand: false
+      brand: ""
+      description: '[Get information about asset from Host Insight]'
+    nexttasks:
+      '#none#':
+      - "2"
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 480,
+          "y": 195
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+  "8":
+    id: "8"
+    taskid: 2c2a86ca-b9ce-453a-821b-f31b892a11fc
+    type: regular
+    task:
+      id: 2c2a86ca-b9ce-453a-821b-f31b892a11fc
+      version: -1
+      name: Enrich Incident
+      description: commands.local.cmd.set.incident
+      script: Builtin|||setIncident
+      type: regular
+      iscommand: true
+      brand: Builtin
+    scriptarguments:
+      stamushostfirstseen:
+        simple: ${StamusIntegration.HostInsights.host_id.first_seen}
+      stamushostlastseen:
+        simple: ${StamusIntegration.HostInsights.host_id.last_seen}
+      hostnames:
+        simple: ${StamusIntegration.HostInsights.host_id.hostname.host}
+      deviceusername:
+        simple: ${StamusIntegration.HostInsights.host_id.username.user}
+      stamushostroles:
+        simple: ${StamusIntegration.HostInsights.host_id.roles.name}
+    separatecontext: false
+    continueonerrortype: ""
+    view: |-
+      {
+        "position": {
+          "x": 940,
+          "y": 515
+        }
+      }
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+    quietmode: 0
+    isoversize: false
+    isautoswitchedtoquietmode: false
+
+view: |-
+  {
+    "linkLabelsPosition": {},
+    "paper": {
+      "dimensions": {
+        "height": 735,
+        "width": 810,
+        "x": 50,
+        "y": 50
+      }
+    }
+  }
+inputs: []
+outputs: []
+tests:
+- No tests (auto formatted)
\ No newline at end of file
diff --git a/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data_README.md b/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data_README.md
new file mode 100644
index 0000000000..842ca2a7d0
--- /dev/null
+++ b/Packs/Stamus/Playbooks/Stamus_Networks_-_Get_Extra_Data_README.md
@@ -0,0 +1,39 @@
+
+
+## Dependencies
+
+This playbook uses the following sub-playbooks, integrations, and scripts.
+
+### Sub-playbooks
+
+This playbook does not use any sub-playbooks.
+
+### Integrations
+
+This playbook does not use any integrations.
+
+### Scripts
+
+This playbook does not use any scripts.
+
+### Commands
+
+* stamus-get-host-id
+* stamus-get-by-ioc
+* stamus-get-events
+
+## Playbook Inputs
+
+---
+There are no inputs for this playbook.
+
+## Playbook Outputs
+
+---
+There are no outputs for this playbook.
+
+## Playbook Image
+
+---
+
+![Stamus Networks - Get Extra Data](../doc_files/Stamus_Networks_-_Get_Extra_Data.png)
diff --git a/Packs/Stamus/README.md b/Packs/Stamus/README.md
new file mode 100644
index 0000000000..db1d635e9c
--- /dev/null
+++ b/Packs/Stamus/README.md
@@ -0,0 +1,4 @@
+# Stamus Networks Integration
+
+This integration allows you to import Declaration of Compromise
+from a Stamus Security Platform.
diff --git a/Packs/Stamus/doc_files/Stamus_Networks_-_Get_Extra_Data.png b/Packs/Stamus/doc_files/Stamus_Networks_-_Get_Extra_Data.png
new file mode 100644
index 0000000000000000000000000000000000000000..078457a611b07ed056df65110f2074c740061e35
GIT binary patch
literal 61692
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
LtDnm{r-UW|FpU{0

literal 0
HcmV?d00001

diff --git a/Packs/Stamus/pack_metadata.json b/Packs/Stamus/pack_metadata.json
new file mode 100644
index 0000000000..f587e46c63
--- /dev/null
+++ b/Packs/Stamus/pack_metadata.json
@@ -0,0 +1,29 @@
+{
+    "name": "Stamus",
+    "description": "Stamus Security Platform",
+    "support": "partner",
+    "currentVersion": "1.0.0",
+    "author": "Stamus Networks",
+    "url": "https://www.stamus-networks.com/",
+    "email": "support@stamus-networks.com",
+    "categories": [
+        "Network Security"
+    ],
+    "tags": [
+        "Network",
+        "Security",
+        "Security Analytics",
+        "Alerts",
+        "Attack",
+        "Malware"
+    ],
+    "useCases": [],
+    "keywords": [],
+    "marketplaces": [
+        "xsoar"
+    ],
+    "devEmail": [
+        "support@stamus-networks.com"
+    ],
+    "githubUser": []
+}
\ No newline at end of file
-- 
2.41.0


From 074f146ea0f0ac041a1002ba1694511df103e3c3 Mon Sep 17 00:00:00 2001
From: Koby Meir <kobymeir@users.noreply.github.com>
Date: Thu, 7 Sep 2023 09:53:12 +0300
Subject: [PATCH 07/26] certificate-rehash-warning (#29529)

* rehash: warning: skipping domain-ca.pem,it does not contain exactly one certificate or CRL
---
 .gitlab/ci/.gitlab-ci.global.yml | 13 ++++++++++---
 .gitlab/ci/.gitlab-ci.yml        |  1 +
 2 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/.gitlab/ci/.gitlab-ci.global.yml b/.gitlab/ci/.gitlab-ci.global.yml
index 7df4c50f18..033dbe3208 100644
--- a/.gitlab/ci/.gitlab-ci.global.yml
+++ b/.gitlab/ci/.gitlab-ci.global.yml
@@ -14,11 +14,16 @@
 
 
 .setup-network-certs: &setup-network-certs
-  - source .gitlab/helper_functions.sh
-  - chmod 700 $NETWORK_SETUP
-  - source $NETWORK_SETUP
+  - section_start "Setup network certs" --collapsed
+  - chmod 700 ${CERTIFICATE_SETUP_SCRIPT}
+  - source ${CERTIFICATE_SETUP_SCRIPT}
   - section_end "Setup network certs"
 
+.setup-artifactory: &setup-artifactory
+  - section_start "Setup Artifactory" --collapsed
+  - chmod 700 ${ARTIFACTORY_SETUP_SCRIPT}
+  - source ${ARTIFACTORY_SETUP_SCRIPT}
+  - section_end "Setup Artifactory"
 
 ### Global Script Snippets ###
 
@@ -166,7 +171,9 @@
 
 .default-before-script:
   before_script:
+    - source .gitlab/helper_functions.sh
     - *setup-network-certs
+    - *setup-artifactory
     - *stop_contrib_external_build
     - *clone_and_export_variables
     - *check_build_files_are_up_to_date
diff --git a/.gitlab/ci/.gitlab-ci.yml b/.gitlab/ci/.gitlab-ci.yml
index 25bbe5fbd6..32ac11083e 100644
--- a/.gitlab/ci/.gitlab-ci.yml
+++ b/.gitlab/ci/.gitlab-ci.yml
@@ -20,6 +20,7 @@ stages:
 
 
 variables:
+  ARTIFACTORY_ENABLED: "true"
   PIP_DISABLE_PIP_VERSION_CHECK: "1"
   DONT_CACHE_LAST_RESPONSE: "true"
   GCS_MARKET_BUCKET: "marketplace-dist"
-- 
2.41.0


From 39c2a738797b4f6e577ce912a38e2b0b245782b2 Mon Sep 17 00:00:00 2001
From: Ido van Dijk <43602124+idovandijk@users.noreply.github.com>
Date: Thu, 7 Sep 2023 09:59:51 +0300
Subject: [PATCH 08/26] Added keywords related to DNS sinkhole to the PAN-OS
 pack (#29371)

* Add sinkhole keywords to pan-os pack

* Removed extra comma
---
 Packs/PAN-OS/pack_metadata.json | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/Packs/PAN-OS/pack_metadata.json b/Packs/PAN-OS/pack_metadata.json
index 281c85062a..dda1c5af59 100644
--- a/Packs/PAN-OS/pack_metadata.json
+++ b/Packs/PAN-OS/pack_metadata.json
@@ -17,7 +17,10 @@
         "Firewall",
         "vsys",
         "SASE",
-        "Access"
+        "Access",
+        "Sinkhole",
+        "Sinkholing",
+        "DNS Sinkhole"
     ],
     "dependencies": {
         "CommonPlaybooks": {
-- 
2.41.0


From 0bb0b4a47f34c3c61d8f454e7eac2366deb50947 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:08:14 +0300
Subject: [PATCH 09/26] Update Docker Image To demisto/m2crypto  (#29543)

* Updated Metadata Of Pack SMIME_Messaging

* Added release notes to pack SMIME_Messaging

* Packs/SMIME_Messaging/Integrations/SMIME_Messaging/SMIME_Messaging.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../Integrations/SMIME_Messaging/SMIME_Messaging.yml          | 4 ++--
 Packs/SMIME_Messaging/ReleaseNotes/1_0_22.md                  | 3 +++
 Packs/SMIME_Messaging/pack_metadata.json                      | 2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)
 create mode 100644 Packs/SMIME_Messaging/ReleaseNotes/1_0_22.md

diff --git a/Packs/SMIME_Messaging/Integrations/SMIME_Messaging/SMIME_Messaging.yml b/Packs/SMIME_Messaging/Integrations/SMIME_Messaging/SMIME_Messaging.yml
index a5091f828f..0abf6aa37c 100644
--- a/Packs/SMIME_Messaging/Integrations/SMIME_Messaging/SMIME_Messaging.yml
+++ b/Packs/SMIME_Messaging/Integrations/SMIME_Messaging/SMIME_Messaging.yml
@@ -58,7 +58,7 @@ script:
     - description: The encrypted message with .p7 extension.
       name: encrypt_message
       required: true
-    - description: The encoding code to use when decode the message body, e.g 'ISO-8859-2''
+    - description: The encoding code to use when decode the message body, e.g 'ISO-8859-2''.
       name: encoding
     description: Decrypts the message body.
     name: smime-decrypt-email-body
@@ -76,7 +76,7 @@ script:
     - contextPath: SMIME.SignedAndEncrypted.Message
       description: The raw message to send.
       type: String
-  dockerimage: demisto/m2crypto:1.0.0.68951
+  dockerimage: demisto/m2crypto:1.0.0.72283
   runonce: false
   script: '-'
   type: python
diff --git a/Packs/SMIME_Messaging/ReleaseNotes/1_0_22.md b/Packs/SMIME_Messaging/ReleaseNotes/1_0_22.md
new file mode 100644
index 0000000000..52eaa20eae
--- /dev/null
+++ b/Packs/SMIME_Messaging/ReleaseNotes/1_0_22.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### SMIME Messaging
+- Updated the Docker image to: *demisto/m2crypto:1.0.0.72283*.
diff --git a/Packs/SMIME_Messaging/pack_metadata.json b/Packs/SMIME_Messaging/pack_metadata.json
index f224bab35b..e789b7e506 100644
--- a/Packs/SMIME_Messaging/pack_metadata.json
+++ b/Packs/SMIME_Messaging/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "SMIME Messaging",
     "description": "Use the S/MIME (Secure Multipurpose Internet Mail Extensions) integration to send and receive secure MIME data.",
     "support": "xsoar",
-    "currentVersion": "1.0.21",
+    "currentVersion": "1.0.22",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 923646b0a825730ff680b7b653cd99528efe7a46 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:09:36 +0300
Subject: [PATCH 10/26] Update Docker Image To demisto/sixgill  (#29534)

* Updated Metadata Of Pack Sixgill-Darkfeed

* Added release notes to pack Sixgill-Darkfeed

* Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed_Enrichment/Sixgill_Darkfeed_Enrichment.yml Docker image update

* Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml Docker image update
---
 .../Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml       | 2 +-
 .../Sixgill_Darkfeed_Enrichment.yml                          | 2 +-
 Packs/Sixgill-Darkfeed/ReleaseNotes/2_2_7.md                 | 5 +++++
 Packs/Sixgill-Darkfeed/pack_metadata.json                    | 2 +-
 4 files changed, 8 insertions(+), 3 deletions(-)
 create mode 100644 Packs/Sixgill-Darkfeed/ReleaseNotes/2_2_7.md

diff --git a/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml b/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml
index 788054c369..7166e27669 100644
--- a/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml
+++ b/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed/Sixgill_Darkfeed.yml
@@ -125,7 +125,7 @@ script:
     description: Fetching Sixgill DarkFeed indicators
     execution: true
     name: sixgill-get-indicators
-  dockerimage: demisto/sixgill:1.0.0.69222
+  dockerimage: demisto/sixgill:1.0.0.72321
   feed: true
   runonce: false
   subtype: python3
diff --git a/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed_Enrichment/Sixgill_Darkfeed_Enrichment.yml b/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed_Enrichment/Sixgill_Darkfeed_Enrichment.yml
index ac9fa9e040..864aea8ea0 100644
--- a/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed_Enrichment/Sixgill_Darkfeed_Enrichment.yml
+++ b/Packs/Sixgill-Darkfeed/Integrations/Sixgill_Darkfeed_Enrichment/Sixgill_Darkfeed_Enrichment.yml
@@ -550,7 +550,7 @@ script:
     - contextPath: SixgillDarkfeed.Postid.external_reference
       description: Link to the IOC on Virustotal and an abstraction of the number of detections; MITRE ATT&CK tactics and techniques.
       type: Unknown
-  dockerimage: demisto/sixgill:1.0.0.69222
+  dockerimage: demisto/sixgill:1.0.0.72321
   runonce: false
   script: '-'
   subtype: python3
diff --git a/Packs/Sixgill-Darkfeed/ReleaseNotes/2_2_7.md b/Packs/Sixgill-Darkfeed/ReleaseNotes/2_2_7.md
new file mode 100644
index 0000000000..b36f8d4960
--- /dev/null
+++ b/Packs/Sixgill-Darkfeed/ReleaseNotes/2_2_7.md
@@ -0,0 +1,5 @@
+#### Integrations
+##### Sixgill DarkFeed Enrichment
+- Updated the Docker image to: *demisto/sixgill:1.0.0.72321*.
+##### Sixgill DarkFeed Threat Intelligence
+- Updated the Docker image to: *demisto/sixgill:1.0.0.72321*.
diff --git a/Packs/Sixgill-Darkfeed/pack_metadata.json b/Packs/Sixgill-Darkfeed/pack_metadata.json
index bde51308d3..9755f692af 100644
--- a/Packs/Sixgill-Darkfeed/pack_metadata.json
+++ b/Packs/Sixgill-Darkfeed/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Sixgill Darkfeed - Annual Subscription",
     "description": "This edition of Sixgill Darkfeed is intended for customers who have a direct annual subscription to Sixgill Darkfeed.\n\nGet contextual and actionable insights to proactively block underground threats in real-time with the most comprehensive, automated stream of IOCs \n\nFor organizations who are currently Darkfeed customers.",
     "support": "partner",
-    "currentVersion": "2.2.6",
+    "currentVersion": "2.2.7",
     "author": "Cybersixgill",
     "url": "",
     "email": "sales@cybersixgill.com",
-- 
2.41.0


From 97f2863ad6f303d3b0e1e62d510797dc7e424abb Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:13:10 +0300
Subject: [PATCH 11/26] Update Docker Image To demisto/py3-tools  (#29532)

* Updated Metadata Of Pack Zabbix

* Added release notes to pack Zabbix

* Updated Metadata Of Pack SEKOIAIntelligenceCenter

* Added release notes to pack SEKOIAIntelligenceCenter

* Updated Metadata Of Pack Anomali_ThreatStream

* Added release notes to pack Anomali_ThreatStream

* Packs/Anomali_ThreatStream/Integrations/AnomaliThreatStreamv3/AnomaliThreatStreamv3.yml Docker image update

* Updated Metadata Of Pack FeedCyjax

* Added release notes to pack FeedCyjax

* Packs/FeedCyjax/Integrations/FeedCyjax/FeedCyjax.yml Docker image update

* Updated Metadata Of Pack CommonWidgets

* Added release notes to pack CommonWidgets

* Packs/CommonWidgets/Scripts/RSSWidget/RSSWidget.yml Docker image update

* Updated Metadata Of Pack FiltersAndTransformers

* Added release notes to pack FiltersAndTransformers

* Packs/FiltersAndTransformers/Scripts/Jmespath/Jmespath.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../AnomaliThreatStreamv3.yml                 | 14 ++++++------
 .../ReleaseNotes/2_1_11.md                    |  3 +++
 Packs/Anomali_ThreatStream/pack_metadata.json |  2 +-
 Packs/CommonWidgets/ReleaseNotes/1_2_30.md    |  4 ++++
 .../Scripts/RSSWidget/RSSWidget.yml           |  2 +-
 Packs/CommonWidgets/pack_metadata.json        |  2 +-
 .../Integrations/FeedCyjax/FeedCyjax.yml      | 22 +++++++++----------
 Packs/FeedCyjax/ReleaseNotes/1_0_21.md        |  3 +++
 Packs/FeedCyjax/pack_metadata.json            |  2 +-
 .../ReleaseNotes/1_2_29.md                    |  4 ++++
 .../Scripts/Jmespath/Jmespath.yml             |  6 ++---
 .../FiltersAndTransformers/pack_metadata.json |  2 +-
 .../ReleaseNotes/1_2_15.md                    |  3 +++
 .../pack_metadata.json                        |  2 +-
 Packs/Zabbix/ReleaseNotes/1_0_19.md           |  3 +++
 Packs/Zabbix/pack_metadata.json               |  2 +-
 16 files changed, 48 insertions(+), 28 deletions(-)
 create mode 100644 Packs/Anomali_ThreatStream/ReleaseNotes/2_1_11.md
 create mode 100644 Packs/CommonWidgets/ReleaseNotes/1_2_30.md
 create mode 100644 Packs/FeedCyjax/ReleaseNotes/1_0_21.md
 create mode 100644 Packs/FiltersAndTransformers/ReleaseNotes/1_2_29.md
 create mode 100644 Packs/SEKOIAIntelligenceCenter/ReleaseNotes/1_2_15.md
 create mode 100644 Packs/Zabbix/ReleaseNotes/1_0_19.md

diff --git a/Packs/Anomali_ThreatStream/Integrations/AnomaliThreatStreamv3/AnomaliThreatStreamv3.yml b/Packs/Anomali_ThreatStream/Integrations/AnomaliThreatStreamv3/AnomaliThreatStreamv3.yml
index caea83f5fb..fb1c0f9535 100644
--- a/Packs/Anomali_ThreatStream/Integrations/AnomaliThreatStreamv3/AnomaliThreatStreamv3.yml
+++ b/Packs/Anomali_ThreatStream/Integrations/AnomaliThreatStreamv3/AnomaliThreatStreamv3.yml
@@ -2850,7 +2850,7 @@ script:
       - md5
       - string
       - url
-    - description: 'The value of the indicator. '
+    - description: 'The value of the indicator. .'
       name: indicator_value
     - description: The maximum number of results to return from ThreatStream. Default value is 20.
       name: limit
@@ -2913,7 +2913,7 @@ script:
       - tipreport
       - ttp
       - vulnerability
-    - description: 'A comma-separated list of tags applied to the specified threat model entities or observables. '
+    - description: 'A comma-separated list of tags applied to the specified threat model entities or observables. .'
       isArray: true
       name: tags
       required: true
@@ -3877,7 +3877,7 @@ script:
       name: threat_type
     - description: Whether the intelligence is public.
       name: is_public
-    - description: Query that overrides all other arguments. The filter operators used for the filter language query are the symbolic form (=, <, >, and so on) and not the descriptive form (exact, lt, gt, and so on). E.g., (confidence>=90+AND+(itype="apt_ip"+OR+itype="bot_ip"+OR+itype="c2_ip"))
+    - description: Query that overrides all other arguments. The filter operators used for the filter language query are the symbolic form (=, <, >, and so on) and not the descriptive form (exact, lt, gt, and so on). E.g., (confidence>=90+AND+(itype="apt_ip"+OR+itype="bot_ip"+OR+itype="c2_ip")).
       name: query
     - description: An incrementing numeric identifier associated with each update to intelligence on ThreatStream. If specified, then it is recommended to use order_by=update_id.
       name: update_id_gt
@@ -4002,7 +4002,7 @@ script:
       description: The subtype of the intelligence.
       type: String
     - contextPath: ThreatStream.Intelligence.resource_uri
-      description: The resource URI of the intelligence
+      description: The resource URI of the intelligence.
       type: String
     - contextPath: ThreatStream.Intelligence.severity
       description: The severity of the intelligence.
@@ -6089,7 +6089,7 @@ script:
     - description: A note that will be associated with all the indicator types that are provided in the command arguments.
       name: note
       required: true
-    description: "Modify contextual notes associated with existing whitelist entries"
+    description: "Modify contextual notes associated with existing whitelist entries."
     name: threatstream-update-whitelist-entry-note
   - arguments:
     - description: The ID of the entry you want to update. Use the threatstream-list-whitelist-entry command to get the entry ID.
@@ -6256,7 +6256,7 @@ script:
     - description: 'A comma-separated list of publication statuses. Supported values are: new, pending_review, review_requested, reviewed.'
       isArray: true
       name: publication_status
-    - description: 'A comma-separated list of signature types. Supported values are: Bro, Carbon Black Query, ClamAV, Custom, CybOX, OpenIOC, RSA NetWitness, Snort, Splunk Query, Suricata, YARA'
+    - description: 'A comma-separated list of signature types. Supported values are: Bro, Carbon Black Query, ClamAV, Custom, CybOX, OpenIOC, RSA NetWitness, Snort, Splunk Query, Suricata, YARA.'
       isArray: true
       name: signature_type
     - description: 'A comma-separated list of additional comments and context associated with the entity when it was imported from its original threat feed.'
@@ -6394,7 +6394,7 @@ script:
       required: true
     description: Creates associations between threat model entities on the ThreatStream platform.
     name: threatstream-add-threat-model-association
-  dockerimage: demisto/py3-tools:1.0.0.71964
+  dockerimage: demisto/py3-tools:1.0.0.73055
   runonce: false
   script: '-'
   subtype: python3
diff --git a/Packs/Anomali_ThreatStream/ReleaseNotes/2_1_11.md b/Packs/Anomali_ThreatStream/ReleaseNotes/2_1_11.md
new file mode 100644
index 0000000000..69ebb5d555
--- /dev/null
+++ b/Packs/Anomali_ThreatStream/ReleaseNotes/2_1_11.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Anomali ThreatStream v3
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
diff --git a/Packs/Anomali_ThreatStream/pack_metadata.json b/Packs/Anomali_ThreatStream/pack_metadata.json
index 16c9494feb..9f88b86a58 100644
--- a/Packs/Anomali_ThreatStream/pack_metadata.json
+++ b/Packs/Anomali_ThreatStream/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Anomali ThreatStream",
     "description": "Use Anomali ThreatStream to query and submit threats.",
     "support": "xsoar",
-    "currentVersion": "2.1.10",
+    "currentVersion": "2.1.11",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/CommonWidgets/ReleaseNotes/1_2_30.md b/Packs/CommonWidgets/ReleaseNotes/1_2_30.md
new file mode 100644
index 0000000000..4dc7b2fff0
--- /dev/null
+++ b/Packs/CommonWidgets/ReleaseNotes/1_2_30.md
@@ -0,0 +1,4 @@
+
+#### Scripts
+##### RSSWidget
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
\ No newline at end of file
diff --git a/Packs/CommonWidgets/Scripts/RSSWidget/RSSWidget.yml b/Packs/CommonWidgets/Scripts/RSSWidget/RSSWidget.yml
index b509ce0108..a7654421f9 100644
--- a/Packs/CommonWidgets/Scripts/RSSWidget/RSSWidget.yml
+++ b/Packs/CommonWidgets/Scripts/RSSWidget/RSSWidget.yml
@@ -31,7 +31,7 @@ args:
   defaultValue: 'false'
 scripttarget: 0
 subtype: python3
-dockerimage: demisto/py3-tools:1.0.0.71964
+dockerimage: demisto/py3-tools:1.0.0.73055
 runas: DBotWeakRole
 fromversion: 5.5.0
 tests:
diff --git a/Packs/CommonWidgets/pack_metadata.json b/Packs/CommonWidgets/pack_metadata.json
index 147d84d5a0..aaef45e59b 100644
--- a/Packs/CommonWidgets/pack_metadata.json
+++ b/Packs/CommonWidgets/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Common Widgets",
     "description": "Frequently used widgets pack.",
     "support": "xsoar",
-    "currentVersion": "1.2.29",
+    "currentVersion": "1.2.30",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/FeedCyjax/Integrations/FeedCyjax/FeedCyjax.yml b/Packs/FeedCyjax/Integrations/FeedCyjax/FeedCyjax.yml
index 82f2dd154a..5256321d47 100644
--- a/Packs/FeedCyjax/Integrations/FeedCyjax/FeedCyjax.yml
+++ b/Packs/FeedCyjax/Integrations/FeedCyjax/FeedCyjax.yml
@@ -1,7 +1,7 @@
 category: Data Enrichment & Threat Intelligence
 display: Cyjax Feed
 name: Cyjax Feed
-description: 'The feed allows customers to pull indicators of compromise from cyber incidents (IP addresses, URLs, domains, CVE and file hashes)'
+description: 'The feed allows customers to pull indicators of compromise from cyber incidents (IP addresses, URLs, domains, CVE and file hashes).'
 commonfields:
   id: Cyjax Feed
   version: -1
@@ -119,33 +119,33 @@ script:
   commands:
   - arguments:
     - name: since
-      description: The start date time in ISO 8601 format
+      description: The start date time in ISO 8601 format.
     - name: until
-      description: The end date time in ISO 8601 format
+      description: The end date time in ISO 8601 format.
     - name: type
-      description: 'The indicator type. If not specified all indicators are returned. Allowed values are IPv4, IPv6, Domain, Hostname, Email, FileHash-SHA1, FileHash-SHA256, FileHash-MD5, FileHash-SSDEEP'
+      description: 'The indicator type. If not specified all indicators are returned. Allowed values are IPv4, IPv6, Domain, Hostname, Email, FileHash-SHA1, FileHash-SHA256, FileHash-MD5, FileHash-SSDEEP.'
     - name: source_type
-      description: The indicators source type. Allowed values are incidnet-report, my-report
+      description: The indicators source type. Allowed values are incidnet-report, my-report.
     - name: source_id
-      description: The indicators source ID
+      description: The indicators source ID.
     - name: limit
       description: The maximum number of indicators to get. The default value is 50.
       defaultValue: '50'
     name: cyjax-get-indicators
-    description: Get indicators
+    description: Get indicators.
   - arguments:
-    - description: Indicator value
+    - description: Indicator value.
       name: value
       required: true
     name: cyjax-indicator-sighting
-    description: Get sighting of a indicator
+    description: Get sighting of a indicator.
   - name: cyjax-unset-indicators-last-fetch-date
-    description: 'Unset the indicators feed last fetch date. Should only be used if user needs to use `re-fetch` button and wants to fetch old indicators from Cyjax. Next feed will use date set in first_fetch (default is last 3 days)'
+    description: 'Unset the indicators feed last fetch date. Should only be used if user needs to use `re-fetch` button and wants to fetch old indicators from Cyjax. Next feed will use date set in first_fetch (default is last 3 days).'
   feed: true
   script: '-'
   type: python
   subtype: python3
-  dockerimage: demisto/py3-tools:1.0.0.71964
+  dockerimage: demisto/py3-tools:1.0.0.73055
 fromversion: 5.5.0
 tests:
 - No tests (auto formatted)
diff --git a/Packs/FeedCyjax/ReleaseNotes/1_0_21.md b/Packs/FeedCyjax/ReleaseNotes/1_0_21.md
new file mode 100644
index 0000000000..496e7453ba
--- /dev/null
+++ b/Packs/FeedCyjax/ReleaseNotes/1_0_21.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Cyjax Feed
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
diff --git a/Packs/FeedCyjax/pack_metadata.json b/Packs/FeedCyjax/pack_metadata.json
index e9321f38d0..7e3b41d9d1 100644
--- a/Packs/FeedCyjax/pack_metadata.json
+++ b/Packs/FeedCyjax/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Cyjax Feed",
     "description": "This pack is used to pull indicators of compromise from the Cyjax Threat Intelligence Platform.",
     "support": "partner",
-    "currentVersion": "1.0.20",
+    "currentVersion": "1.0.21",
     "author": "Cyjax",
     "url": "https://cyjax.com",
     "email": "devs@cyjax.com",
diff --git a/Packs/FiltersAndTransformers/ReleaseNotes/1_2_29.md b/Packs/FiltersAndTransformers/ReleaseNotes/1_2_29.md
new file mode 100644
index 0000000000..1e2fa35613
--- /dev/null
+++ b/Packs/FiltersAndTransformers/ReleaseNotes/1_2_29.md
@@ -0,0 +1,4 @@
+
+#### Scripts
+##### jmespath
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
\ No newline at end of file
diff --git a/Packs/FiltersAndTransformers/Scripts/Jmespath/Jmespath.yml b/Packs/FiltersAndTransformers/Scripts/Jmespath/Jmespath.yml
index df9ea4cdea..e35fc531d3 100644
--- a/Packs/FiltersAndTransformers/Scripts/Jmespath/Jmespath.yml
+++ b/Packs/FiltersAndTransformers/Scripts/Jmespath/Jmespath.yml
@@ -12,13 +12,13 @@ enabled: true
 args:
 - name: expression
   required: true
-  description: Jmespath expression
+  description: Jmespath expression.
 - name: value
   required: true
-  description: Original input value
+  description: Original input value.
 scripttarget: 0
 subtype: python3
-dockerimage: demisto/py3-tools:1.0.0.71964
+dockerimage: demisto/py3-tools:1.0.0.73055
 runas: DBotWeakRole
 fromversion: 5.0.0
 tests:
diff --git a/Packs/FiltersAndTransformers/pack_metadata.json b/Packs/FiltersAndTransformers/pack_metadata.json
index f9b16d77b2..aae062b89c 100644
--- a/Packs/FiltersAndTransformers/pack_metadata.json
+++ b/Packs/FiltersAndTransformers/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Filters And Transformers",
     "description": "Frequently used filters and transformers pack.",
     "support": "xsoar",
-    "currentVersion": "1.2.28",
+    "currentVersion": "1.2.29",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/SEKOIAIntelligenceCenter/ReleaseNotes/1_2_15.md b/Packs/SEKOIAIntelligenceCenter/ReleaseNotes/1_2_15.md
new file mode 100644
index 0000000000..274f573b4a
--- /dev/null
+++ b/Packs/SEKOIAIntelligenceCenter/ReleaseNotes/1_2_15.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### SEKOIAIntelligenceCenter
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
diff --git a/Packs/SEKOIAIntelligenceCenter/pack_metadata.json b/Packs/SEKOIAIntelligenceCenter/pack_metadata.json
index 851f41a8b2..be0dbdf9b1 100644
--- a/Packs/SEKOIAIntelligenceCenter/pack_metadata.json
+++ b/Packs/SEKOIAIntelligenceCenter/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "SEKOIAIntelligenceCenter",
     "description": "Request SEKOIA.IO Intelligence Center from Cortex XSOAR",
     "support": "partner",
-    "currentVersion": "1.2.14",
+    "currentVersion": "1.2.15",
     "author": "SEKOIA.IO",
     "url": "https://www.sekoia.io/en/contact/",
     "email": "contact@sekoia.io",
diff --git a/Packs/Zabbix/ReleaseNotes/1_0_19.md b/Packs/Zabbix/ReleaseNotes/1_0_19.md
new file mode 100644
index 0000000000..a27a3dc453
--- /dev/null
+++ b/Packs/Zabbix/ReleaseNotes/1_0_19.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Zabbix
+- Updated the Docker image to: *demisto/py3-tools:1.0.0.73055*.
diff --git a/Packs/Zabbix/pack_metadata.json b/Packs/Zabbix/pack_metadata.json
index 29f0c9d3ec..f8fd1c1eae 100644
--- a/Packs/Zabbix/pack_metadata.json
+++ b/Packs/Zabbix/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Zabbix",
     "description": "Allow integration with Zabbix api.",
     "support": "developer",
-    "currentVersion": "1.0.18",
+    "currentVersion": "1.0.19",
     "author": "Henrique Caires",
     "url": "https://support.zabbix.com/secure/Dashboard.jspa",
     "email": "henrique@caires.net.br",
-- 
2.41.0


From 127083d41851c041603ff179a4bcb5c499558b69 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:36:25 +0300
Subject: [PATCH 12/26] [Marketplace Contribution] Content Testing - Content
 Pack Update (#29520)

* [Marketplace Contribution] Content Testing - Content Pack Update (#29516)

* "contribution update to pack "Content Testing""

* validations fix

---------

Co-authored-by: Yehuda <yrosenberg@paloaltonetworks.com>

* fix RN

* fix RN#2

* fix Rn#3

* test

* test

* test

* add comment

---------

Co-authored-by: xsoar-bot <67315154+xsoar-bot@users.noreply.github.com>
Co-authored-by: Yehuda <yrosenberg@paloaltonetworks.com>
---
 Packs/ContentTesting/.pack-ignore                   |  2 ++
 .../Layouts/layoutscontainer-UnitTestLayout.json    |  6 +++---
 Packs/ContentTesting/ReleaseNotes/2_1_1.md          | 13 +++++++++++++
 .../Scripts/UnitTestPBAStats/UnitTestPBAStats.yml   |  2 +-
 Packs/ContentTesting/pack_metadata.json             |  2 +-
 5 files changed, 20 insertions(+), 5 deletions(-)
 create mode 100644 Packs/ContentTesting/ReleaseNotes/2_1_1.md

diff --git a/Packs/ContentTesting/.pack-ignore b/Packs/ContentTesting/.pack-ignore
index f7b4b3079c..8eabd17843 100644
--- a/Packs/ContentTesting/.pack-ignore
+++ b/Packs/ContentTesting/.pack-ignore
@@ -7,3 +7,5 @@ ignore=BA110
 [file:playbook-MockSubplaybook.yml]
 ignore=BA110
 
+[known_words]
+Avg
\ No newline at end of file
diff --git a/Packs/ContentTesting/Layouts/layoutscontainer-UnitTestLayout.json b/Packs/ContentTesting/Layouts/layoutscontainer-UnitTestLayout.json
index 635a6d8090..fb0649556f 100644
--- a/Packs/ContentTesting/Layouts/layoutscontainer-UnitTestLayout.json
+++ b/Packs/ContentTesting/Layouts/layoutscontainer-UnitTestLayout.json
@@ -736,7 +736,7 @@
                         "minH": 1,
                         "moved": false,
                         "name": "Task Average Duration (ms)",
-                        "query": "a21f363f-7ba8-4874-8ba0-81c069234bf5",
+                        "query": "UnitTestPBATaskAvg",
                         "queryType": "script",
                         "static": false,
                         "type": "dynamic",
@@ -753,7 +753,7 @@
                         "minH": 1,
                         "moved": false,
                         "name": "Task Maximum Duration (ms)",
-                        "query": "c5b23735-0954-4713-8c4b-50bfe46b24a0",
+                        "query": "UnitTestPBATaskMax",
                         "queryType": "script",
                         "static": false,
                         "type": "dynamic",
@@ -796,7 +796,7 @@
                         "minH": 1,
                         "moved": false,
                         "name": "Task Statistics ",
-                        "query": "3c4e931d-4c4b-4398-887c-88dacc4a7682",
+                        "query": "UnitTestPBAStats",
                         "queryType": "script",
                         "static": false,
                         "type": "dynamic",
diff --git a/Packs/ContentTesting/ReleaseNotes/2_1_1.md b/Packs/ContentTesting/ReleaseNotes/2_1_1.md
new file mode 100644
index 0000000000..eaa89e1889
--- /dev/null
+++ b/Packs/ContentTesting/ReleaseNotes/2_1_1.md
@@ -0,0 +1,13 @@
+
+#### Layouts
+
+##### UnitTestLayout
+
+- Improved layout by changing query references to script names from script IDs, for: Task Avg, Task Max, and Task Stats sections.
+
+<!--
+#### Scripts
+
+##### UnitTestPBAStats
+  - Minor change. Not necessary to document in release notes.
+-->
\ No newline at end of file
diff --git a/Packs/ContentTesting/Scripts/UnitTestPBAStats/UnitTestPBAStats.yml b/Packs/ContentTesting/Scripts/UnitTestPBAStats/UnitTestPBAStats.yml
index 9ec88a2f62..4e880037e0 100644
--- a/Packs/ContentTesting/Scripts/UnitTestPBAStats/UnitTestPBAStats.yml
+++ b/Packs/ContentTesting/Scripts/UnitTestPBAStats/UnitTestPBAStats.yml
@@ -4,7 +4,7 @@ commonfields:
 contentitemexportablefields:
   contentitemfields:
     fromServerVersion: ""
-comment: ''
+comment: Playbook statistics.
 dockerimage: demisto/python3:3.10.13.72123
 enabled: true
 name: UnitTestPBAStats
diff --git a/Packs/ContentTesting/pack_metadata.json b/Packs/ContentTesting/pack_metadata.json
index 29ecbaf6ba..31b6eedd38 100644
--- a/Packs/ContentTesting/pack_metadata.json
+++ b/Packs/ContentTesting/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Content Testing",
     "description": "Supports assessment of upgraded Marketplace content packs against custom content and enables content testing within XSOAR.  Dynamically select and test automations, playbooks, and sub-playbooks as required prior to push to production.  Create a \"UnitTesting\" incident type and review the \"Help\" tab in the layout for description of the tools available and the examples using the testing tools.",
     "support": "community",
-    "currentVersion": "2.1.0",
+    "currentVersion": "2.1.1",
     "author": "rurhrlaub",
     "url": "",
     "email": "",
-- 
2.41.0


From e1583770438a1e1a55e7fc8240d8a3061dd2b5d8 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:38:37 +0300
Subject: [PATCH 13/26] Update Docker Image To demisto/python3  (#29530)

* Updated Metadata Of Pack Securonix

* Added release notes to pack Securonix

* Packs/Securonix/Integrations/Securonix/Securonix.yml Docker image update

* Updated Metadata Of Pack illuminate

* Added release notes to pack illuminate

* Packs/illuminate/Integrations/Analyst1/Analyst1.yml Docker image update

* Updated Metadata Of Pack DeHashed

* Added release notes to pack DeHashed

* Packs/DeHashed/Integrations/DeHashed/DeHashed.yml Docker image update

* Updated Metadata Of Pack ForescoutEyeInspect

* Added release notes to pack ForescoutEyeInspect

* Packs/ForescoutEyeInspect/Integrations/ForescoutEyeInspect/ForescoutEyeInspect.yml Docker image update

* Updated Metadata Of Pack Stairwell

* Added release notes to pack Stairwell

* Packs/Stairwell/Integrations/Inception/Inception.yml Docker image update

* Updated Metadata Of Pack BmcITSM

* Added release notes to pack BmcITSM

* Packs/BmcITSM/Integrations/BmcITSM/BmcITSM.yml Docker image update

* Updated Metadata Of Pack SingleConnect

* Added release notes to pack SingleConnect

* Packs/SingleConnect/Integrations/SingleConnect/SingleConnect.yml Docker image update

* Updated Metadata Of Pack BmcHelixRemedyForce

* Added release notes to pack BmcHelixRemedyForce

* Packs/BmcHelixRemedyForce/Integrations/BmcHelixRemedyForce/BmcHelixRemedyForce.yml Docker image update

* Updated Metadata Of Pack AzureStorageTable

* Added release notes to pack AzureStorageTable

* Packs/AzureStorageTable/Integrations/AzureStorageTable/AzureStorageTable.yml Docker image update

* Updated Metadata Of Pack TrustwaveFusion

* Added release notes to pack TrustwaveFusion

* Packs/TrustwaveFusion/Integrations/TrustwaveFusion/TrustwaveFusion.yml Docker image update

* fix DS108

* commit

---------

Co-authored-by: israelpolishook <ipolishuk@paloaltonetworks.com>
---
 .../AzureStorageTable/AzureStorageTable.yml   |  10 +-
 .../AzureStorageTable/ReleaseNotes/1_0_18.md  |   3 +
 Packs/AzureStorageTable/pack_metadata.json    |   2 +-
 .../BmcHelixRemedyForce.yml                   |   2 +-
 .../ReleaseNotes/1_0_36.md                    |   3 +
 Packs/BmcHelixRemedyForce/pack_metadata.json  |   2 +-
 .../BmcITSM/Integrations/BmcITSM/BmcITSM.yml  |  74 ++++----
 Packs/BmcITSM/ReleaseNotes/1_0_16.md          |   3 +
 Packs/BmcITSM/pack_metadata.json              |   2 +-
 .../Integrations/DeHashed/DeHashed.yml        |   2 +-
 Packs/DeHashed/ReleaseNotes/1_1_20.md         |   3 +
 Packs/DeHashed/pack_metadata.json             |   2 +-
 .../ForescoutEyeInspect.yml                   |   4 +-
 .../ReleaseNotes/1_0_16.md                    |   3 +
 Packs/ForescoutEyeInspect/pack_metadata.json  |   2 +-
 .../Integrations/Securonix/Securonix.yml      |  24 +--
 Packs/Securonix/ReleaseNotes/2_0_12.md        |   3 +
 Packs/Securonix/pack_metadata.json            |   2 +-
 .../SingleConnect/SingleConnect.yml           | 160 ++++++++--------
 Packs/SingleConnect/ReleaseNotes/1_0_10.md    |   3 +
 Packs/SingleConnect/pack_metadata.json        |   2 +-
 .../Integrations/Inception/Inception.yml      |  14 +-
 Packs/Stairwell/ReleaseNotes/1_0_11.md        |   3 +
 Packs/Stairwell/pack_metadata.json            |   2 +-
 .../TrustwaveFusion/TrustwaveFusion.yml       | 176 +++++++++---------
 Packs/TrustwaveFusion/ReleaseNotes/1_0_9.md   |   3 +
 Packs/TrustwaveFusion/pack_metadata.json      |   2 +-
 .../Integrations/Analyst1/Analyst1.yml        |  60 +++---
 Packs/illuminate/ReleaseNotes/1_1_3.md        |   3 +
 Packs/illuminate/pack_metadata.json           |   2 +-
 30 files changed, 303 insertions(+), 273 deletions(-)
 create mode 100644 Packs/AzureStorageTable/ReleaseNotes/1_0_18.md
 create mode 100644 Packs/BmcHelixRemedyForce/ReleaseNotes/1_0_36.md
 create mode 100644 Packs/BmcITSM/ReleaseNotes/1_0_16.md
 create mode 100644 Packs/DeHashed/ReleaseNotes/1_1_20.md
 create mode 100644 Packs/ForescoutEyeInspect/ReleaseNotes/1_0_16.md
 create mode 100644 Packs/Securonix/ReleaseNotes/2_0_12.md
 create mode 100644 Packs/SingleConnect/ReleaseNotes/1_0_10.md
 create mode 100644 Packs/Stairwell/ReleaseNotes/1_0_11.md
 create mode 100644 Packs/TrustwaveFusion/ReleaseNotes/1_0_9.md
 create mode 100644 Packs/illuminate/ReleaseNotes/1_1_3.md

diff --git a/Packs/AzureStorageTable/Integrations/AzureStorageTable/AzureStorageTable.yml b/Packs/AzureStorageTable/Integrations/AzureStorageTable/AzureStorageTable.yml
index 34ea049fdf..3631538aaf 100644
--- a/Packs/AzureStorageTable/Integrations/AzureStorageTable/AzureStorageTable.yml
+++ b/Packs/AzureStorageTable/Integrations/AzureStorageTable/AzureStorageTable.yml
@@ -74,7 +74,7 @@ script:
     - description: Unique identifier for an entity within a given partition.
       name: row_key
       required: true
-    - description: 'Entity fields in JSON format: { "Key1": Value1, "Key2": Value2}'
+    - description: 'Entity fields in JSON format: { "Key1": Value1, "Key2": Value2}.'
       name: entity_fields
       required: true
     description: Insert a new entity into a table.
@@ -102,7 +102,7 @@ script:
     - description: Unique identifier for an entity within a given partition.
       name: row_key
       required: true
-    - description: 'Entity fields in JSON format: { "Key1": Value1, "Key2": Value2}'
+    - description: 'Entity fields in JSON format: { "Key1": Value1, "Key2": Value2}.'
       name: entity_fields
       required: true
     description: Update an existing entity in a table. The Update Entity command does not replace the existing entity.
@@ -117,7 +117,7 @@ script:
     - description: Unique identifier for an entity within a given partition.
       name: row_key
       required: true
-    - description: 'Entity records in JSON format: { "Key1": Value1, "Key2": Value2}'
+    - description: 'Entity records in JSON format: { "Key1": Value1, "Key2": Value2}.'
       name: entity_fields
       required: true
     description: Replace an existing entity in a table. The Replace Entity command replace the entire entity and can be used to remove properties.
@@ -158,7 +158,7 @@ script:
     - description: Entity table name.
       name: table_name
       required: true
-    - description: Unique identifier for the partition within a given table
+    - description: Unique identifier for the partition within a given table.
       name: partition_key
       required: true
     - description: Unique identifier for an entity within a given partition.
@@ -167,7 +167,7 @@ script:
     description: Delete an existing entity in a table.
     execution: true
     name: azure-storage-table-entity-delete
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   runonce: false
   script: '-'
   subtype: python3
diff --git a/Packs/AzureStorageTable/ReleaseNotes/1_0_18.md b/Packs/AzureStorageTable/ReleaseNotes/1_0_18.md
new file mode 100644
index 0000000000..285f82a99f
--- /dev/null
+++ b/Packs/AzureStorageTable/ReleaseNotes/1_0_18.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Azure Storage Table
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/AzureStorageTable/pack_metadata.json b/Packs/AzureStorageTable/pack_metadata.json
index 407f4393c8..7220f1feac 100644
--- a/Packs/AzureStorageTable/pack_metadata.json
+++ b/Packs/AzureStorageTable/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Azure Storage Table",
     "description": "Create and Manage Azure Storage Tables and Entities.",
     "support": "xsoar",
-    "currentVersion": "1.0.17",
+    "currentVersion": "1.0.18",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/BmcHelixRemedyForce/Integrations/BmcHelixRemedyForce/BmcHelixRemedyForce.yml b/Packs/BmcHelixRemedyForce/Integrations/BmcHelixRemedyForce/BmcHelixRemedyForce.yml
index 1b2c643e19..8bd2b4bca4 100644
--- a/Packs/BmcHelixRemedyForce/Integrations/BmcHelixRemedyForce/BmcHelixRemedyForce.yml
+++ b/Packs/BmcHelixRemedyForce/Integrations/BmcHelixRemedyForce/BmcHelixRemedyForce.yml
@@ -797,7 +797,7 @@ script:
     - contextPath: BmcRemedyforce.ServiceRequest.Type
       description: The type of the service request.
       type: String
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   isfetch: true
   runonce: false
   script: '-'
diff --git a/Packs/BmcHelixRemedyForce/ReleaseNotes/1_0_36.md b/Packs/BmcHelixRemedyForce/ReleaseNotes/1_0_36.md
new file mode 100644
index 0000000000..81dd5cf712
--- /dev/null
+++ b/Packs/BmcHelixRemedyForce/ReleaseNotes/1_0_36.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### BMC Helix Remedyforce
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/BmcHelixRemedyForce/pack_metadata.json b/Packs/BmcHelixRemedyForce/pack_metadata.json
index 0402cd5365..92929dc177 100644
--- a/Packs/BmcHelixRemedyForce/pack_metadata.json
+++ b/Packs/BmcHelixRemedyForce/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Bmc Helix Remedyforce",
     "description": "Integration of BMC Helix Remedyforce with Cortex XSOAR. BMC Helix Remedyforce integration allows customers to create/update service requests and incidents. It also allows to update status, resolve service requests and incidents with customer notes. This integration exposes standard ticketing capabilities that can be utilized as part of automation & orchestration.",
     "support": "xsoar",
-    "currentVersion": "1.0.35",
+    "currentVersion": "1.0.36",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/BmcITSM/Integrations/BmcITSM/BmcITSM.yml b/Packs/BmcITSM/Integrations/BmcITSM/BmcITSM.yml
index 4c4c3208eb..0630366e7b 100644
--- a/Packs/BmcITSM/Integrations/BmcITSM/BmcITSM.yml
+++ b/Packs/BmcITSM/Integrations/BmcITSM/BmcITSM.yml
@@ -168,7 +168,7 @@ script:
   script: ""
   type: python
   subtype: python3
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   commands:
   - name: bmc-itsm-user-list
     description: Retrieves a list of user profiles from BMC Helix ITSM. The records are retrieved by the query argument or by the filtering arguments. When using filtering arguments, each one defines a 'LIKE' operation and an 'AND' operator is used between them. To see the entire JSON then you can use the raw_response=true at the end of the command.
@@ -503,7 +503,7 @@ script:
       description: The ticket customer info.
       type: Unknown
     - contextPath: BmcITSM.Ticket.assignee
-      description: "The ticket assignee info. "
+      description: "The ticket assignee info."
       type: Unknown
     - contextPath: BmcITSM.Ticket.Summary
       description: The ticket summary.
@@ -521,7 +521,7 @@ script:
     description: Creates a new service request ticket. A service request ticket is the request record that is generated from the service request definition to manage and track the execution. To create it, you need to provide the srd_instance_id argument, which can be retrieved by by executing the bmc-itsm-service-request-definition-list command and extracting the instanceID field. User and company arguments can be retrieved by executing the bmc-itsm-user-list and bmc-itsm-company-list. To see the entire JSON then you can use the raw_response=true at the end of the command.
     arguments:
     - name: srd_instance_id
-      description: "The instance ID of the service request ticket. It can be retrieved by executing bmc-itsm-service-request-definition-list command. "
+      description: "The instance ID of the service request ticket. It can be retrieved by executing bmc-itsm-service-request-definition-list command."
       required: true
       defaultValue: ""
       predefined:
@@ -532,7 +532,7 @@ script:
       predefined:
       - ""
     - name: last_name
-      description: "The requester last name. By default it is determined by the logged in user. If provided, login_id, first_name, and last_name arguments must be provided together. "
+      description: "The requester last name. By default it is determined by the logged in user. If provided, login_id, first_name, and last_name arguments must be provided together."
       defaultValue: ""
       predefined:
       - ""
@@ -547,7 +547,7 @@ script:
       predefined:
       - ""
     - name: status
-      description: "The service request ticket status. "
+      description: "The service request ticket status."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -606,17 +606,17 @@ script:
       predefined:
       - ""
     - name: customer_first_name
-      description: "The customer first name. By default it is determined by the logged in user. "
+      description: "The customer first name. By default it is determined by the logged in user."
       defaultValue: ""
       predefined:
       - ""
     - name: customer_last_name
-      description: "The customer last name. By default it is determined by the logged in user. "
+      description: "The customer last name. By default it is determined by the logged in user."
       defaultValue: ""
       predefined:
       - ""
     - name: status
-      description: "The service request ticket status. "
+      description: "The service request ticket status."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -651,7 +651,7 @@ script:
       - 3-Moderate/Limited
       - 4-Minor/Localized
     - name: status_reason
-      description: "The reason for updating the status. Required only if status argument is provided. "
+      description: "The reason for updating the status. Required only if status argument is provided."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -699,7 +699,7 @@ script:
       - ""
     outputs: []
   - name: bmc-itsm-incident-update
-    description: "Update incident ticket. "
+    description: "Update incident ticket."
     arguments:
     - name: ticket_request_id
       description: The ID of the incident ticket to update.
@@ -723,7 +723,7 @@ script:
       predefined:
       - ""
     - name: service_type
-      description: "The type of the incident ticket. "
+      description: "The type of the incident ticket."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -763,7 +763,7 @@ script:
       - Closed
       - Cancelled
     - name: reported_source
-      description: "The incident ticket reported source. "
+      description: "The incident ticket reported source."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -885,7 +885,7 @@ script:
       - known error
     outputs: []
   - name: bmc-itsm-incident-create
-    description: "Creates a new incident ticket. An incident is any event that is not part of the standard operation of a service and that causes an interruption to or a reduction in the quality of that service. "
+    description: "Creates a new incident ticket. An incident is any event that is not part of the standard operation of a service and that causes an interruption to or a reduction in the quality of that service."
     arguments:
     - name: first_name
       description: The customer first name the incident ticket is for.
@@ -940,7 +940,7 @@ script:
       - 3-Moderate/Limited
       - 4-Minor/Localized
     - name: status
-      description: Incident status
+      description: Incident status.
       required: true
       defaultValue: ""
       auto: PREDEFINED
@@ -1028,7 +1028,7 @@ script:
       description: The incident ticket request ID.
       type: String
     - contextPath: BmcITSM.Incident.DisplayID
-      description: "The incident ticket display ID. "
+      description: "The incident ticket display ID."
       type: String
     - contextPath: BmcITSM.Incident.CreateDate
       description: "The incident ticket create date time in UTC."
@@ -1049,7 +1049,7 @@ script:
       predefined:
       - ""
     - name: customer_first_name
-      description: "The customer first name. "
+      description: "The customer first name."
       defaultValue: ""
       predefined:
       - ""
@@ -1164,12 +1164,12 @@ script:
       description: The ID of the change request ticket to update.
       required: true
     - name: first_name
-      description: "The customer first name the change request ticket is for. "
+      description: "The customer first name the change request ticket is for."
       defaultValue: ""
       predefined:
       - ""
     - name: last_name
-      description: "The customer last name the change request ticket is for. "
+      description: "The customer last name the change request ticket is for."
       defaultValue: ""
       predefined:
       - ""
@@ -1179,7 +1179,7 @@ script:
       predefined:
       - ""
     - name: change_type
-      description: "The change request ticket type. "
+      description: "The change request ticket type."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -1298,7 +1298,7 @@ script:
       predefined:
       - ""
     - name: status_reason
-      description: "The reason for updating the ticket status. Required when status is provided. "
+      description: "The reason for updating the ticket status. Required when status is provided."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -1370,18 +1370,18 @@ script:
       - problem investigation
       - known error
     - name: root_request_id
-      description: "The request ID of the parent ticket. Can be found in the context output of the bmc-itsm-ticket-list command. "
+      description: "The request ID of the parent ticket. Can be found in the context output of the bmc-itsm-ticket-list command."
       required: true
       defaultValue: ""
       predefined:
       - ""
     - name: root_request_name
-      description: "The display name of the parent ticket in the task ticket. If not provided, the parent ticket displayID is displayed. "
+      description: "The display name of the parent ticket in the task ticket. If not provided, the parent ticket displayID is displayed."
       defaultValue: ""
       predefined:
       - ""
     - name: root_request_mode
-      description: "The parent ticket request mode. "
+      description: "The parent ticket request mode."
       defaultValue: Real
       auto: PREDEFINED
       predefined:
@@ -1487,7 +1487,7 @@ script:
       description: The task ticket creation date time in UTC.
       type: Date
   - name: bmc-itsm-task-update
-    description: "Updates the task ticket. "
+    description: "Updates the task ticket."
     arguments:
     - name: ticket_request_id
       description: The ID of the task ticket to update.
@@ -1526,7 +1526,7 @@ script:
       - Closed
       - Bypassed
     - name: status_reason
-      description: "The reason for changing the ticket status. Required when the status is changed. "
+      description: "The reason for changing the ticket status. Required when the status is changed."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -1572,7 +1572,7 @@ script:
       predefined:
       - ""
     - name: task_type
-      description: "The task ticket type. "
+      description: "The task ticket type."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -1595,7 +1595,7 @@ script:
       - ""
     outputs: []
   - name: bmc-itsm-problem-investigation-create
-    description: "Creates a problem investigation ticket. "
+    description: "Creates a problem investigation ticket."
     arguments:
     - name: first_name
       description: The customer first name the ticket request is for.
@@ -1626,7 +1626,7 @@ script:
       - Closed
       - Cancelled
     - name: investigation_driver
-      description: "The problem investigation ticket driver. "
+      description: "The problem investigation ticket driver."
       required: true
       defaultValue: ""
       auto: PREDEFINED
@@ -1786,7 +1786,7 @@ script:
       - Closed
       - Cancelled
     - name: investigation_driver
-      description: "The problem investigation ticket driver. "
+      description: "The problem investigation ticket driver."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -1907,7 +1907,7 @@ script:
       - Not Applicable
     outputs: []
   - name: bmc-itsm-known-error-create
-    description: "Create known error ticket. "
+    description: "Create known error ticket."
     arguments:
     - name: status
       description: The known error ticket status.
@@ -1980,12 +1980,12 @@ script:
       predefined:
       - ""
     - name: assigned_group_pbm_mgr
-      description: It makes up the third tier of the Problem Coordinator’s Support Organization data structure
+      description: It makes up the third tier of the Problem Coordinator’s Support Organization data structure.
       defaultValue: ""
       predefined:
       - ""
     - name: support_company_pbm_mgr
-      description: "the Company for the Problem Coordinator’s Support Organization. It makes up the first tier of it. "
+      description: "the Company for the Problem Coordinator’s Support Organization. It makes up the first tier of it."
       defaultValue: ""
       predefined:
       - ""
@@ -2045,7 +2045,7 @@ script:
       description: KnownError Create time in UTC.
       type: Date
   - name: bmc-itsm-known-error-update
-    description: "Update Known Error ticket type. "
+    description: "Update Known Error ticket type."
     arguments:
     - name: ticket_request_id
       description: The known error ticket request ID.
@@ -2094,7 +2094,7 @@ script:
       - 3-Medium
       - 4-Low
     - name: view_access
-      description: "The known error ticket internal access. "
+      description: "The known error ticket internal access."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
@@ -2116,12 +2116,12 @@ script:
       predefined:
       - ""
     - name: assigned_group_pbm_mgr
-      description: It makes up the third tier of the Problem Coordinator’s Support Organization data structure
+      description: It makes up the third tier of the Problem Coordinator’s Support Organization data structure.
       defaultValue: ""
       predefined:
       - ""
     - name: support_company_pbm_mgr
-      description: "the Company for the Problem Coordinator’s Support Organization. It makes up the first tier of it. "
+      description: "the Company for the Problem Coordinator’s Support Organization. It makes up the first tier of it."
       defaultValue: ""
       predefined:
       - ""
@@ -2151,7 +2151,7 @@ script:
       predefined:
       - ""
     - name: status_reason
-      description: "The reason for changing the status. Required when the status is provided. "
+      description: "The reason for changing the status. Required when the status is provided."
       defaultValue: ""
       auto: PREDEFINED
       predefined:
diff --git a/Packs/BmcITSM/ReleaseNotes/1_0_16.md b/Packs/BmcITSM/ReleaseNotes/1_0_16.md
new file mode 100644
index 0000000000..b7c851e825
--- /dev/null
+++ b/Packs/BmcITSM/ReleaseNotes/1_0_16.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### BMC Helix ITSM
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/BmcITSM/pack_metadata.json b/Packs/BmcITSM/pack_metadata.json
index 880b129b63..7bfb4ab549 100644
--- a/Packs/BmcITSM/pack_metadata.json
+++ b/Packs/BmcITSM/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "BMC Helix ITSM",
     "description": "BMC Helix ITSM allows customers to manage service request, incident, change request, task, problem investigation and known error tickets.",
     "support": "xsoar",
-    "currentVersion": "1.0.15",
+    "currentVersion": "1.0.16",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/DeHashed/Integrations/DeHashed/DeHashed.yml b/Packs/DeHashed/Integrations/DeHashed/DeHashed.yml
index c6a54c7204..cbce683dd0 100644
--- a/Packs/DeHashed/Integrations/DeHashed/DeHashed.yml
+++ b/Packs/DeHashed/Integrations/DeHashed/DeHashed.yml
@@ -179,7 +179,7 @@ script:
     - contextPath: DBotScore.Reliability
       description: Reliability of the source providing the intelligence data.
       type: String
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   runonce: false
   script: '-'
   subtype: python3
diff --git a/Packs/DeHashed/ReleaseNotes/1_1_20.md b/Packs/DeHashed/ReleaseNotes/1_1_20.md
new file mode 100644
index 0000000000..90d189b041
--- /dev/null
+++ b/Packs/DeHashed/ReleaseNotes/1_1_20.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### DeHashed
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/DeHashed/pack_metadata.json b/Packs/DeHashed/pack_metadata.json
index 831f7305ae..fa3597aa9b 100644
--- a/Packs/DeHashed/pack_metadata.json
+++ b/Packs/DeHashed/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "DeHashed",
     "description": "This integration allows you to check if your personal information such as your email, username, or password is being compromised.",
     "support": "xsoar",
-    "currentVersion": "1.1.19",
+    "currentVersion": "1.1.20",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/ForescoutEyeInspect/Integrations/ForescoutEyeInspect/ForescoutEyeInspect.yml b/Packs/ForescoutEyeInspect/Integrations/ForescoutEyeInspect/ForescoutEyeInspect.yml
index 0531701757..f5f769e6b5 100644
--- a/Packs/ForescoutEyeInspect/Integrations/ForescoutEyeInspect/ForescoutEyeInspect.yml
+++ b/Packs/ForescoutEyeInspect/Integrations/ForescoutEyeInspect/ForescoutEyeInspect.yml
@@ -890,7 +890,7 @@ script:
     - description: The description of the group policy.
       name: description
       required: true
-    - description: "List of constraints of the policy.\n\nEach policy constraint is an object that includes the following fields:\n* type: The type of the constraint. Possible values are os_version, firmware_version, open_ports.\n* operator: The operator of the constraint. Possible values are equals (all types), allowed (open_ports) and contains (os_version, firmware_version).\n* os_version: The value of the OS version for the os_version type.\n* firmware_version: The value of the firmware version for the firmware_version type.\n* open_ports_tcp: Comma-separated list of ports or range of ports for the open_ports type. Example: \"10, 20-30\".\n* open_ports_udp: Comma-separated list of ports or range of ports for the open_ports type. Example: \"10, 20-30\".\n\nExample for list of policy constraints: [{ \"type\": \"os_version\", \"operator\": \"contains\", \"os_version\": \"Windows\" }]. "
+    - description: "List of constraints of the policy.\n\nEach policy constraint is an object that includes the following fields:\n* type: The type of the constraint. Possible values are os_version, firmware_version, open_ports.\n* operator: The operator of the constraint. Possible values are equals (all types), allowed (open_ports) and contains (os_version, firmware_version).\n* os_version: The value of the OS version for the os_version type.\n* firmware_version: The value of the firmware version for the firmware_version type.\n* open_ports_tcp: Comma-separated list of ports or range of ports for the open_ports type. Example: \"10, 20-30\".\n* open_ports_udp: Comma-separated list of ports or range of ports for the open_ports type. Example: \"10, 20-30\".\n\nExample for list of policy constraints: [{ \"type\": \"os_version\", \"operator\": \"contains\", \"os_version\": \"Windows\" }]."
       isArray: true
       name: constraints
       required: true
@@ -1113,7 +1113,7 @@ script:
     - contextPath: ForescoutEyeInspect.HostChangeLog.host_mac_addresses
       description: The MAC addresses associated to the host.
       type: String
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   isfetch: true
   runonce: false
   script: "-"
diff --git a/Packs/ForescoutEyeInspect/ReleaseNotes/1_0_16.md b/Packs/ForescoutEyeInspect/ReleaseNotes/1_0_16.md
new file mode 100644
index 0000000000..42b188be18
--- /dev/null
+++ b/Packs/ForescoutEyeInspect/ReleaseNotes/1_0_16.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Forescout EyeInspect
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/ForescoutEyeInspect/pack_metadata.json b/Packs/ForescoutEyeInspect/pack_metadata.json
index e59fb82abd..e803d5ebc8 100644
--- a/Packs/ForescoutEyeInspect/pack_metadata.json
+++ b/Packs/ForescoutEyeInspect/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Forescout EyeInspect",
     "description": "Get in-depth device visibility for OT networks",
     "support": "xsoar",
-    "currentVersion": "1.0.15",
+    "currentVersion": "1.0.16",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/Securonix/Integrations/Securonix/Securonix.yml b/Packs/Securonix/Integrations/Securonix/Securonix.yml
index ae2c3cd0d4..c916e055ae 100644
--- a/Packs/Securonix/Integrations/Securonix/Securonix.yml
+++ b/Packs/Securonix/Integrations/Securonix/Securonix.yml
@@ -400,7 +400,7 @@ script:
     - description: End date/time for which to retrieve activity data (in the format MM/dd/yyyy HH:mm:ss).
       name: to
       required: true
-    - description: Free-text query. For example, query="resourcegroupname=WindowsSnare and policyname=Possible Privilege Escalation - Self Escalation"."
+    - description: Free-text query, For example, query="resourcegroupname=WindowsSnare and policyname=Possible Privilege Escalation - Self Escalation".
       name: query
     - description: Paginate next set of results.
       name: query_id
@@ -598,7 +598,7 @@ script:
       description: Query Id for the pagination.
       type: String
   - arguments:
-    - description: ' Start time range for which to return incidents (<number> <time unit>, e.g., 1 hour, 30 minutes)'
+    - description: ' Start time range for which to return incidents (<number> <time unit>, e.g., 1 hour, 30 minutes).'
       name: from
       required: true
     - description: End date/time for which to retrieve incidents (in the format MM/dd/yyyy HH:mm:ss) Default is current time.
@@ -985,7 +985,7 @@ script:
   - arguments:
     - description: |-
         Start time range for which to return threats (Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ
-        For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z)
+        For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z).
       name: date_from
       required: true
     - description: |-
@@ -1157,9 +1157,9 @@ script:
       required: true
     - description: The type of attachment to retrieve. Supported options are csv, pdf, and txt. Comma-separated values are supported.
       name: attachment_type
-    - description: 'Start time for which to retrieve attachments.(Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ, yyyy-MM-ddTHH:mm:ss.SSSZ. For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z, 2023-01-26T14:05:44.000Z)'
+    - description: 'Start time for which to retrieve attachments.(Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ, yyyy-MM-ddTHH:mm:ss.SSSZ. For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z, 2023-01-26T14:05:44.000Z).'
       name: from
-    - description: 'End time for which to retrieve attachments.(Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ, yyyy-MM-ddTHH:mm:ss.SSSZ. For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z, 2023-01-26T14:05:44.000Z)'
+    - description: 'End time for which to retrieve attachments.(Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ, yyyy-MM-ddTHH:mm:ss.SSSZ. For example: 01 Jan 2023, 01 Feb 2023 04:45:33, 2023-01-26T14:05:44Z, 2023-01-26T14:05:44.000Z).'
       name: to
     description: Retrieves the attachments available on the Securonix platform.
     name: securonix-incident-attachment-get
@@ -1293,7 +1293,7 @@ script:
       name: whitelist_name
       required: true
     - auto: PREDEFINED
-      description: The type of the whitelist to which data is being added. (Supported Values are Global and Attribute.)
+      description: The type of the whitelist to which data is being added. (Supported Values are Global and Attribute.).
       name: whitelist_type
       predefined:
       - Global
@@ -1315,7 +1315,7 @@ script:
 
         This parameter is required if whitelist_type is Global.
       name: entity_id
-    - description: The date when the entity will be removed from the whitelist.(In MM/DD/YYYY format)
+    - description: The date when the entity will be removed from the whitelist.(In MM/DD/YYYY format).
       name: expiry_date
     - description: "The resource name to which the account belongs. \n\nThis parameter is required if whitelist_type is Global and entity_type is Activityaccount."
       name: resource_name
@@ -1341,7 +1341,7 @@ script:
       - Policy
       - ThreatModel
       - Functionality
-    - description: "Name of the violations. (Supported values are Policy names, ThreatModel names, Functionality names)\n\nThis parameter is required if whitelist_type is set to Attribute, and is the same as the whitelist name parameter. "
+    - description: "Name of the violations. (Supported values are Policy names, ThreatModel names, Functionality names)\n\nThis parameter is required if whitelist_type is set to Attribute, and is the same as the whitelist name parameter."
       name: violation_name
     description: Add entity or attribute to the specified whitelist entry.
     name: securonix-whitelist-entry-add
@@ -1380,7 +1380,7 @@ script:
         - employeeId for type User
         - accountname for type ActivityAccount
         - resourcename for type Resources
-        - ipadress for type IpAddress
+        - ipadress for type IpAddress.
       name: entity_id
     - description: |-
         Name of the attribute being removed.
@@ -1390,7 +1390,7 @@ script:
         Example:
         - accountname
         - transactionstring
-        - sourcetype
+        - sourcetype.
       name: attribute_name
     - description: |-
         The value of the attribute being removed.
@@ -1433,7 +1433,7 @@ script:
     - description: |-
         JSON formatted string containing the field names and values in the below format. To specify an expiration date for an entry, add "expiryDate" key (in the format of "MM/DD/YYYY") in the respective JSON object.
 
-        E.g. [{"field1": "Value1", "field2": "Value2"}, {"field1": "Value3", "field2": "Value4"}]
+        E.g. [{"field1": "Value1", "field2": "Value2"}, {"field1": "Value3", "field2": "Value4"}].
       name: json_data
     - description: War room entry of the file. To specify an expiration date for an entry, add "expiryDate" key (in the format of "MM/DD/YYYY") in the respective JSON object.
       name: file_entry_id
@@ -1528,7 +1528,7 @@ script:
       required: true
     description: Deletes the entries from the lookup table.
     name: securonix-lookup-table-entries-delete
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   isfetch: true
   runonce: false
   script: '-'
diff --git a/Packs/Securonix/ReleaseNotes/2_0_12.md b/Packs/Securonix/ReleaseNotes/2_0_12.md
new file mode 100644
index 0000000000..09470fd467
--- /dev/null
+++ b/Packs/Securonix/ReleaseNotes/2_0_12.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Securonix
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/Securonix/pack_metadata.json b/Packs/Securonix/pack_metadata.json
index 4591906efa..4b8baa2504 100644
--- a/Packs/Securonix/pack_metadata.json
+++ b/Packs/Securonix/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Securonix",
     "description": "Use the Securonix integration to manage incidents, threats, lookup tables, whitelists and watchlists.",
     "support": "partner",
-    "currentVersion": "2.0.11",
+    "currentVersion": "2.0.12",
     "author": "Securonix",
     "url": "https://www.securonix.com",
     "email": "support@securonix.com",
diff --git a/Packs/SingleConnect/Integrations/SingleConnect/SingleConnect.yml b/Packs/SingleConnect/Integrations/SingleConnect/SingleConnect.yml
index 6ffb551bbc..1bcafed371 100644
--- a/Packs/SingleConnect/Integrations/SingleConnect/SingleConnect.yml
+++ b/Packs/SingleConnect/Integrations/SingleConnect/SingleConnect.yml
@@ -26,250 +26,250 @@ display: Single Connect
 name: SingleConnect
 script:
   commands:
-  - description: List all the accounts in the SAPM
+  - description: List all the accounts in the SAPM.
     name: single-connect-sapm-account-list-all
     outputs:
     - contextPath: SingleConnect.SapmAccount.dbId
-      description: ID of SAPM Account
+      description: ID of SAPM Account.
       type: Number
     - contextPath: SingleConnect.SapmAccount.device.name
-      description: The name of the device where the account is located
+      description: The name of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.device.accessProtocol
-      description: Protocol accessed on the device where the account is located
+      description: Protocol accessed on the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.device.managementIp
-      description: IP Address of the device where the account is located
+      description: IP Address of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretName
-      description: Name of the account in the SAPM
+      description: Name of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.config.name
-      description: Configuration name where the account is managed in the SAPM
+      description: Configuration name where the account is managed in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.changePeriod
-      description: Password change period of the account in the SAPM
+      description: Password change period of the account in the SAPM.
       type: Number
     - contextPath: SingleConnect.SapmAccount.username
-      description: Username of the account on the device
+      description: Username of the account on the device.
       type: String
     - contextPath: SingleConnect.SapmAccount.description
-      description: Description of the account in the SAPM
+      description: Description of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.lastChangeTime
-      description: Last time the account password was changed
+      description: Last time the account password was changed.
       type: Date
     - contextPath: SingleConnect.SapmAccount.nextChangeTime
-      description: Time for next password change of account password
+      description: Time for next password change of account password.
       type: Date
     - contextPath: SingleConnect.SapmAccount.passwordSeenStatus
-      description: Password seen status of the account
+      description: Password seen status of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.validationStatus
-      description: Password validity status of account
+      description: Password validity status of account.
       type: String
     - contextPath: SingleConnect.SapmAccount.permissions.userGroupId
-      description: ID of the user group that has access to the account
+      description: ID of the user group that has access to the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.permissions.permission
-      description: Access permission level of the user group that has access to the account
+      description: Access permission level of the user group that has access to the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.managers.eid
-      description: Manager user group ID that approves the account
+      description: Manager user group ID that approves the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.parentSapmGroup.name
-      description: The name of the SAPM group the account is under
+      description: The name of the SAPM group the account is under.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretType
-      description: Type of account to be managed
+      description: Type of account to be managed.
       type: String
     - contextPath: SingleConnect.SapmAccount.owner
-      description: Owner of the account
+      description: Owner of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.createdAt
-      description: Creation time of Account
+      description: Creation time of Account.
       type: Date
     - contextPath: SingleConnect.SapmAccount.updatedAt
-      description: The time the account was last edited
+      description: The time the account was last edited.
       type: Date
     - contextPath: SingleConnect.SapmAccount.approvalRequired
-      description: Approval requirement of account
+      description: Approval requirement of account.
       type: Boolean
     - contextPath: SingleConnect.SapmAccount.privateType
-      description: The status of the account being private to account owner
+      description: The status of the account being private to account owner.
       type: String
     - contextPath: SingleConnect.SapmAccount.groupFullPath
-      description: The full path of the SAPM group that the account is under
+      description: The full path of the SAPM group that the account is under.
       type: String
   - arguments:
-    - description: Password expiration time of account
+    - description: Password expiration time of account.
       name: password_expiration_in_minute
       required: true
-    - description: ID of SAPM account in the database (can be retrieved from single-connect-sapm-account-list-all or single-connect-sapm-account-search-with-secret-name commands' output)
+    - description: ID of SAPM account in the database (can be retrieved from single-connect-sapm-account-list-all or single-connect-sapm-account-search-with-secret-name commands' output).
       name: sapm_db_id
       required: true
-    - description: Leave a comment explaining why the password is accessed
+    - description: Leave a comment explaining why the password is accessed.
       name: comment
       required: true
     description: Get the password for a specific SAPM account.
     name: single-connect-sapm-account-show-password
     outputs:
     - contextPath: SingleConnect.SapmAccount.passwordPart
-      description: All or Part of the Password
+      description: All or Part of the Password.
       type: String
     - contextPath: SingleConnect.SapmAccount.password
-      description: Account password
+      description: Account password.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretNotes
-      description: Secret description defined for the account
+      description: Secret description defined for the account.
       type: String
   - arguments:
-    - description: Full or partial IP address of device
+    - description: Full or partial IP address of device.
       name: device_ip
       required: true
-    description: List all the SAPM accounts on a specific device
+    description: List all the SAPM accounts on a specific device.
     name: single-connect-device-list-sapm-accounts
     outputs:
     - contextPath: SingleConnect.SapmAccount.dbId
-      description: ID of SAPM Account
+      description: ID of SAPM Account.
       type: Number
     - contextPath: SingleConnect.SapmAccount.configName
-      description: Configuration name where the account is managed in the SAPM
+      description: Configuration name where the account is managed in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.username
-      description: Username of the account on the device
+      description: Username of the account on the device.
       type: String
     - contextPath: SingleConnect.SapmAccount.description
-      description: Description of the account in the SAPM
+      description: Description of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.nextChangeTime
-      description: Time for next password change of account password
+      description: Time for next password change of account password.
       type: Date
     - contextPath: SingleConnect.SapmAccount.lastChangeTime
-      description: Last time the account password was changed
+      description: Last time the account password was changed.
       type: Date
     - contextPath: SingleConnect.SapmAccount.passwordSeenStatus
-      description: Password seen status of the account
+      description: Password seen status of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.validationStatus
-      description: Password validity status of account
+      description: Password validity status of account.
       type: String
     - contextPath: SingleConnect.SapmAccount.approvalStatus
-      description: Status of the account requiring approval
+      description: Status of the account requiring approval.
       type: String
     - contextPath: SingleConnect.SapmAccount.ip
-      description: IP Address of the device where the account is located
+      description: IP Address of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.hostName
-      description: The name of the device where the account is located
+      description: The name of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.groupName
-      description: The name of the SAPM group the account is under
+      description: The name of the SAPM group the account is under.
       type: String
     - contextPath: SingleConnect.SapmAccount.groupFullPath
-      description: The full path of the SAPM group that the account is under
+      description: The full path of the SAPM group that the account is under.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretName
-      description: Name of the account in the SAPM
+      description: Name of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretType
-      description: Type of account to be managed
+      description: Type of account to be managed.
       type: String
     - contextPath: SingleConnect.SapmAccount.owner
-      description: Owner of the account
+      description: Owner of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.privateType
-      description: The status of the account being private to account owner
+      description: The status of the account being private to account owner.
       type: String
     - contextPath: SingleConnect.SapmAccount.changePeriod
-      description: Password change period of the account in the SAPM
+      description: Password change period of the account in the SAPM.
       type: Number
     - contextPath: SingleConnect.SapmAccount.createdAt
-      description: Creation time of Account
+      description: Creation time of Account.
       type: Date
     - contextPath: SingleConnect.SapmAccount.updatedAt
-      description: The time the account was last edited
+      description: The time the account was last edited.
       type: Date
   - arguments:
-    - description: Full or partial account name of the SAPM account
+    - description: Full or partial account name of the SAPM account.
       name: secret_name
       required: true
-    description: List the accounts with given secretName
+    description: List the accounts with given secretName.
     name: single-connect-sapm-account-search-with-secret-name
     outputs:
     - contextPath: SingleConnect.SapmAccount.dbId
-      description: ID of SAPM Account
+      description: ID of SAPM Account.
       type: Number
     - contextPath: SingleConnect.SapmAccount.device.name
-      description: The name of the device where the account is located
+      description: The name of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.device.accessProtocol
-      description: Protocol accessed on the device where the account is located
+      description: Protocol accessed on the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.device.managementIp
-      description: IP Address of the device where the account is located
+      description: IP Address of the device where the account is located.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretName
-      description: Name of the account in the SAPM
+      description: Name of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.config.name
-      description: Configuration name where the account is managed in the SAPM
+      description: Configuration name where the account is managed in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.changePeriod
-      description: Password change period of the account in the SAPM
+      description: Password change period of the account in the SAPM.
       type: Number
     - contextPath: SingleConnect.SapmAccount.username
-      description: Username of the account on the device
+      description: Username of the account on the device.
       type: String
     - contextPath: SingleConnect.SapmAccount.description
-      description: Description of the account in the SAPM
+      description: Description of the account in the SAPM.
       type: String
     - contextPath: SingleConnect.SapmAccount.lastChangeTime
-      description: Last time the account password was changed
+      description: Last time the account password was changed.
       type: Date
     - contextPath: SingleConnect.SapmAccount.nextChangeTime
-      description: Time for next password change of account password
+      description: Time for next password change of account password.
       type: Date
     - contextPath: SingleConnect.SapmAccount.passwordSeenStatus
-      description: Password seen status of the account
+      description: Password seen status of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.validationStatus
-      description: Password validity status of account
+      description: Password validity status of account.
       type: String
     - contextPath: SingleConnect.SapmAccount.permissions.userGroupId
-      description: ID of the user group that has access to the account
+      description: ID of the user group that has access to the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.permissions.permission
-      description: Access permission level of the user group that has access to the account
+      description: Access permission level of the user group that has access to the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.managers.eid
-      description: Manager user group ID that approves the account
+      description: Manager user group ID that approves the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.parentSapmGroup.name
-      description: The name of the SAPM group the account is under
+      description: The name of the SAPM group the account is under.
       type: String
     - contextPath: SingleConnect.SapmAccount.secretType
-      description: Type of account to be managed
+      description: Type of account to be managed.
       type: String
     - contextPath: SingleConnect.SapmAccount.owner
-      description: Owner of the account
+      description: Owner of the account.
       type: String
     - contextPath: SingleConnect.SapmAccount.createdAt
-      description: Creation time of Account
+      description: Creation time of Account.
       type: Date
     - contextPath: SingleConnect.SapmAccount.updatedAt
-      description: The time the account was last edited
+      description: The time the account was last edited.
       type: Date
     - contextPath: SingleConnect.SapmAccount.approvalRequired
-      description: Approval requirement of account
+      description: Approval requirement of account.
       type: Boolean
     - contextPath: SingleConnect.SapmAccount.privateType
-      description: The status of the account being private to account owner
+      description: The status of the account being private to account owner.
       type: String
     - contextPath: SingleConnect.SapmAccount.groupFullPath
-      description: The full path of the SAPM group that the account is under
+      description: The full path of the SAPM group that the account is under.
       type: String
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   runonce: false
   script: '-'
   subtype: python3
diff --git a/Packs/SingleConnect/ReleaseNotes/1_0_10.md b/Packs/SingleConnect/ReleaseNotes/1_0_10.md
new file mode 100644
index 0000000000..f8d39804ef
--- /dev/null
+++ b/Packs/SingleConnect/ReleaseNotes/1_0_10.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Single Connect
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/SingleConnect/pack_metadata.json b/Packs/SingleConnect/pack_metadata.json
index 7e57e89995..2aab3df6dc 100644
--- a/Packs/SingleConnect/pack_metadata.json
+++ b/Packs/SingleConnect/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Single Connect",
     "description": "Single Connect enables enterprises to remove static passwords stored in applications by instead keeping passwords in a secure password vault. It secures access to passwords through token-based authentication",
     "support": "partner",
-    "currentVersion": "1.0.9",
+    "currentVersion": "1.0.10",
     "author": "Krontech",
     "url": "https://kron.com.tr/en/single-connect",
     "email": "",
diff --git a/Packs/Stairwell/Integrations/Inception/Inception.yml b/Packs/Stairwell/Integrations/Inception/Inception.yml
index 8e79bb87e0..191afe1573 100644
--- a/Packs/Stairwell/Integrations/Inception/Inception.yml
+++ b/Packs/Stairwell/Integrations/Inception/Inception.yml
@@ -28,27 +28,27 @@ script:
     arguments:
     - name: sha256
       required: true
-      description: File hash (SHA256)
-    description: Discover variants using a file hash (SHA256)
+      description: File hash (SHA256).
+    description: Discover variants using a file hash (SHA256).
     outputs:
     - contextPath: Inception.Variants
       type: Dictionary
-      description: Variants discovered
+      description: Variants discovered.
   - name: inception-file-enrichment
     arguments:
     - name: fileHash
       required: true
-      description: File hash (MD5, SHA1, or SHA256)
-    description: Enrich files using file hash (MD5, SHA1, SHA256)
+      description: File hash (MD5, SHA1, or SHA256).
+    description: Enrich files using file hash (MD5, SHA1, SHA256).
     outputs:
     - contextPath: Inception.File_Details
       type: Dictionary
-      description: File details from enrichment
+      description: File details from enrichment.
   runonce: false
   script: '-'
   type: python
   subtype: python3
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
 fromversion: 6.5.0
 tests:
 - No tests (auto formatted)
diff --git a/Packs/Stairwell/ReleaseNotes/1_0_11.md b/Packs/Stairwell/ReleaseNotes/1_0_11.md
new file mode 100644
index 0000000000..3cf1f995d0
--- /dev/null
+++ b/Packs/Stairwell/ReleaseNotes/1_0_11.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Stairwell Inception
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/Stairwell/pack_metadata.json b/Packs/Stairwell/pack_metadata.json
index df7f9f340c..4b1169fabe 100644
--- a/Packs/Stairwell/pack_metadata.json
+++ b/Packs/Stairwell/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Stairwell",
     "description": "Inception is a security intelligence engine that automates the continuous capture, storage, and analysis of executable files.",
     "support": "partner",
-    "currentVersion": "1.0.10",
+    "currentVersion": "1.0.11",
     "author": "Stairwell",
     "url": "https://www.stairwell.com",
     "email": "support@stairwell.com",
diff --git a/Packs/TrustwaveFusion/Integrations/TrustwaveFusion/TrustwaveFusion.yml b/Packs/TrustwaveFusion/Integrations/TrustwaveFusion/TrustwaveFusion.yml
index 865e077de2..7c9553067d 100644
--- a/Packs/TrustwaveFusion/Integrations/TrustwaveFusion/TrustwaveFusion.yml
+++ b/Packs/TrustwaveFusion/Integrations/TrustwaveFusion/TrustwaveFusion.yml
@@ -50,7 +50,7 @@ configuration:
   - CHANGE
   type: 16
   required: false
-description: |
+description: |-
   The Trustwave Fusion platform connects your organization’s digital footprint
   to a robust security cloud comprised of the Trustwave data lake, advanced
   analytics, actionable threat intelligence and a wide range of Trustwave
@@ -65,26 +65,26 @@ script:
   - arguments:
     - default: true
       defaultValue:
-      description: Ticket ID
+      description: Ticket ID.
       name: id
       required: true
-    description: Get a single ticket
+    description: Get a single ticket.
     name: trustwave-get-ticket
     outputs:
     - contextPath: Trustwave.Ticket.number
-      description: 'The Ticket ID'
+      description: 'The Ticket ID.'
       type: String
     - contextPath: Trustwave.Ticket.subject
       description: 'The ticket title.'
       type: String
     - contextPath: Trustwave.Ticket.status
-      description: 'The status of the ticket'
+      description: 'The status of the ticket.'
       type: String
     - contextPath: Trustwave.Ticket.description
       description: 'The detailed ticket description.'
       type: String
     - contextPath: Trustwave.Ticket.category
-      description: 'Ticket category'
+      description: 'Ticket category.'
       type: String
     - contextPath: Trustwave.Ticket.createdBy
       description: 'User that created the ticket.'
@@ -108,10 +108,10 @@ script:
       description: 'Human readable Notes for the ticket.'
       type: String
     - contextPath: Trustwave.Ticket.impact
-      description: 'Ticket impact (HIGH, MEDIUM, LOW)'
+      description: 'Ticket impact (HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.notes.actor
-      description: 'User that added the note (comment)'
+      description: 'User that added the note (comment).'
       type: String
     - contextPath: Trustwave.Ticket.notes.text
       description: 'The note (comment) text.'
@@ -120,30 +120,30 @@ script:
       description: 'Time when the note (comment) was created.'
       type: Date
     - contextPath: Trustwave.Ticket.priority
-      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW)'
+      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.subCategory
       description: 'Ticket sub-category.'
       type: String
     - contextPath: Trustwave.Ticket.type
-      description: 'The ticket type (CASE, INCIDENT, CHANGE)'
+      description: 'The ticket type (CASE, INCIDENT, CHANGE).'
       type: String
     - contextPath: Trustwave.Ticket.updatedOn
       description: 'When the ticket was last updated.'
       type: Date
     - contextPath: Trustwave.Ticket.urgency
-      description: 'The ticket urgency (HIGH, MEDIUM, LOW)'
+      description: 'The ticket urgency (HIGH, MEDIUM, LOW).'
       type: String
   - arguments:
     - defaultValue:
-      description: Ticket ID
+      description: Ticket ID.
       name: id
     - defaultValue:
-      description: Ticket Subject
+      description: Ticket Subject.
       name: subject
     - auto: PREDEFINED
       defaultValue:
-      description: Ticket type to query
+      description: Ticket type to query.
       isArray: true
       name: type
       predefined:
@@ -152,7 +152,7 @@ script:
       - CHANGE
     - auto: PREDEFINED
       defaultValue:
-      description: Ticket status
+      description: Ticket status.
       isArray: true
       name: status
       predefined:
@@ -167,7 +167,7 @@ script:
       - SCHEDULED
     - auto: PREDEFINED
       defaultValue:
-      description: Ticket priority
+      description: Ticket priority.
       isArray: true
       name: priority
       predefined:
@@ -177,7 +177,7 @@ script:
       - LOW
     - auto: PREDEFINED
       defaultValue:
-      description: Ticket impact
+      description: Ticket impact.
       isArray: true
       name: impact
       predefined:
@@ -186,24 +186,24 @@ script:
       - LOW
     - auto: PREDEFINED
       defaultValue:
-      description: Ticket urgency
+      description: Ticket urgency.
       isArray: true
       name: urgency
       predefined:
       - HIGH
       - MEDIUM
       - LOW
-    description: Search tickets
+    description: Search tickets.
     name: trustwave-search-tickets
     outputs:
     - contextPath: Trustwave.Ticket.number
-      description: 'The Ticket ID'
+      description: 'The Ticket ID.'
       type: String
     - contextPath: Trustwave.Ticket.subject
       description: 'The ticket title.'
       type: String
     - contextPath: Trustwave.Ticket.status
-      description: 'The status of the ticket'
+      description: 'The status of the ticket.'
       type: String
     - contextPath: Trustwave.Ticket.description
       description: 'The detailed ticket description.'
@@ -224,10 +224,10 @@ script:
       description: 'Human readable notes.'
       type: String
     - contextPath: Trustwave.Ticket.impact
-      description: 'Ticket impact (HIGH, MEDIUM, LOW)'
+      description: 'Ticket impact (HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.notes.actor
-      description: 'User that added the note (comment)'
+      description: 'User that added the note (comment).'
       type: String
     - contextPath: Trustwave.Ticket.notes.text
       description: 'The note (comment) text.'
@@ -236,53 +236,53 @@ script:
       description: 'Time when the note (comment) was created.'
       type: Date
     - contextPath: Trustwave.Ticket.priority
-      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW)'
+      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.subCategory
       description: 'Ticket sub-category.'
       type: String
     - contextPath: Trustwave.Ticket.type
-      description: 'The ticket type (CASE, INCIDENT, CHANGE)'
+      description: 'The ticket type (CASE, INCIDENT, CHANGE).'
       type: String
     - contextPath: Trustwave.Ticket.updatedOn
       description: 'When the ticket was last updated.'
       type: Date
     - contextPath: Trustwave.Ticket.urgency
-      description: 'The ticket urgency (HIGH, MEDIUM, LOW)'
+      description: 'The ticket urgency (HIGH, MEDIUM, LOW).'
       type: String
   - arguments:
     - defaultValue:
-      description: Incident ID
+      description: Incident ID.
       name: id
       required: true
     - defaultValue:
-      description: Comment text
+      description: Comment text.
       name: comment
       required: true
-    description: Add a comment to a ticket
+    description: Add a comment to a ticket.
     name: trustwave-add-ticket-comment
   - arguments:
     - defaultValue:
-      description: Incident ID
+      description: Incident ID.
       name: id
       required: true
     - defaultValue:
-      description: Comment text
+      description: Comment text.
       name: comment
       required: true
-    description: Close a ticket
+    description: Close a ticket.
     name: trustwave-close-ticket
   - arguments:
     - defaultValue:
-      description: Absolute or relative date to check for updates
+      description: Absolute or relative date to check for updates.
       name: since
       required: true
     - defaultValue: 100
-      description: Maximum number of tickets to fetch
+      description: Maximum number of tickets to fetch.
       name: fetch_limit
     - auto: PREDEFINED
       defaultValue: INCIDENT
-      description: Ticket type to query
+      description: Ticket type to query.
       isArray: true
       name: ticket_types
       predefined:
@@ -293,13 +293,13 @@ script:
     name: trustwave-get-updated-tickets
     outputs:
     - contextPath: Trustwave.Ticket.number
-      description: 'The Ticket ID'
+      description: 'The Ticket ID.'
       type: String
     - contextPath: Trustwave.Ticket.subject
       description: 'The ticket title.'
       type: String
     - contextPath: Trustwave.Ticket.status
-      description: 'The status of the ticket'
+      description: 'The status of the ticket.'
       type: String
     - contextPath: Trustwave.Ticket.description
       description: 'The detailed ticket description.'
@@ -320,10 +320,10 @@ script:
       description: 'Human readable notes.'
       type: String
     - contextPath: Trustwave.Ticket.impact
-      description: 'Ticket impact (HIGH, MEDIUM, LOW)'
+      description: 'Ticket impact (HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.notes.actor
-      description: 'User that added the note (comment)'
+      description: 'User that added the note (comment).'
       type: String
     - contextPath: Trustwave.Ticket.notes.text
       description: 'The note (comment) text.'
@@ -332,41 +332,41 @@ script:
       description: 'Time when the note (comment) was created.'
       type: Date
     - contextPath: Trustwave.Ticket.priority
-      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW)'
+      description: 'Ticket priority (CRITICAL, HIGH, MEDIUM, LOW).'
       type: String
     - contextPath: Trustwave.Ticket.subCategory
       description: 'Ticket sub-category.'
       type: String
     - contextPath: Trustwave.Ticket.type
-      description: 'The ticket type (CASE, INCIDENT, CHANGE)'
+      description: 'The ticket type (CASE, INCIDENT, CHANGE).'
       type: String
     - contextPath: Trustwave.Ticket.updatedOn
       description: 'When the ticket was last updated.'
       type: Date
     - contextPath: Trustwave.Ticket.urgency
-      description: 'The ticket urgency (HIGH, MEDIUM, LOW)'
+      description: 'The ticket urgency (HIGH, MEDIUM, LOW).'
       type: String
   - arguments:
     - defaultValue:
-      description: Finding ID
+      description: Finding ID.
       name: id
     - defaultValue: 100
-      description: Maximum number of Findings to return
+      description: Maximum number of Findings to return.
       name: limit
     - defaultValue:
-      description: Name of the Finding
+      description: Name of the Finding.
       name: name
     - defaultValue:
-      description: Finding Classification
+      description: Finding Classification.
       name: classification
     - defaultValue:
-      description: Finding summary
+      description: Finding summary.
       name: summary
     - defaultValue:
-      description: Finding detail
+      description: Finding detail.
       name: detail
     - defaultValue:
-      description: Finding priority
+      description: Finding priority.
       isArray: true
       name: priority
       auto: PREDEFINED
@@ -376,20 +376,20 @@ script:
       - MEDIUM
       - LOW
     - defaultValue:
-      description: Finding severity
+      description: Finding severity.
       isArray: true
       name: severity
     - defaultValue:
-      description: created_since
+      description: created_since.
       name: created_since
     - defaultValue:
       description: Updated since.
       name: updated_since
-    description: Search for Findings
+    description: Search for Findings.
     name: trustwave-search-findings
     outputs:
     - contextPath: Trustwave.Finding.classification
-      description: 'Category for the finding'
+      description: 'Category for the finding.'
       type: String
     - contextPath: Trustwave.Finding.createdOn
       description: 'Time when the finding was created.'
@@ -404,7 +404,7 @@ script:
       description: 'Detailed description of the finding.'
       type: String
     - contextPath: Trustwave.Finding.id
-      description: 'The finding ID'
+      description: 'The finding ID.'
       type: String
     - contextPath: Trustwave.Finding.priority
       description: 'The priority of the finding.'
@@ -422,7 +422,7 @@ script:
       description: 'The name of the finding.'
       type: String
     - contextPath: Trustwave.Finding.type
-      description: 'The type of finding (e.g. THREAT, VULNERABILITY)'
+      description: 'The type of finding (e.g. THREAT, VULNERABILITY).'
       type: String
     - contextPath: Trustwave.Finding.updatedOn
       description: 'Time when the finding was last updated.'
@@ -430,10 +430,10 @@ script:
   - arguments:
     - default: true
       defaultValue:
-      description: Finding ID
+      description: Finding ID.
       name: id
       required: true
-    description: Get a Finding
+    description: Get a Finding.
     name: trustwave-get-finding
     outputs:
     - contextPath: Trustwave.Finding.analystNotes.actor
@@ -443,13 +443,13 @@ script:
       description: 'Analyst note text.'
       type: String
     - contextPath: Trustwave.Finding.analystNotes.timestamp
-      description: 'Time when the note was created'
+      description: 'Time when the note was created.'
       type: Date
     - contextPath: Trustwave.Finding.assetsIds
-      description: 'Assets impacted by the finding'
+      description: 'Assets impacted by the finding.'
       type: String
     - contextPath: Trustwave.Finding.classification
-      description: 'Category for the finding'
+      description: 'Category for the finding.'
       type: String
     - contextPath: Trustwave.Finding.createdOn
       description: 'Time when the finding was created.'
@@ -467,7 +467,7 @@ script:
       description: 'List of event ID associated with the finding.'
       type: String
     - contextPath: Trustwave.Finding.id
-      description: 'The finding ID'
+      description: 'The finding ID.'
       type: String
     - contextPath: Trustwave.Finding.parentId
       description: 'The ID of the parent of the finding.'
@@ -479,7 +479,7 @@ script:
       description: 'The severity of the finding.'
       type: Number
     - contextPath: Trustwave.Finding.source
-      description: 'Source for finding'
+      description: 'Source for finding.'
       type: String
     - contextPath: Trustwave.Finding.status.description
       description: 'Current status of the Finding.'
@@ -488,7 +488,7 @@ script:
       description: 'The name of the finding.'
       type: String
     - contextPath: Trustwave.Finding.type
-      description: 'The type of finding (e.g. THREAT, VULNERABILITY)'
+      description: 'The type of finding (e.g. THREAT, VULNERABILITY).'
       type: String
     - contextPath: Trustwave.Finding.updatedOn
       description: 'Time when the finding was last updated.'
@@ -496,10 +496,10 @@ script:
   - arguments:
     - default: true
       defaultValue:
-      description: Asset ID
+      description: Asset ID.
       name: id
       required: true
-    description: Get an Asset
+    description: Get an Asset.
     name: trustwave-get-asset
     outputs:
     - contextPath: Trustwave.Asset.cidr
@@ -527,19 +527,19 @@ script:
       description: 'Gateway address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.hostnames
-      description: 'List of hostname for the asset network interface'
+      description: 'List of hostname for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.ip
-      description: 'IP address for the asset network interface'
+      description: 'IP address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.macAddress
-      description: 'MAC address for the asset network interface'
+      description: 'MAC address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.macVendor
-      description: 'Vendor associated with the MAC address for the asset network interface'
+      description: 'Vendor associated with the MAC address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.subnet
-      description: 'Network subnet the asset network interface'
+      description: 'Network subnet the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.os
       description: 'Asset operating system.'
@@ -551,7 +551,7 @@ script:
       description: 'Service protocol.'
       type: String
     - contextPath: Trustwave.Asset.services.port
-      description: 'Service port'
+      description: 'Service port.'
       type: Number
     - contextPath: Trustwave.Asset.services.transportProtocol
       description: 'Service transport.'
@@ -571,45 +571,45 @@ script:
   - arguments:
     - default: true
       defaultValue:
-      description: Asset ID
+      description: Asset ID.
       name: id
     - defaultValue: 100
-      description: Maximum number of Assets to return
+      description: Maximum number of Assets to return.
       name: limit
     - defaultValue:
-      description: Name of the Asset
+      description: Name of the Asset.
       name: name
     - defaultValue:
-      description: OS for the Asset
+      description: OS for the Asset.
       isArray: true
       name: os
     - defaultValue:
-      description: Asset Tags to search for
+      description: Asset Tags to search for.
       isArray: true
       name: tags
     - defaultValue:
-      description: port
+      description: port.
       isArray: true
       name: port
     - defaultValue:
-      description: Application Protocol
+      description: Application Protocol.
       isArray: true
       name: app_protocol
     - defaultValue:
-      description: Transport Protocol
+      description: Transport Protocol.
       isArray: true
       name: transport
     - defaultValue:
-      description: Asset Type
+      description: Asset Type.
       isArray: true
       name: type
     - defaultValue:
-      description: created_since
+      description: created_since.
       name: created_since
     - defaultValue:
       description: Updated since.
       name: updated_since
-    description: Search for Assets
+    description: Search for Assets.
     name: trustwave-search-assets
     outputs:
     - contextPath: Trustwave.Asset.cidr
@@ -637,19 +637,19 @@ script:
       description: 'Gateway address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.hostnames
-      description: 'List of hostname for the asset network interface'
+      description: 'List of hostname for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.ip
-      description: 'IP address for the asset network interface'
+      description: 'IP address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.macAddress
-      description: 'MAC address for the asset network interface'
+      description: 'MAC address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.macVendor
-      description: 'Vendor associated with the MAC address for the asset network interface'
+      description: 'Vendor associated with the MAC address for the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.networkInterfaces.subnet
-      description: 'Network subnet the asset network interface'
+      description: 'Network subnet the asset network interface.'
       type: String
     - contextPath: Trustwave.Asset.os
       description: 'Asset operating system.'
@@ -666,7 +666,7 @@ script:
     - contextPath: Trustwave.Asset.uri
       description: 'URI of the asset.'
       type: String
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   isfetch: true
   script: ''
   subtype: python3
diff --git a/Packs/TrustwaveFusion/ReleaseNotes/1_0_9.md b/Packs/TrustwaveFusion/ReleaseNotes/1_0_9.md
new file mode 100644
index 0000000000..5023627ccf
--- /dev/null
+++ b/Packs/TrustwaveFusion/ReleaseNotes/1_0_9.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### TrustwaveFusion
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/TrustwaveFusion/pack_metadata.json b/Packs/TrustwaveFusion/pack_metadata.json
index c495bc938f..ad3920d6c8 100644
--- a/Packs/TrustwaveFusion/pack_metadata.json
+++ b/Packs/TrustwaveFusion/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Trustwave Fusion",
     "description": "Trustwave Fusion is Trustwave's cloud-native platform that provides visibility and context in detection and response workflows.",
     "support": "partner",
-    "currentVersion": "1.0.8",
+    "currentVersion": "1.0.9",
     "author": "Trustwave",
     "url": "https://www.trustwave.com/en_us/company/support/",
     "email": "support@trustwave.com",
diff --git a/Packs/illuminate/Integrations/Analyst1/Analyst1.yml b/Packs/illuminate/Integrations/Analyst1/Analyst1.yml
index cb862684b8..9b032f51e1 100644
--- a/Packs/illuminate/Integrations/Analyst1/Analyst1.yml
+++ b/Packs/illuminate/Integrations/Analyst1/Analyst1.yml
@@ -308,7 +308,7 @@ script:
       description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.File.Malwares.Name
-      description: Each matched malware name in Analyst1
+      description: Each matched malware name in Analyst1.
       type: string
     - contextPath: Analyst1.File.Actors.ID
       description: Each matched actor unique identifier in Analyst1.
@@ -340,7 +340,7 @@ script:
       isArray: true
     outputs:
     - contextPath: Analyst1.String.ID
-      description: The unique identifier of the given Indicator in Analyst1
+      description: The unique identifier of the given Indicator in Analyst1.
       type: number
     - contextPath: Analyst1.String.EvidenceCount
       description: The number of evidence reports of the given indicator in Analyst1.
@@ -370,7 +370,7 @@ script:
       description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.String.Malwares.Name
-      description: Each matched malware name in Analyst1
+      description: Each matched malware name in Analyst1.
       type: string
     - contextPath: Analyst1.String.Actors.ID
       description: Each matched actor unique identifier in Analyst1.
@@ -381,7 +381,7 @@ script:
     - contextPath: Analyst1.String.Analyst1Link
       description: The URL of the matched indicator in Analyst1.
       type: string
-    description: Queries the Analyst1 REST API and enriches the given string with Analyst1 indicator data
+    description: Queries the Analyst1 REST API and enriches the given string with Analyst1 indicator data.
   - name: analyst1-enrich-ipv6
     arguments:
     - name: ip
@@ -390,7 +390,7 @@ script:
       isArray: true
     outputs:
     - contextPath: Analyst1.Ipv6.ID
-      description: The unique identifier of the given Indicator in Analyst1
+      description: The unique identifier of the given Indicator in Analyst1.
       type: number
     - contextPath: Analyst1.Ipv6.EvidenceCount
       description: The number of evidence reports of the given indicator in Analyst1.
@@ -420,7 +420,7 @@ script:
       description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.Ipv6.Malwares.Name
-      description: Each matched malware name in Analyst1
+      description: Each matched malware name in Analyst1.
       type: string
     - contextPath: Analyst1.Ipv6.Actors.ID
       description: Each matched actor unique identifier in Analyst1.
@@ -436,11 +436,11 @@ script:
     arguments:
     - name: mutex
       required: true
-      description: The mutex to query information for
+      description: The mutex to query information for.
       isArray: true
     outputs:
     - contextPath: Analyst1.Mutex.ID
-      description: The unique identifier of the given Indicator in Analyst1
+      description: The unique identifier of the given Indicator in Analyst1.
       type: number
     - contextPath: Analyst1.Mutex.EvidenceCount
       description: The number of evidence reports of the given indicator in Analyst1.
@@ -470,7 +470,7 @@ script:
       description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.Mutex.Malwares.Name
-      description: Each matched malware name in Analyst1
+      description: Each matched malware name in Analyst1.
       type: string
     - contextPath: Analyst1.Mutex.Actors.ID
       description: Each matched actor unique identifier in Analyst1.
@@ -490,7 +490,7 @@ script:
       isArray: true
     outputs:
     - contextPath: Analyst1.Httprequest.ID
-      description: The unique identifier of the given Indicator in Analyst1
+      description: The unique identifier of the given Indicator in Analyst1.
       type: number
     - contextPath: Analyst1.Httprequest.EvidenceCount
       description: The number of evidence reports of the given indicator in Analyst1.
@@ -517,7 +517,7 @@ script:
       description: The dates this indicator had reported activity in Analyst1.
       type: date
     - contextPath: Analyst1.Httprequest.Malwares.ID
-      description: Each matched malware unique identifier in Analyst1
+      description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.Httprequest.Malwares.Name
       description: Each matched malware name in Analyst1.
@@ -544,7 +544,7 @@ script:
       description: The URL.
       type: String
     - contextPath: Analyst1.Url.ID
-      description: The unique identifier of the given Indicator in Analyst1
+      description: The unique identifier of the given Indicator in Analyst1.
       type: number
     - contextPath: Analyst1.Url.EvidenceCount
       description: The number of evidence reports of the given indicator in Analyst1.
@@ -571,13 +571,13 @@ script:
       description: The dates this indicator had reported activity in Analyst1.
       type: date
     - contextPath: Analyst1.Url.Malwares.ID
-      description: Each matched malware unique identifier in Analyst1
+      description: Each matched malware unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.Url.Malwares.Name
       description: Each matched malware name in Analyst1.
       type: string
     - contextPath: Analyst1.Url.Actors.ID
-      description: Each matched actor unique identifier in Analyst1
+      description: Each matched actor unique identifier in Analyst1.
       type: number
     - contextPath: Analyst1.Url.Actors.Name
       description: Each matched actor name in Analyst1.
@@ -609,20 +609,20 @@ script:
       defaultValue: "200"
     outputs:
     - contextPath: Analyst1.SensorTaskings
-      description: 'Root JSON for processing all taskings data. '
+      description: 'Root JSON for processing all taskings data. .'
     - contextPath: Analyst1.SensorTaskings.id
       description: Sensor ID for this Taskings response.
     - contextPath: Analyst1.SensorTaskings.version
       description: Current version of the Sensor.
     - contextPath: Analyst1.SensorTaskings.Indicators
-      description: Current array of Indicators tasked
+      description: Current array of Indicators tasked.
     - contextPath: Analyst1.SensorTaskings.Rules
-      description: Current array of Signatures tasked
+      description: Current array of Signatures tasked.
     description: 'Queries the Analyst1 REST API for the current sensor taskings given a valid Sensor ID. This can be used to start subscription to an Sensor ID. The result gives the version (which can later be used to invoke ''diff'') and all current taskings. Note: This operation may trigger XSOAR to "oversize" the task built on this automation. If so, you may need to turn off quiet mode explicitly. The analyst1-get-sensor-config can alternatively be used to get a simple text file of current indicators or signatures.'
   - name: analyst1-get-sensors
     arguments:
     - name: page
-      description: page of Sensors to iterate
+      description: page of Sensors to iterate.
       defaultValue: "1"
       type: unknown
     - name: pageSize
@@ -642,7 +642,7 @@ script:
     - contextPath: Analyst1.BatchResults.matchedValue
       description: The matched terms from Indicators, Assets, Ignore List, or System CIDR entries.
     - contextPath: Analyst1.BatchResults
-      description: Full Batch Check JSON
+      description: Full Batch Check JSON.
     description: Queries the Analyst1 REST API for indicator enrichment data based on a CSV input of multiple indicator values.
   - name: analyst1-get-sensor-config
     arguments:
@@ -651,27 +651,27 @@ script:
       description: Sensor ID number for this Analyst1 instance.
     outputs:
     - contextPath: Analyst1.SensorTaskings.ConfigFile.config_text
-      description: full text of the current configuration file for the Sensor
+      description: full text of the current configuration file for the Sensor.
     - contextPath: Analyst1.SensorTaskings.ConfigFile.warRoomEntry.FileID
       description: FileID from invoking fileResult() in the Common Server Functions. An alternative to the returned config_text in case file processing is preferred.
     - contextPath: Analyst1.SensorTaskings.ConfigFile.warRoomEntry.File
-      description: 'File Name as saved on the War Room file with fileResult() '
+      description: 'File Name as saved on the War Room file with fileResult() .'
     description: Queries the Analyst1 REST API for the current sensor config given a valid Sensor ID. This config file is meant to be directly provided to a device (IDS, IPS, Firewall, SNORT...) for configuration replacements.
   - name: analyst1-get-sensor-diff
     arguments:
     - name: sensor_id
       required: true
-      description: ID# of the Sensor record in Analyst1
+      description: ID# of the Sensor record in Analyst1.
     - name: version
       required: true
-      description: Non zero version of the known Sensor
+      description: Non zero version of the known Sensor.
     - name: timeout
       default: true
       description: Overrides the XSOAR default of 10s for timeout. Default Analsyt1 app is 200s for this command. Caller may further override as required.
       defaultValue: "200"
     outputs:
     - contextPath: Analyst1.SensorTaskings.ID
-      description: Sensor ID
+      description: Sensor ID.
     - contextPath: Analyst1.SensorTaskings.latestVersion
       description: Current version of the Sensor. Meant to be saved and used on subsequent invocations to 'diff' to only get the latest changes.
     - contextPath: Analyst1.SensorTaskings.version
@@ -689,7 +689,7 @@ script:
     arguments:
     - name: indicator_id
       required: true
-      description: Internal Analyst1 Indicator ID
+      description: Internal Analyst1 Indicator ID.
     outputs:
     - contextPath: Analyst1.Indicator
       description: Full Analyst1 native JSON for the Indicator. Will include all attributes, associated sources, enrichment results, and all settings as seen in the Analyst1 UI.
@@ -702,7 +702,7 @@ script:
       description: Array of text, each being an Indicator or other observable value to search. Either valeus_array or values must be provided.
     outputs:
     - contextPath: Analyst1
-      description: Full Batch Check JSON
+      description: Full Batch Check JSON.
     - contextPath: Analyst1.ID
       description: Matched ID values. May not all be Indicators. Could reflect Indicator, Asset, Ignore List, or System records.
     - contextPath: Analyst1.matchedValue
@@ -716,7 +716,7 @@ script:
     - name: fileContent
       description: Content of the Evidence to create within Analyst1. Should be used when content is TXT or JSON. Use fileEntryId for attachments in XSOAR context. One of fileConent or fileEntryId must be included.
     - name: tlp
-      description: 'Traffic Light Protocol (TLP) value for the Evidence. If the Evidence is TLP marked that will override this input as the a1bot finds the TLP markings. '
+      description: 'Traffic Light Protocol (TLP) value for the Evidence. If the Evidence is TLP marked that will override this input as the a1bot finds the TLP markings. .'
       defaultValue: GREEN
     - name: fileClassification
       default: true
@@ -737,16 +737,16 @@ script:
     arguments:
     - name: uuid
       required: true
-      description: Identifier from an Evidence Submission to track status
+      description: Identifier from an Evidence Submission to track status.
     outputs:
     - contextPath: Analyst1.EvidenceStatus.id
       description: Evidence ID created by the submission. If 'blank' and message is 'blank', indicates the upload is still procesing.
     - contextPath: Analyst1.EvidenceStatus.message
-      description: 'If populated, will communicate errors which occurred with the status check or the upload processing. '
+      description: 'If populated, will communicate errors which occurred with the status check or the upload processing. .'
     - contextPath: Analyst1.EvidenceStatus.processingComplete
       description: True or false to indicate if processing of the Evidence upload is done. Determined by evaluating the id or message are present and populated. If an id is returned but blank, this is false, indicating the upload is still in progress.
     description: Check on the status of the analyst1-evidence-submit action by using its output UUID.
-  dockerimage: demisto/python3:3.10.12.68714
+  dockerimage: demisto/python3:3.10.13.72123
   subtype: python3
   runonce: false
 fromversion: 5.0.0
diff --git a/Packs/illuminate/ReleaseNotes/1_1_3.md b/Packs/illuminate/ReleaseNotes/1_1_3.md
new file mode 100644
index 0000000000..94166a5dd2
--- /dev/null
+++ b/Packs/illuminate/ReleaseNotes/1_1_3.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Analyst1
+- Updated the Docker image to: *demisto/python3:3.10.13.72123*.
diff --git a/Packs/illuminate/pack_metadata.json b/Packs/illuminate/pack_metadata.json
index 111386135c..a64e4b8619 100644
--- a/Packs/illuminate/pack_metadata.json
+++ b/Packs/illuminate/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Analyst1",
     "description": "This integration utilizes Analyst1's system to support multiple operations to assist the cyber analyst. These include intelligence collection from any source, deployment of configured indicator or signature sets for improved boundary/host defense, and enriching XSOAR indicators with data provided by the Analyst1 REST API, such as actor and malware information, activity and reported dates, evidence and hit counts, and more. For assistance with this app and any use cases please contact support@analyst1.com.",
     "support": "partner",
-    "currentVersion": "1.1.2",
+    "currentVersion": "1.1.3",
     "author": "Analyst1",
     "url": "",
     "email": "support@analyst1.com",
-- 
2.41.0


From 528c9542dbbb5129c217105753e197bba5d8ebf0 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:38:56 +0300
Subject: [PATCH 14/26] Update Docker Image To demisto/octoxlabs  (#29545)

* Updated Metadata Of Pack OctoxLabs

* Added release notes to pack OctoxLabs

* Packs/OctoxLabs/Integrations/OctoxLabs/OctoxLabs.yml Docker image update

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../Integrations/OctoxLabs/OctoxLabs.yml      | 168 +++++++++---------
 Packs/OctoxLabs/ReleaseNotes/1_1_11.md        |   3 +
 Packs/OctoxLabs/pack_metadata.json            |   2 +-
 3 files changed, 88 insertions(+), 85 deletions(-)
 create mode 100644 Packs/OctoxLabs/ReleaseNotes/1_1_11.md

diff --git a/Packs/OctoxLabs/Integrations/OctoxLabs/OctoxLabs.yml b/Packs/OctoxLabs/Integrations/OctoxLabs/OctoxLabs.yml
index e597c20f33..3a91084b13 100644
--- a/Packs/OctoxLabs/Integrations/OctoxLabs/OctoxLabs.yml
+++ b/Packs/OctoxLabs/Integrations/OctoxLabs/OctoxLabs.yml
@@ -15,161 +15,161 @@ configuration:
   required: true
   hiddenusername: true
   type: 9
-description: 'Octox Labs Cyber Security Asset Management platform'
+description: 'Octox Labs Cyber Security Asset Management platform.'
 display: 'OctoxLabs'
 name: OctoxLabs
 script:
   commands:
   - name: octoxlabs-get-adapters
-    description: 'Fetch octoxlabs all adapters'
+    description: 'Fetch octoxlabs all adapters.'
     outputs:
     - contextPath: OctoxLabs.Adapters.count
-      description: 'Adapters count'
+      description: 'Adapters count.'
       type: Number
     - contextPath: OctoxLabs.Adapters.results.id
-      description: 'Adapter id'
+      description: 'Adapter id.'
       type: Number
     - contextPath: OctoxLabs.Adapters.results.name
-      description: 'Adapter name'
+      description: 'Adapter name.'
       type: String
     - contextPath: OctoxLabs.Adapters.results.slug
-      description: 'Adapter slug'
+      description: 'Adapter slug.'
       type: String
     - contextPath: OctoxLabs.Adapters.results.description
-      description: 'Adapter description'
+      description: 'Adapter description.'
       type: String
     - contextPath: OctoxLabs.Adapters.results.groups
-      description: 'List<string> Adapter groups'
+      description: 'List<string> Adapter groups.'
       type: Unknown
     - contextPath: OctoxLabs.Adapters.results.beta
-      description: 'Adapter is beta?'
+      description: 'Adapter is beta?.'
       type: Boolean
     - contextPath: OctoxLabs.Adapters.results.status
-      description: 'Adapter status'
+      description: 'Adapter status.'
       type: Number
     - contextPath: OctoxLabs.Adapters.results.hr_status
-      description: 'Adapter human readable status'
+      description: 'Adapter human readable status.'
       type: String
   - name: octoxlabs-get-connections
-    description: 'Fetch octoxlabs connections'
+    description: 'Fetch octoxlabs connections.'
     arguments:
     - default: true
-      description: 'Page number'
+      description: 'Page number.'
       name: page
     outputs:
     - contextPath: OctoxLabs.Connections.count
-      description: 'Connections count'
+      description: 'Connections count.'
       type: Number
     - contextPath: OctoxLabs.Connections.results.id
-      description: 'Connection id'
+      description: 'Connection id.'
       type: Number
     - contextPath: OctoxLabs.Connections.results.adapter_id
-      description: 'Connection adapter id'
+      description: 'Connection adapter id.'
       type: Number
     - contextPath: OctoxLabs.Connections.results.adapter_name
-      description: 'Connection adapter name'
+      description: 'Connection adapter name.'
       type: String
     - contextPath: OctoxLabs.Connections.results.name
-      description: 'Connection name'
+      description: 'Connection name.'
       type: String
     - contextPath: OctoxLabs.Connections.results.status
-      description: 'Connection status'
+      description: 'Connection status.'
       type: Boolean
     - contextPath: OctoxLabs.Connections.results.description
-      description: 'Connection description'
+      description: 'Connection description.'
       type: String
     - contextPath: OctoxLabs.Connections.results.enabled
-      description: 'Connection is enabled?'
+      description: 'Connection is enabled?.'
       type: Boolean
   - name: octoxlabs-get-discoveries
-    description: 'Fetch octoxlabs discoveries'
+    description: 'Fetch octoxlabs discoveries.'
     arguments:
     - default: true
-      description: 'Page number'
+      description: 'Page number.'
       name: page
     outputs:
     - contextPath: OctoxLabs.Discoveries.count
-      description: 'Total discovery count'
+      description: 'Total discovery count.'
       type: Number
     - contextPath: OctoxLabs.Discoveries.results.id
-      description: 'Discovery id'
+      description: 'Discovery id.'
       type: Number
     - contextPath: OctoxLabs.Discoveries.results.start_time
-      description: 'Discovery start time'
+      description: 'Discovery start time.'
       type: String
     - contextPath: OctoxLabs.Discoveries.results.end_time
-      description: 'Discovery end time'
+      description: 'Discovery end time.'
       type: String
     - contextPath: OctoxLabs.Discoveries.results.status
-      description: 'Discovery status'
+      description: 'Discovery status.'
       type: Number
     - contextPath: OctoxLabs.Discoveries.results.hr_status
-      description: 'Discovery human readable status'
+      description: 'Discovery human readable status.'
       type: String
     - contextPath: OctoxLabs.Discoveries.results.progress
-      description: 'Discovery progress'
+      description: 'Discovery progress.'
       type: Number
   - name: octoxlabs-get-last-discovery
-    description: 'Get last success discovery'
+    description: 'Get last success discovery.'
     outputs:
     - contextPath: OctoxLabs.Discovery.id
-      description: 'Last discovery id'
+      description: 'Last discovery id.'
       type: Number
     - contextPath: OctoxLabs.Discovery.start_time
-      description: 'Last discovery start time'
+      description: 'Last discovery start time.'
       type: String
     - contextPath: OctoxLabs.Discovery.end_time
-      description: 'Last discovery end time'
+      description: 'Last discovery end time.'
       type: String
     - contextPath: OctoxLabs.Discovery.status
-      description: 'Last discovery status'
+      description: 'Last discovery status.'
       type: Number
     - contextPath: OctoxLabs.Discovery.hr_status
-      description: 'Last discovery human readable status'
+      description: 'Last discovery human readable status.'
       type: String
     - contextPath: OctoxLabs.Discovery.progress
-      description: 'Last discovery progress'
+      description: 'Last discovery progress.'
       type: Number
   - name: octoxlabs-search-devices
-    description: 'Search in your devices'
+    description: 'Search in your devices.'
     arguments:
     - default:
-      description: 'Query'
+      description: 'Query.'
       name: query
     - default:
-      description: 'Fields'
+      description: 'Fields.'
       isArray: true
       name: fields
     - default:
-      description: 'Page'
+      description: 'Page.'
       name: page
     - default:
-      description: 'Size'
+      description: 'Size.'
       name: size
     - default:
-      description: 'Specific Discovery Id'
+      description: 'Specific Discovery Id.'
       name: discovery_id
     outputs:
     - contextPath: OctoxLabs.Devices.count
-      description: 'Total devices count'
+      description: 'Total devices count.'
       type: Number
     - contextPath: OctoxLabs.Devices.results
-      description: 'List<Dict> Device information'
+      description: 'List<Dict> Device information.'
       type: Unknown
   - name: octoxlabs-get-device
-    description: 'Fetch your device'
+    description: 'Fetch your device.'
     arguments:
     - required: true
       name: hostname
-      description: 'Your device hostname'
+      description: 'Your device hostname.'
     - name: discovery_id
-      description: 'Your device at specific discovery'
+      description: 'Your device at specific discovery.'
     outputs:
     - contextPath: OctoxLabs.Device
-      description: '<Dict> Octoxlabs Device'
+      description: '<Dict> Octoxlabs Device.'
       type: Unknown
   - name: octoxlabs-get-queries
-    description: 'Fetch your queries'
+    description: 'Fetch your queries.'
     arguments:
     - default:
       name: page
@@ -182,117 +182,117 @@ script:
       description: 'Query list size.'
     outputs:
     - contextPath: OctoxLabs.Queries.count
-      description: 'Queries count'
+      description: 'Queries count.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.id
-      description: 'Query id'
+      description: 'Query id.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.name
-      description: 'Query name'
+      description: 'Query name.'
       type: String
     - contextPath: OctoxLabs.Queries.results.text
-      description: 'Query text'
+      description: 'Query text.'
       type: String
     - contextPath: OctoxLabs.Queries.results.tags
-      description: 'List<str> Query tags'
+      description: 'List<str> Query tags.'
       type: Unknown
     - contextPath: OctoxLabs.Queries.results.count
-      description: 'Query device count'
+      description: 'Query device count.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.is_public
-      description: 'Query is public?'
+      description: 'Query is public?.'
       type: Boolean
     - contextPath: OctoxLabs.Queries.results.created_at
-      description: 'Query created at'
+      description: 'Query created at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.updated_at
-      description: 'Query updated at'
+      description: 'Query updated at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.username
-      description: 'Query creator'
+      description: 'Query creator.'
       type: String
     - contextPath: OctoxLabs.Queries.results.is_temporary
-      description: "Query is temporary"
+      description: "Query is temporary."
       type: Boolean
   - name: octoxlabs-get-query-by-id
-    description: 'Fetch your queries by id'
+    description: 'Fetch your queries by id.'
     arguments:
     - required: true
       name: query_id
       description: 'Query id.'
     outputs:
     - contextPath: OctoxLabs.Queries.results.id
-      description: 'Query id'
+      description: 'Query id.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.name
-      description: 'Query name'
+      description: 'Query name.'
       type: String
     - contextPath: OctoxLabs.Queries.results.text
-      description: 'Query text'
+      description: 'Query text.'
       type: String
     - contextPath: OctoxLabs.Queries.results.tags
-      description: 'List<str> Query tags'
+      description: 'List<str> Query tags.'
       type: Unknown
     - contextPath: OctoxLabs.Queries.results.count
-      description: 'Query device count'
+      description: 'Query device count.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.is_public
-      description: 'Query is public?'
+      description: 'Query is public?.'
       type: Boolean
     - contextPath: OctoxLabs.Queries.results.created_at
-      description: 'Query created at'
+      description: 'Query created at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.updated_at
-      description: 'Query updated at'
+      description: 'Query updated at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.username
-      description: 'Query creator'
+      description: 'Query creator.'
       type: String
     - contextPath: OctoxLabs.Queries.results.is_temporary
-      description: "Query is temporary"
+      description: "Query is temporary."
       type: Boolean
   - name: octoxlabs-get-query-by-name
-    description: 'Fetch your queries by id'
+    description: 'Fetch your queries by id.'
     arguments:
     - required: true
       name: query_name
       description: 'Query name.'
     outputs:
     - contextPath: OctoxLabs.Queries.results.id
-      description: 'Query id'
+      description: 'Query id.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.name
-      description: 'Query name'
+      description: 'Query name.'
       type: String
     - contextPath: OctoxLabs.Queries.results.text
-      description: 'Query text'
+      description: 'Query text.'
       type: String
     - contextPath: OctoxLabs.Queries.results.tags
-      description: 'List<str> Query tags'
+      description: 'List<str> Query tags.'
       type: Unknown
     - contextPath: OctoxLabs.Queries.results.count
-      description: 'Query device count'
+      description: 'Query device count.'
       type: Number
     - contextPath: OctoxLabs.Queries.results.is_public
-      description: 'Query is public?'
+      description: 'Query is public?.'
       type: Boolean
     - contextPath: OctoxLabs.Queries.results.created_at
-      description: 'Query created at'
+      description: 'Query created at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.updated_at
-      description: 'Query updated at'
+      description: 'Query updated at.'
       type: String
     - contextPath: OctoxLabs.Queries.results.username
-      description: 'Query creator'
+      description: 'Query creator.'
       type: String
     - contextPath: OctoxLabs.Queries.results.is_temporary
-      description: "Query is temporary"
+      description: "Query is temporary."
       type: Boolean
   runonce: false
   script: '-'
   type: python
   subtype: python3
-  dockerimage: demisto/octoxlabs:1.0.0.68958
+  dockerimage: demisto/octoxlabs:1.0.0.72288
 fromversion: 6.0.0
 tests:
 - No tests (auto formatted)
diff --git a/Packs/OctoxLabs/ReleaseNotes/1_1_11.md b/Packs/OctoxLabs/ReleaseNotes/1_1_11.md
new file mode 100644
index 0000000000..248c398a51
--- /dev/null
+++ b/Packs/OctoxLabs/ReleaseNotes/1_1_11.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### OctoxLabs
+- Updated the Docker image to: *demisto/octoxlabs:1.0.0.72288*.
diff --git a/Packs/OctoxLabs/pack_metadata.json b/Packs/OctoxLabs/pack_metadata.json
index e326e1dfba..80f725b408 100644
--- a/Packs/OctoxLabs/pack_metadata.json
+++ b/Packs/OctoxLabs/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "OctoxLabs",
     "description": "Octox Labs Cyber Security Asset Management platform",
     "support": "partner",
-    "currentVersion": "1.1.10",
+    "currentVersion": "1.1.11",
     "author": "OctoxLabs",
     "url": "https://octoxlabs.com",
     "email": "info@octoxlabs.com",
-- 
2.41.0


From 5fb58ede07c5dbb239df11c8155fb5d93d744eaa Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:39:15 +0300
Subject: [PATCH 15/26] Update Docker Image To demisto/bottle  (#29536)

* Updated Metadata Of Pack WebFileRepository

* Added release notes to pack WebFileRepository

* Packs/WebFileRepository/Integrations/WebFileRepository/WebFileRepository.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../WebFileRepository/WebFileRepository.yml   | 66 +++++++++----------
 .../WebFileRepository/ReleaseNotes/1_0_16.md  |  3 +
 Packs/WebFileRepository/pack_metadata.json    |  2 +-
 3 files changed, 37 insertions(+), 34 deletions(-)
 create mode 100644 Packs/WebFileRepository/ReleaseNotes/1_0_16.md

diff --git a/Packs/WebFileRepository/Integrations/WebFileRepository/WebFileRepository.yml b/Packs/WebFileRepository/Integrations/WebFileRepository/WebFileRepository.yml
index 53972ae138..5abbe36bcb 100644
--- a/Packs/WebFileRepository/Integrations/WebFileRepository/WebFileRepository.yml
+++ b/Packs/WebFileRepository/Integrations/WebFileRepository/WebFileRepository.yml
@@ -84,42 +84,42 @@ name: Web File Repository
 script:
   commands:
   - arguments: []
-    description: Get the service status
+    description: Get the service status.
     name: wfr-status
     outputs:
     - contextPath: WebFileRepository.Status.StorageUsage
-      description: The current storage usage in bytes
+      description: The current storage usage in bytes.
       type: number
     - contextPath: WebFileRepository.Status.SandboxUsage
-      description: The current sandbox usage in bytes
+      description: The current sandbox usage in bytes.
       type: number
     - contextPath: WebFileRepository.Status.StorageProtection
-      description: The storage protection mode
+      description: The storage protection mode.
       type: string
     - contextPath: WebFileRepository.Status.IntercommunicationIP
-      description: The IP address of the service to which the internal client connects
+      description: The IP address of the service to which the internal client connects.
       type: string
     - contextPath: WebFileRepository.Status.IntercommunicationPort
-      description: The port number of the service to which the internal client connects
+      description: The port number of the service to which the internal client connects.
       type: number
     - contextPath: WebFileRepository.Status.ExternaIP
-      description: The external IP address of the service
+      description: The external IP address of the service.
     - contextPath: WebFileRepository.Status.ExternalPort
-      description: The external port number of the service
+      description: The external port number of the service.
     - contextPath: WebFileRepository.Status.ServerIP
-      description: The IP address of the service
+      description: The IP address of the service.
       type: string
     - contextPath: WebFileRepository.Status.ServerPort
-      description: The port number of the service
+      description: The port number of the service.
       type: number
   - arguments: []
-    description: Remove all the files from the repository
+    description: Remove all the files from the repository.
     name: wfr-cleanup
   - arguments:
-    - description: The entry ID of the file
+    - description: The entry ID of the file.
       name: entry_id
       required: true
-    - description: The name of the file
+    - description: The name of the file.
       name: file_name
     - auto: PREDEFINED
       defaultValue: "false"
@@ -129,12 +129,12 @@ script:
       - "true"
       - "false"
     - defaultValue: /
-      description: The directory path where to upload
+      description: The directory path where to upload.
       name: upload_directory
-    description: Upload files to the repository
+    description: Upload files to the repository.
     name: wfr-upload-file
   - arguments:
-    - description: The entry ID list of files
+    - description: The entry ID list of files.
       isArray: true
       name: entry_ids
       required: true
@@ -146,13 +146,13 @@ script:
       - "true"
       - "false"
     - defaultValue: /
-      description: The directory path where to upload
+      description: The directory path where to upload.
       name: upload_directory
-    description: Upload files to the repository
+    description: Upload files to the repository.
     name: wfr-upload-files
   - arguments:
     - defaultValue: /
-      description: The directory path where to list files
+      description: The directory path where to list files.
       name: directory
     - auto: PREDEFINED
       defaultValue: "false"
@@ -161,45 +161,45 @@ script:
       predefined:
       - "true"
       - "false"
-    description: List files in the repository
+    description: List files in the repository.
     name: wfr-list-files
     outputs:
     - contextPath: WebFileRepository.Files.Name
-      description: The file name
+      description: The file name.
       type: string
     - contextPath: WebFileRepository.Files.Path
-      description: The file path
+      description: The file path.
       type: string
     - contextPath: WebFileRepository.Files.Size
-      description: The file size in bytes
+      description: The file size in bytes.
       type: number
     - contextPath: WebFileRepository.Files.LastModified
-      description: The last modified time
+      description: The last modified time.
       type: date
   - arguments:
-    - description: The list of the file paths
+    - description: The list of the file paths.
       isArray: true
       name: paths
       required: true
-    description: Remove files from the repository
+    description: Remove files from the repository.
     name: wfr-remove-files
   - arguments:
-    - description: The file path
+    - description: The file path.
       name: path
       required: true
-    - description: The name to give the file to save
+    - description: The name to give the file to save.
       name: save_as
-    description: Download a file from the repository
+    description: Download a file from the repository.
     name: wfr-download-file
   - arguments:
-    - description: The name to give the archive-file to save
+    - description: The name to give the archive-file to save.
       name: save_as
-    description: Download a file to which all the files are archived
+    description: Download a file to which all the files are archived.
     name: wfr-archive-zip
   - arguments: []
-    description: Reset the repository data
+    description: Reset the repository data.
     name: wfr-reset
-  dockerimage: demisto/bottle:1.0.0.68903
+  dockerimage: demisto/bottle:1.0.0.72212
   longRunning: true
   longRunningPort: true
   resetContext: true
diff --git a/Packs/WebFileRepository/ReleaseNotes/1_0_16.md b/Packs/WebFileRepository/ReleaseNotes/1_0_16.md
new file mode 100644
index 0000000000..bd23e042ec
--- /dev/null
+++ b/Packs/WebFileRepository/ReleaseNotes/1_0_16.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Web File Repository
+- Updated the Docker image to: *demisto/bottle:1.0.0.72212*.
diff --git a/Packs/WebFileRepository/pack_metadata.json b/Packs/WebFileRepository/pack_metadata.json
index 95ba40d86c..dfa627c6c3 100644
--- a/Packs/WebFileRepository/pack_metadata.json
+++ b/Packs/WebFileRepository/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Web File Repository",
     "description": "Simple web server with a file uploading console to store small files.\n",
     "support": "community",
-    "currentVersion": "1.0.15",
+    "currentVersion": "1.0.16",
     "author": "Masahiko Inoue",
     "url": "",
     "email": "",
-- 
2.41.0


From 672bf05520fe2b5a2e8c18856ce814c028ebcba3 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 11:39:26 +0300
Subject: [PATCH 16/26] Update Docker Image To demisto/glpi  (#29542)

* Updated Metadata Of Pack GLPI

* Added release notes to pack GLPI

* Packs/GLPI/Integrations/GLPI/GLPI.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 Packs/GLPI/Integrations/GLPI/GLPI.yml | 330 +++++++++++++-------------
 Packs/GLPI/ReleaseNotes/1_0_16.md     |   3 +
 Packs/GLPI/pack_metadata.json         |   2 +-
 3 files changed, 169 insertions(+), 166 deletions(-)
 create mode 100644 Packs/GLPI/ReleaseNotes/1_0_16.md

diff --git a/Packs/GLPI/Integrations/GLPI/GLPI.yml b/Packs/GLPI/Integrations/GLPI/GLPI.yml
index 0176beb409..0dd7b6ab9d 100644
--- a/Packs/GLPI/Integrations/GLPI/GLPI.yml
+++ b/Packs/GLPI/Integrations/GLPI/GLPI.yml
@@ -4,7 +4,7 @@ commonfields:
 name: GLPI
 display: GLPI
 category: Case Management
-description: GLPI open source ITSM solution
+description: GLPI open source ITSM solution.
 defaultclassifier: GLPI - Classifier
 defaultmapperin: GLPI - Incoming Mapper
 defaultmapperout: GLPI - Outgoing Mapper
@@ -109,116 +109,116 @@ script:
     arguments:
     - name: name
       required: true
-      description: Login
+      description: Login.
     - name: firstname
-      description: Firstname
+      description: Firstname.
     - name: lastname
-      description: Lastname
+      description: Lastname.
     - name: email
-      description: Email address
+      description: Email address.
     - name: password
       required: true
-      description: Password
+      description: Password.
     - name: profile
-      description: Profile name
+      description: Profile name.
     - name: additional_fields
-      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;'
+      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;.'
     outputs:
     - contextPath: GLPI.User.id
-      description: Created user ID
+      description: Created user ID.
     - contextPath: GLPI.User.message
-      description: User creation message
-    description: Create a new GLPI user
+      description: User creation message.
+    description: Create a new GLPI user.
   - name: glpi-delete-user
     arguments:
     - name: name
       required: true
-      description: Username
+      description: Username.
     - name: purge
       default: true
       auto: PREDEFINED
       predefined:
       - 'True'
       - 'False'
-      description: 'Default : False, will use the trash, use True to definitively remove the user from the system'
+      description: 'Default : False, will use the trash, use True to definitively remove the user from the system.'
       defaultValue: 'False'
-    description: Delete GLPI user
+    description: Delete GLPI user.
     outputs: []
   - name: glpi-disable-user
     arguments:
     - name: name
       required: true
-      description: Username
-    description: Disable GLPI user
+      description: Username.
+    description: Disable GLPI user.
     outputs: []
   - name: glpi-enable-user
     arguments:
     - name: name
       required: true
-      description: Username
-    description: Enable GLPI user
+      description: Username.
+    description: Enable GLPI user.
     outputs: []
   - name: get-mapping-fields
     arguments: []
-    description: Return the list of fields for an incident type
+    description: Return the list of fields for an incident type.
     outputs: []
   - name: get-modified-remote-data
     arguments:
     - name: lastUpdate
-      description: lastUpdate parameter
+      description: lastUpdate parameter.
       defaultValue: ''
       predefined:
       - ''
-    description: Mirroring feature, use only for debug
+    description: Mirroring feature, use only for debug.
     outputs: []
   - name: glpi-get-username
     arguments:
     - name: id
       required: true
-      description: User ID
+      description: User ID.
     outputs:
     - contextPath: GLPI.User
-      description: GLPI User details
+      description: GLPI User details.
       type: Unknown
     - contextPath: GLPI.User.id
-      description: User id
+      description: User id.
     - contextPath: GLPI.User.username
-      description: Username
-    description: Get username by user ID
+      description: Username.
+    description: Get username by user ID.
   - name: glpi-get-userid
     arguments:
     - name: name
       required: true
-      description: Username
+      description: Username.
     outputs:
     - contextPath: GLPI.User
-      description: GLPI User details
+      description: GLPI User details.
       type: Unknown
     - contextPath: GLPI.User.id
-      description: User id
+      description: User id.
     - contextPath: GLPI.User.username
-      description: Username
-    description: Get GLPI User ID by Username
+      description: Username.
+    description: Get GLPI User ID by Username.
   - name: glpi-delete-ticket
     arguments:
     - name: ticket_id
       required: true
-      description: Ticket ID
+      description: Ticket ID.
     - name: purge
       default: true
       auto: PREDEFINED
       predefined:
       - 'False'
       - 'True'
-      description: 'Default : False, will use the trash, use True to definitively remove the ticket from the system'
+      description: 'Default : False, will use the trash, use True to definitively remove the ticket from the system.'
       defaultValue: 'False'
-    description: Delete GLPI ticket
+    description: Delete GLPI ticket.
     outputs: []
   - name: glpi-get-ticket
     arguments:
     - name: ticket_id
       required: true
-      description: The Ticket ID
+      description: The Ticket ID.
     - name: get_attachments
       default: true
       auto: PREDEFINED
@@ -229,130 +229,130 @@ script:
       defaultValue: 'False'
     outputs:
     - contextPath: GLPI.Ticket.actiontime
-      description: Ticket action time
+      description: Ticket action time.
       type: Unknown
     - contextPath: GLPI.Ticket.begin_waiting_date
-      description: Ticket begin waiting date
+      description: Ticket begin waiting date.
       type: Unknown
     - contextPath: GLPI.Ticket.close_delay_stat
-      description: Ticket close delay stat
+      description: Ticket close delay stat.
       type: Unknown
     - contextPath: GLPI.Ticket.closedate
-      description: Tocket closed date
+      description: Tocket closed date.
       type: Unknown
     - contextPath: GLPI.Ticket.content
-      description: Ticket content
+      description: Ticket content.
       type: Unknown
     - contextPath: GLPI.Ticket.date
-      description: Ticket date
+      description: Ticket date.
       type: Unknown
     - contextPath: GLPI.Ticket.date_creation
-      description: Ticket date creation
+      description: Ticket date creation.
       type: Unknown
     - contextPath: GLPI.Ticket.date_mod
-      description: Ticket date modification
+      description: Ticket date modification.
       type: Unknown
     - contextPath: GLPI.Ticket.entities_id
-      description: Ticket entities ids
+      description: Ticket entities ids.
       type: Unknown
     - contextPath: GLPI.Ticket.global_validation
-      description: Ticket global validation
+      description: Ticket global validation.
       type: Unknown
     - contextPath: GLPI.Ticket.id
-      description: Ticket ID
+      description: Ticket ID.
       type: Unknown
     - contextPath: GLPI.Ticket.impact
-      description: Ticket Impact
+      description: Ticket Impact.
       type: Unknown
     - contextPath: GLPI.Ticket.internal_time_to_own
-      description: Ticket internal time to own
+      description: Ticket internal time to own.
       type: Unknown
     - contextPath: GLPI.Ticket.internal_time_to_resolve
-      description: Ticket internal time to resolve
+      description: Ticket internal time to resolve.
       type: Unknown
     - contextPath: GLPI.Ticket.is_deleted
-      description: Ticket is_deleted?
+      description: Ticket is_deleted?.
       type: Unknown
     - contextPath: GLPI.Ticket.itilcategories_id
-      description: Ticket ITIL categories id
+      description: Ticket ITIL categories id.
       type: Unknown
     - contextPath: GLPI.Ticket.links
-      description: Ticket links
+      description: Ticket links.
       type: Unknown
     - contextPath: GLPI.Ticket.locations_id
-      description: Tickets locations id
+      description: Tickets locations id.
       type: Unknown
     - contextPath: GLPI.Ticket.name
-      description: Ticket name
+      description: Ticket name.
       type: Unknown
     - contextPath: GLPI.Ticket.ola_ttr_begin_date
-      description: Ticket ola ttr begin date
+      description: Ticket ola ttr begin date.
       type: Unknown
     - contextPath: GLPI.Ticket.ola_waiting_duration
-      description: Ticket ola waiting duration
+      description: Ticket ola waiting duration.
       type: Unknown
     - contextPath: GLPI.Ticket.olalevels_id_ttr
-      description: Ticket ola levels id ttr
+      description: Ticket ola levels id ttr.
       type: Unknown
     - contextPath: GLPI.Ticket.olas_id_tto
-      description: Ticket olas id tto
+      description: Ticket olas id tto.
       type: Unknown
     - contextPath: GLPI.Ticket.olas_id_ttr
-      description: Ticket olas id ttr
+      description: Ticket olas id ttr.
       type: Unknown
     - contextPath: GLPI.Ticket.priority
-      description: Ticket priority
+      description: Ticket priority.
       type: Unknown
     - contextPath: GLPI.Ticket.requesttypes_id
-      description: Ticket request types id
+      description: Ticket request types id.
       type: Unknown
     - contextPath: GLPI.Ticket.sla_waiting_duration
-      description: Ticket sla waiting duration
+      description: Ticket sla waiting duration.
       type: Unknown
     - contextPath: GLPI.Ticket.slalevels_id_ttr
-      description: Ticket slale levels id ttr
+      description: Ticket slale levels id ttr.
       type: Unknown
     - contextPath: GLPI.Ticket.slas_id_tto
-      description: Ticket slas id tto
+      description: Ticket slas id tto.
       type: Unknown
     - contextPath: GLPI.Ticket.slas_id_ttr
-      description: Ticket stats id ttr
+      description: Ticket stats id ttr.
       type: Unknown
     - contextPath: GLPI.Ticket.solve_delay_stat
-      description: Ticket solve delay stat
+      description: Ticket solve delay stat.
       type: Unknown
     - contextPath: GLPI.Ticket.solvedate
-      description: Ticket solve date
+      description: Ticket solve date.
       type: Unknown
     - contextPath: GLPI.Ticket.status
-      description: Ticket status
+      description: Ticket status.
       type: Unknown
     - contextPath: GLPI.Ticket.takeintoaccount_delay_stat
-      description: Ticket take into account delay stat
+      description: Ticket take into account delay stat.
       type: Unknown
     - contextPath: GLPI.Ticket.time_to_own
-      description: Ticket time to own
+      description: Ticket time to own.
       type: Unknown
     - contextPath: GLPI.Ticket.time_to_resolve
-      description: Ticket time to resolve
+      description: Ticket time to resolve.
       type: Unknown
     - contextPath: GLPI.Ticket.type
-      description: Ticket type
+      description: Ticket type.
       type: Unknown
     - contextPath: GLPI.Ticket.urgency
-      description: Ticket urgency
+      description: Ticket urgency.
       type: Unknown
     - contextPath: GLPI.Ticket.users_id_lastupdater
-      description: Ticket users id last updater
+      description: Ticket users id last updater.
       type: Unknown
     - contextPath: GLPI.Ticket.users_id_recipient
-      description: Ticket users id recipient
+      description: Ticket users id recipient.
       type: Unknown
     - contextPath: GLPI.Ticket.validation_percent
-      description: Ticket validation percent
+      description: Ticket validation percent.
       type: Unknown
     - contextPath: GLPI.Ticket.waiting_duration
-      description: Ticket waiting duration
+      description: Ticket waiting duration.
       type: Unknown
     - contextPath: File.Info
       description: Attachment file info.
@@ -377,22 +377,22 @@ script:
     - contextPath: File.MD5
       description: Attachment file MD5 hash.
       type: string
-    description: Get ticket details by ticket ID
+    description: Get ticket details by ticket ID.
   - name: glpi-create-ticket
     arguments:
     - name: name
       required: true
-      description: Ticket name
+      description: Ticket name.
     - name: content
       required: true
-      description: Ticket description
+      description: Ticket description.
     - name: type
       required: true
       auto: PREDEFINED
       predefined:
       - Incident
       - Request
-      description: Ticket type
+      description: Ticket type.
     - name: status
       auto: PREDEFINED
       predefined:
@@ -402,7 +402,7 @@ script:
       - Pending
       - Solved
       - Closed
-      description: Ticket status
+      description: Ticket status.
     - name: urgency
       auto: PREDEFINED
       predefined:
@@ -411,7 +411,7 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket urgency
+      description: Ticket urgency.
     - name: impact
       auto: PREDEFINED
       predefined:
@@ -420,7 +420,7 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket impact
+      description: Ticket impact.
     - name: priority
       auto: PREDEFINED
       predefined:
@@ -430,24 +430,24 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket priority
+      description: Ticket priority.
     - name: entryid
-      description: File EntryID to upload , multiple files supported
+      description: File EntryID to upload , multiple files supported.
       isArray: true
     - name: entities_id
-      description: Ticket entities ID
+      description: Ticket entities ID.
     - name: locations_id
-      description: Ticket locations ID
+      description: Ticket locations ID.
     - name: itilcategories_id
-      description: Ticket ITIL categories ID
+      description: Ticket ITIL categories ID.
     - name: time_to_resolve
-      description: 'Ticket time to resolve, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket time to resolve, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: time_to_own
-      description: 'Ticket time to own, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket time to own, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: internal_time_to_resolve
-      description: 'Ticket internal time to resolve, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket internal time to resolve, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: internal_time_to_own
-      description: 'Ticket internal time to own, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket internal time to own, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: requesttypes_id
       auto: PREDEFINED
       predefined:
@@ -457,124 +457,124 @@ script:
       - Other
       - Phone
       - Written
-      description: Ticket Request source
+      description: Ticket Request source.
     - name: additional_fields
-      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;'
+      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;.'
     outputs:
     - contextPath: GLPI.Ticket.id
-      description: The created ticket ID
+      description: The created ticket ID.
     - contextPath: GLPI.Ticket.message
-      description: Result message from ticket creation
-    description: Create a GLPI ticket
+      description: Result message from ticket creation.
+    description: Create a GLPI ticket.
   - name: glpi-search
     arguments:
     - name: item_type
       required: true
-      description: 'Item type to search (ex : Ticket)'
+      description: 'Item type to search (ex : Ticket).'
     - name: query
       description: The search query, please visit https://github.com/glpi-project/glpi/blob/master/apirest.md#search-items
     - name: forcedisplay
-      description: Coma separated additional fields to display
+      description: Coma separated additional fields to display.
     - name: srange
-      description: 'Search range limit (ex : 0-50)'
+      description: 'Search range limit (ex : 0-50).'
     outputs:
     - contextPath: GLPI.Search
-      description: Search results
+      description: Search results.
     - contextPath: GLPI.Search.item_type
-      description: This varies depending on the input item_type (case sensitive)
-    description: Search GLPI items
+      description: This varies depending on the input item_type (case sensitive).
+    description: Search GLPI items.
   - name: glpi-add-comment
     arguments:
     - name: ticket_id
       required: true
-      description: The ticket ID
+      description: The ticket ID.
     - name: comment
-      description: ticket comment
+      description: ticket comment.
       required: true
       defaultValue: ''
       predefined:
       - ''
     outputs:
     - contextPath: GLPI.Comment.id
-      description: 'Created comment ID '
+      description: 'Created comment ID .'
     - contextPath: GLPI.Comment.message
-      description: GLPI message
-    description: Add comment to ticket ID
+      description: GLPI message.
+    description: Add comment to ticket ID.
   - name: glpi-upload-file
     arguments:
     - name: entryid
-      description: File EntryID
+      description: File EntryID.
       required: true
       defaultValue: ''
       predefined:
       - ''
     - name: filename
-      description: Filename
+      description: Filename.
       defaultValue: ''
       predefined:
       - ''
     - name: doc_name
-      description: Doc name
+      description: Doc name.
       defaultValue: ''
       predefined:
       - ''
     outputs:
     - contextPath: GLPI.Document
-      description: Document
+      description: Document.
       type: Unknown
     - contextPath: GLPI.Document.id
-      description: Created document ID
+      description: Created document ID.
     - contextPath: GLPI.Document.message
-      description: GLPI upload message
+      description: GLPI upload message.
     - contextPath: GLPI.Document.upload_result.filename.size
-      description: Uploaded file size
+      description: Uploaded file size.
     - contextPath: GLPI.Document.upload_result.filename.display
-      description: File display name
+      description: File display name.
     - contextPath: GLPI.Document.upload_result.filename.deleteUrl
-      description: Document deleteURL
+      description: Document deleteURL.
       type: Unknown
     - contextPath: GLPI.Document.upload_result.filename.deleteType
-      description: Document deleteType
+      description: Document deleteType.
       type: Unknown
     - contextPath: GLPI.Document.upload_result.filename.name
-      description: system file name
+      description: system file name.
     - contextPath: GLPI.Document.upload_result.filename.url
-      description: Document URL
+      description: Document URL.
     - contextPath: GLPI.Document.upload_result.filename.id
-      description: Document filename id
+      description: Document filename id.
       type: Unknown
-    description: Upload document
+    description: Upload document.
   - name: glpi-get-item
     arguments:
     - name: item_type
-      description: Item type
+      description: Item type.
       required: true
       defaultValue: ''
       predefined:
       - ''
     - name: item_id
-      description: Item ID
+      description: Item ID.
       required: true
       defaultValue: ''
       predefined:
       - ''
     outputs:
     - contextPath: GLPI.item_type
-      description: This varies depending on the input item_type (case sensitive)
-    description: Get item details by item type and item ID
+      description: This varies depending on the input item_type (case sensitive).
+    description: Get item details by item type and item ID.
   - name: glpi-update-ticket
     arguments:
     - name: id
       required: true
-      description: Ticket id
+      description: Ticket id.
     - name: description
-      description: Ticket description
+      description: Ticket description.
     - name: type
       auto: PREDEFINED
       predefined:
       - Incident
       - Request
-      description: Ticket type
+      description: Ticket type.
     - name: status
       auto: PREDEFINED
       predefined:
@@ -584,7 +584,7 @@ script:
       - Pending
       - Solved
       - Closed
-      description: Ticket status
+      description: Ticket status.
     - name: urgency
       auto: PREDEFINED
       predefined:
@@ -593,7 +593,7 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket urgency
+      description: Ticket urgency.
     - name: impact
       auto: PREDEFINED
       predefined:
@@ -602,7 +602,7 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket impact
+      description: Ticket impact.
     - name: priority
       auto: PREDEFINED
       predefined:
@@ -612,49 +612,49 @@ script:
       - Medium
       - Low
       - Verylow
-      description: Ticket priority
+      description: Ticket priority.
     - name: entryid
-      description: File EntryID to upload , multiple files supported
+      description: File EntryID to upload , multiple files supported.
       isArray: true
     - name: entities_id
-      description: Ticket entities ID
+      description: Ticket entities ID.
     - name: locations_id
-      description: Ticket locations ID
+      description: Ticket locations ID.
     - name: itilcategories_id
-      description: Ticket ITIL categories ID
+      description: Ticket ITIL categories ID.
     - name: name
-      description: Ticket title
+      description: Ticket title.
     - name: global_validation
-      description: Global validation
+      description: Global validation.
       defaultValue: ''
       predefined:
       - ''
     - name: time_to_resolve
-      description: 'Ticket time to resolve, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket time to resolve, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: time_to_own
-      description: 'Ticket time to own, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket time to own, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: internal_time_to_resolve
-      description: 'Ticket internal time to resolve, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket internal time to resolve, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: internal_time_to_own
-      description: 'Ticket internal time to own, in the format: YYYY-MM-DD HH:MM:SS'
+      description: 'Ticket internal time to own, in the format: YYYY-MM-DD HH:MM:SS.'
     - name: additional_fields
-      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;'
+      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;.'
     outputs:
     - contextPath: GLPI.Ticket.id
-      description: The updated ticket ID
+      description: The updated ticket ID.
     - contextPath: GLPI.Ticket.message
-      description: Result message from ticket update
-    description: Update a GLPI ticket
+      description: Result message from ticket update.
+    description: Update a GLPI ticket.
   - name: get-remote-data
-    description: get remote data command
+    description: get remote data command.
     arguments:
     - name: id
-      description: ticket id
+      description: ticket id.
       defaultValue: ''
       predefined:
       - ''
     - name: lastUpdate
-      description: last update parameter
+      description: last update parameter.
       defaultValue: ''
       predefined:
       - ''
@@ -663,10 +663,10 @@ script:
     arguments:
     - name: ticket_ID_1
       required: true
-      description: First ticket ID
+      description: First ticket ID.
     - name: ticket_ID_2
       required: true
-      description: Second ticket ID
+      description: Second ticket ID.
     - name: link
       required: true
       auto: PREDEFINED
@@ -675,31 +675,31 @@ script:
       - Duplicate
       - Child
       - Parent
-      description: Relation between tickets
-    description: Link tickets
+      description: Relation between tickets.
+    description: Link tickets.
     outputs: []
   - name: glpi-update-user
-    description: Update a user
+    description: Update a user.
     arguments:
     - name: id
       required: true
-      description: User ID
+      description: User ID.
     - name: name
-      description: Login
+      description: Login.
     - name: firstname
-      description: Firstname
+      description: Firstname.
     - name: lastname
-      description: Lastname
+      description: Lastname.
     - name: email
-      description: Email address
+      description: Email address.
     - name: password
-      description: Password
+      description: Password.
     - name: profile
-      description: Profile name
+      description: Profile name.
     - name: update_fields
-      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;'
+      description: 'Additional fields in the format: fieldname1=value;fieldname2=value;.'
     outputs: []
-  dockerimage: demisto/glpi:1.0.0.69459
+  dockerimage: demisto/glpi:1.0.0.72249
   isfetch: true
   longRunning: true
   subtype: python3
diff --git a/Packs/GLPI/ReleaseNotes/1_0_16.md b/Packs/GLPI/ReleaseNotes/1_0_16.md
new file mode 100644
index 0000000000..27d0877433
--- /dev/null
+++ b/Packs/GLPI/ReleaseNotes/1_0_16.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### GLPI
+- Updated the Docker image to: *demisto/glpi:1.0.0.72249*.
diff --git a/Packs/GLPI/pack_metadata.json b/Packs/GLPI/pack_metadata.json
index 348e4c5ffd..13d974c76f 100644
--- a/Packs/GLPI/pack_metadata.json
+++ b/Packs/GLPI/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "GLPI",
     "description": "GLPI open source ITSM solution",
     "support": "partner",
-    "currentVersion": "1.0.15",
+    "currentVersion": "1.0.16",
     "author": "SecInfra",
     "url": "http://secinfra.fr",
     "email": "support@secinfra.fr",
-- 
2.41.0


From bfebeaa1ca237b8c117da27c761eca0516cf6004 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 12:28:45 +0300
Subject: [PATCH 17/26] Update Docker Image To demisto/rubrik-polaris-sdk-py3 
 (#29541)

* Updated Metadata Of Pack RubrikPolaris

* Added release notes to pack RubrikPolaris

* Packs/RubrikPolaris/Integrations/RubrikPolaris/RubrikPolaris.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../RubrikPolaris/RubrikPolaris.yml           | 29 ++++++++++---------
 Packs/RubrikPolaris/ReleaseNotes/1_2_9.md     |  3 ++
 Packs/RubrikPolaris/pack_metadata.json        |  2 +-
 3 files changed, 20 insertions(+), 14 deletions(-)
 create mode 100644 Packs/RubrikPolaris/ReleaseNotes/1_2_9.md

diff --git a/Packs/RubrikPolaris/Integrations/RubrikPolaris/RubrikPolaris.yml b/Packs/RubrikPolaris/Integrations/RubrikPolaris/RubrikPolaris.yml
index ee987946f6..d263143518 100644
--- a/Packs/RubrikPolaris/Integrations/RubrikPolaris/RubrikPolaris.yml
+++ b/Packs/RubrikPolaris/Integrations/RubrikPolaris/RubrikPolaris.yml
@@ -97,14 +97,16 @@ script:
       description: The ID of the cluster.
       type: String
   - arguments:
-    - description: |
+    - description: |-
         The name of the Rubrik object to check for sensitive hits.  When used in combination with "Rubrik Radar Anomaly" incidents, this value will automatically be looked up using the incident context. Otherwise it is a required value.
 
         Note: Users can get the list of the object names by executing the "rubrik-polaris-object-list" or "rubrik-polaris-object-search" command.
+        .
       name: objectName
     - defaultValue: 7
-      description: |
+      description: |-
         The number of days in the past to look for sensitive hits. If no value is provided, then today's data will be returned and, if there is no data for today then the argument will default to 7 days.
+        .
       name: searchTimePeriod
     description: Find data classification hits on an object.
     name: rubrik-sonar-sensitive-hits
@@ -703,10 +705,11 @@ script:
       description: Whether the result has the next page or not.
       type: Boolean
   - arguments:
-    - description: |
+    - description: |-
         Name of the scan. If not provided, it defaults to "<today's date> Classification".
+        .
       name: scan_name
-    - description: "List of sonar policies to scan.\n\nNote: Users can get the list of analyzer groups by executing the \"rubrik-sonar-policy-analyzer-groups-list\" command. \n\nFormat Accepted: \n[\n        {\n            \"id\": \"543dd5e0-c72c-50e2-a3d9-1688343f472c\",\n            \"name\": \"HIPAA\",\n            \"groupType\": \"HIPAA\",\n            \"analyzers\": [\n                {\n                    \"id\": \"9da675b3-944b-5da3-a2da-ed149d300075\",\n                    \"name\": \"US/UK Passport\",\n                    \"analyzerType\": \"PASSPORT\"\n                },\n                {\n                    \"id\": \"18665533-c28c-5a40-b747-4b6508fecdfa\",\n                    \"name\": \"US NPI\",\n                    \"analyzerType\": \"US_HEALTHCARE_NPI\"\n                }\n            ]\n      }\n]"
+    - description: "List of sonar policies to scan.\n\nNote: Users can get the list of analyzer groups by executing the \"rubrik-sonar-policy-analyzer-groups-list\" command. \n\nFormat Accepted: \n[\n        {\n            \"id\": \"543dd5e0-c72c-50e2-a3d9-1688343f472c\",\n            \"name\": \"HIPAA\",\n            \"groupType\": \"HIPAA\",\n            \"analyzers\": [\n                {\n                    \"id\": \"9da675b3-944b-5da3-a2da-ed149d300075\",\n                    \"name\": \"US/UK Passport\",\n                    \"analyzerType\": \"PASSPORT\"\n                },\n                {\n                    \"id\": \"18665533-c28c-5a40-b747-4b6508fecdfa\",\n                    \"name\": \"US NPI\",\n                    \"analyzerType\": \"US_HEALTHCARE_NPI\"\n                }\n            ]\n      }\n]."
       name: sonar_policy_analyzer_groups
       required: true
     - description: "List of VM object IDs to scan.\n\nNote: Users can get the list of VM object IDs by executing the \"rubrik-polaris-vm-objects-list\" command."
@@ -957,9 +960,9 @@ script:
     - description: "The Snapshot ID of the file that needs to be downloaded.\n\nNote: Users can retrieve the list of the snapshot IDs by executing the \"rubrik-polaris-vm-object-snapshot-list\" command."
       name: snapshot_id
       required: true
-    - description: "The path of the folder to list the sub-files. If not provided the root directory files will be returned.\n\nFormat accepted : \"/<directory name>/<sub directory name or file name>\"\n\nExample: \"/C:\", \"/C:/Users\""
+    - description: "The path of the folder to list the sub-files. If not provided the root directory files will be returned.\n\nFormat accepted : \"/<directory name>/<sub directory name or file name>\"\n\nExample: \"/C:\", \"/C:/Users\"."
       name: path
-    - description: "Provide a keyword to search in the file names.\n\nExample: \"admin\""
+    - description: "Provide a keyword to search in the file names.\n\nExample: \"admin\"."
       name: search_prefix
     - defaultValue: 50
       description: Number of results to retrieve in the response. Maximum size allowed is 1000.
@@ -1448,10 +1451,10 @@ script:
                   "name": <string>
                 }
               }
-            ]
+            ].
       name: vnic_bindings
     - description: |-
-        Point in time to recover to, e.g.: "2023-03-04T05:06:07.890"
+        Point in time to recover to, e.g.: "2023-03-04T05:06:07.890".
       name: recovery_point
     description: "Performs a live mount of a virtual machine snapshot.\n\nNote: To know about the live mount status, use the \"rubrik-gps-async-result\" command."
     name: rubrik-gps-vm-livemount
@@ -1890,7 +1893,7 @@ script:
 
         Note: To provide multiple IOCs use the argument "advance_ioc".
       name: ioc_value
-    - description: "Json encoded Indicators Of Compromise to scan. Json keys signify the type of IOC and the corresponding list of values are the values of the IOC's. If provided, will ignore the ioc_type and ioc_value arguments.\n\nPossible keys to indicate type of indicator: \nINDICATOR_OF_COMPROMISE_TYPE_PATH_OR_FILENAME, INDICATOR_OF_COMPROMISE_TYPE_HASH, INDICATOR_OF_COMPROMISE_TYPE_YARA_RULE\n\nFormat Accepted:\n{\n\"<ioc_type1>\": [\"<ioc_value1>\", \"<ioc_value2>\"],\n\"<ioc_type2>\": \"<ioc_value2>\"\n}\n\nExample:\n{\n\"INDICATOR_OF_COMPROMISE_TYPE_PATH_OR_FILENAME\": [\"C:\\Users\\Malware_Executible.ps1\", \"\\bin\\Malware_Executible\"],\n\"INDICATOR_OF_COMPROMISE_TYPE_HASH\": [\"e5c1b9c44be582f895eaea3d3738c5b4\", \"f541b9844be897f895eaea3d3738cfb2\"],\n\"INDICATOR_OF_COMPROMISE_TYPE_YARA_RULE\": \"rule match_everything {condition:true}\"\n}"
+    - description: "Json encoded Indicators Of Compromise to scan. Json keys signify the type of IOC and the corresponding list of values are the values of the IOC's. If provided, will ignore the ioc_type and ioc_value arguments.\n\nPossible keys to indicate type of indicator: \nINDICATOR_OF_COMPROMISE_TYPE_PATH_OR_FILENAME, INDICATOR_OF_COMPROMISE_TYPE_HASH, INDICATOR_OF_COMPROMISE_TYPE_YARA_RULE\n\nFormat Accepted:\n{\n\"<ioc_type1>\": [\"<ioc_value1>\", \"<ioc_value2>\"],\n\"<ioc_type2>\": \"<ioc_value2>\"\n}\n\nExample:\n{\n\"INDICATOR_OF_COMPROMISE_TYPE_PATH_OR_FILENAME\": [\"C:\\Users\\Malware_Executible.ps1\", \"\\bin\\Malware_Executible\"],\n\"INDICATOR_OF_COMPROMISE_TYPE_HASH\": [\"e5c1b9c44be582f895eaea3d3738c5b4\", \"f541b9844be897f895eaea3d3738cfb2\"],\n\"INDICATOR_OF_COMPROMISE_TYPE_YARA_RULE\": \"rule match_everything {condition:true}\"\n}."
       name: advance_ioc
     - description: |-
         Filter the snapshots from the provided date. Any snapshots taken before the provided date-time will be excluded.
@@ -1929,21 +1932,21 @@ script:
         Paths to include in the scan. Supports comma separated values.
 
         Format accepted:
-        path_to_include_1, path_to_include_2
+        path_to_include_1, path_to_include_2.
       isArray: true
       name: paths_to_include
     - description: |-
         Paths to exclude from the scan. Supports comma separated values.
 
         Format accepted:
-        path_to_exclude_1, path_to_exclude_2
+        path_to_exclude_1, path_to_exclude_2.
       isArray: true
       name: paths_to_exclude
     - description: |-
         Paths to exempt from exclusion. Supports comma separated values.
 
         Format accepted:
-        path_to_exempt_1, path_to_exempt_2
+        path_to_exempt_1, path_to_exempt_2.
       isArray: true
       name: paths_to_exempt
     - description: |-
@@ -2252,7 +2255,7 @@ script:
     - contextPath: RubrikPolaris.GPSVMRecoverFiles.id
       description: Recover files request ID.
       type: String
-  dockerimage: demisto/rubrik-polaris-sdk-py3:1.0.0.69220
+  dockerimage: demisto/rubrik-polaris-sdk-py3:1.0.0.72322
   isfetch: true
   runonce: false
   script: '-'
diff --git a/Packs/RubrikPolaris/ReleaseNotes/1_2_9.md b/Packs/RubrikPolaris/ReleaseNotes/1_2_9.md
new file mode 100644
index 0000000000..8184da99ae
--- /dev/null
+++ b/Packs/RubrikPolaris/ReleaseNotes/1_2_9.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Rubrik Radar
+- Updated the Docker image to: *demisto/rubrik-polaris-sdk-py3:1.0.0.72322*.
diff --git a/Packs/RubrikPolaris/pack_metadata.json b/Packs/RubrikPolaris/pack_metadata.json
index 99798b957c..f1b6f24105 100644
--- a/Packs/RubrikPolaris/pack_metadata.json
+++ b/Packs/RubrikPolaris/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Rubrik Polaris",
     "description": "Rubrik Polaris revolutionizes the data management market, specifically backup/recovery, archival, and DR, by providing a global policy framework, workflow orchestration, and deep data intelligence as cloud-delivered applications. The content pack fetches Rubrik Radar Anomaly Event and provides playbooks to analyze, discover and recover -- to mention a few -- organizational data. The content pack is rich with commands to perform on-demand scans, backups, recoveries and many more features exposed by the Polaris API.",
     "support": "partner",
-    "currentVersion": "1.2.8",
+    "currentVersion": "1.2.9",
     "author": "Rubrik",
     "url": "https://www.rubrik.com/support/",
     "email": "support@rubrik.com",
-- 
2.41.0


From eff856fbe9a147e8e00d5acedbe0e2a07682c805 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 12:30:38 +0300
Subject: [PATCH 18/26] Update Docker Image To demisto/cymruwhois  (#29540)

* Updated Metadata Of Pack TeamCymru

* Added release notes to pack TeamCymru

* Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml | 4 ++--
 Packs/TeamCymru/ReleaseNotes/1_0_15.md               | 3 +++
 Packs/TeamCymru/pack_metadata.json                   | 2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)
 create mode 100644 Packs/TeamCymru/ReleaseNotes/1_0_15.md

diff --git a/Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml b/Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml
index 695a38c850..bf8aa5ae4f 100644
--- a/Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml
+++ b/Packs/TeamCymru/Integrations/TeamCymru/TeamCymru.yml
@@ -101,7 +101,7 @@ script:
     - defaultValue: ','
       description: |-
         Delimiter by which the content of the file is separated.
-        Eg:  " , " , " : ", " ; "
+        Eg:  " , " , " : ", " ; ".
       name: delimiter
     description: |-
       Checks the reputation of a CSV list of IPv4 addresses within a file. 
@@ -157,7 +157,7 @@ script:
   script: '-'
   type: python
   subtype: python3
-  dockerimage: demisto/cymruwhois:1.0.0.68916
+  dockerimage: demisto/cymruwhois:1.0.0.72236
 fromversion: 6.5.0
 tests:
 - TeamCymruTest
diff --git a/Packs/TeamCymru/ReleaseNotes/1_0_15.md b/Packs/TeamCymru/ReleaseNotes/1_0_15.md
new file mode 100644
index 0000000000..04b814fdf9
--- /dev/null
+++ b/Packs/TeamCymru/ReleaseNotes/1_0_15.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### Team Cymru
+- Updated the Docker image to: *demisto/cymruwhois:1.0.0.72236*.
diff --git a/Packs/TeamCymru/pack_metadata.json b/Packs/TeamCymru/pack_metadata.json
index fe7c0e3904..045a4c2569 100644
--- a/Packs/TeamCymru/pack_metadata.json
+++ b/Packs/TeamCymru/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Team Cymru",
     "description": "Team Cymru is an internet security firm that offers research services making the internet a more secure place.",
     "support": "xsoar",
-    "currentVersion": "1.0.14",
+    "currentVersion": "1.0.15",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 0d678f347389a3e7712e30d4f9879b9742b1de48 Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 12:38:39 +0300
Subject: [PATCH 19/26] Update Docker Image To demisto/pycountry  (#29539)

* Updated Metadata Of Pack FeedCyCognito

* Added release notes to pack FeedCyCognito

* Packs/FeedCyCognito/Integrations/FeedCyCognito/FeedCyCognito.yml Docker image update

* Fixed DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
---
 .../FeedCyCognito/FeedCyCognito.yml            | 18 +++++++++---------
 Packs/FeedCyCognito/ReleaseNotes/1_0_15.md     |  3 +++
 Packs/FeedCyCognito/pack_metadata.json         |  2 +-
 3 files changed, 13 insertions(+), 10 deletions(-)
 create mode 100644 Packs/FeedCyCognito/ReleaseNotes/1_0_15.md

diff --git a/Packs/FeedCyCognito/Integrations/FeedCyCognito/FeedCyCognito.yml b/Packs/FeedCyCognito/Integrations/FeedCyCognito/FeedCyCognito.yml
index b169f284ca..10e8e50747 100644
--- a/Packs/FeedCyCognito/Integrations/FeedCyCognito/FeedCyCognito.yml
+++ b/Packs/FeedCyCognito/Integrations/FeedCyCognito/FeedCyCognito.yml
@@ -186,7 +186,7 @@ script:
       description: |-
         The type of asset to be retrieved.
 
-        Supported values: 'ip', 'domain', 'cert', 'webapp', 'iprange'
+        Supported values: 'ip', 'domain', 'cert', 'webapp', 'iprange'.
       name: asset_type
       predefined:
       - ip
@@ -199,7 +199,7 @@ script:
       description: |-
         The number of results to retrieve.
 
-        Maximum value is '1000'
+        Maximum value is '1000'.
       name: count
     - defaultValue: '0'
       description: Sets the starting index for the returned results. By specifying offset, you retrieve a subset of records starting with the offset value.
@@ -216,7 +216,7 @@ script:
       description: |-
         Specifies whether to sort the results in either ascending or descending order.
 
-        Supported values: 'asc', 'desc'
+        Supported values: 'asc', 'desc'.
       name: sort_order
       predefined:
       - asc
@@ -226,21 +226,21 @@ script:
 
         Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ
 
-        For example: 01 Mar 2021, 01 Feb 2021 04:45:33, 2022-04-17T14:05:44Z
+        For example: 01 Mar 2021, 01 Feb 2021 04:45:33, 2022-04-17T14:05:44Z.
       name: first_seen
     - description: |-
         The date and time at which CyCognito most recently attributed the asset to the organization.
 
         Supported formats: 2 minutes, 2 hours, 2 days, 2 weeks, 2 months, 2 years, yyyy-mm-dd, yyyy-mm-ddTHH:MM:SSZ
 
-        For example: 01 Mar 2021, 01 Feb 2021 04:45:33, 2022-04-17T14:05:44Z
+        For example: 01 Mar 2021, 01 Feb 2021 04:45:33, 2022-04-17T14:05:44Z.
       name: last_seen
     - description: Retrieves the assets attributed to a specific organization, subsidiary, or assignee. Supports comma-separated values.
       name: organizations
     - description: |-
         Filters the assets according to their hosting type. Supports comma-separated values.
 
-        Supported values: 'owned', 'cloud', 'undetermined'
+        Supported values: 'owned', 'cloud', 'undetermined'.
       name: hosting_type
     - description: |-
         Filters the assets according to security rating. Supports comma-separated values.
@@ -252,12 +252,12 @@ script:
         B = Strong
         C = Less vulnerable
         D = Vulnerable
-        F = Highly vulnerable
+        F = Highly vulnerable.
       name: security_grade
     - description: |-
         Filters the assets according to their status. Supports comma-separated values.
 
-        Supported values: 'changed', 'new', 'normal'
+        Supported values: 'changed', 'new', 'normal'.
       name: status
     - description: |-
         The geographical locations in which the asset is found. Supported values contain the three-letter ISO country code for the respective countries--e.g., IND, USA.
@@ -268,7 +268,7 @@ script:
       name: tags
     description: Fetches a given limit of indicators from the CyCognito platform and displays them in human-readable format in the war room.
     name: cycognito-get-indicators
-  dockerimage: demisto/pycountry:1.0.0.68979
+  dockerimage: demisto/pycountry:1.0.0.72312
   feed: true
   runonce: false
   script: '-'
diff --git a/Packs/FeedCyCognito/ReleaseNotes/1_0_15.md b/Packs/FeedCyCognito/ReleaseNotes/1_0_15.md
new file mode 100644
index 0000000000..4f7fda3ae0
--- /dev/null
+++ b/Packs/FeedCyCognito/ReleaseNotes/1_0_15.md
@@ -0,0 +1,3 @@
+#### Integrations
+##### CyCognito Feed
+- Updated the Docker image to: *demisto/pycountry:1.0.0.72312*.
diff --git a/Packs/FeedCyCognito/pack_metadata.json b/Packs/FeedCyCognito/pack_metadata.json
index 4e4c714480..0d47df69a4 100644
--- a/Packs/FeedCyCognito/pack_metadata.json
+++ b/Packs/FeedCyCognito/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "CyCognito Feed",
     "description": "Provides a feed integration to retrieve the discovered assets.",
     "support": "partner",
-    "currentVersion": "1.0.14",
+    "currentVersion": "1.0.15",
     "author": "CyCognito",
     "url": "",
     "email": "support@cycognito.com",
-- 
2.41.0


From 9dfe7b80c631c5ca288ca0cb3dd8ed82eea05377 Mon Sep 17 00:00:00 2001
From: Menachem Weinfeld <90556466+mmhw@users.noreply.github.com>
Date: Thu, 7 Sep 2023 13:09:38 +0300
Subject: [PATCH 20/26] [pre-commit check-json] Align the entire repo with
 check-json (#29403)

* Align the entire repo with check-json

* Add RN

* Recovery of the secrets_white_list.json file

* Apply suggestions from code review

Co-authored-by: Binat Ziser <89336697+bziser@users.noreply.github.com>

* Bump pack from version PrismaSaasSecurity to 2.0.26.

* Bump pack from version PrismaSaasSecurity to 2.0.27.

* Bump pack from version epo to 2.0.26.

* Bump pack from version CortexXDR to 5.1.4.

---------

Co-authored-by: Binat Ziser <89336697+bziser@users.noreply.github.com>
Co-authored-by: Content Bot <bot@demisto.com>
---
 .../test_data/test_threats.json                  |  3 +--
 ...ssifier-PaloAltoNetworks_CortexXDR_5_9_9.json |  1 -
 Packs/CortexXDR/ReleaseNotes/5_1_4.md            |  6 ++++++
 Packs/CortexXDR/pack_metadata.json               |  2 +-
 .../DuoModelingRule/DuoModelingRule_schema.json  |  8 --------
 Packs/DuoAdminApi/ReleaseNotes/4_0_9.md          |  6 ++++++
 Packs/DuoAdminApi/pack_metadata.json             |  2 +-
 ...identtype-MicrosoftATASuspiciousActivity.json |  1 -
 .../ReleaseNotes/1_0_15.md                       |  4 ++++
 .../pack_metadata.json                           |  2 +-
 .../tests_data/report_url_response_success.json  |  5 +++--
 .../get_cases/begin_date_filter/output_1.json    |  1 -
 .../SaasSecurityEventCollector_1_3_schema.json   |  4 ----
 Packs/PrismaSaasSecurity/ReleaseNotes/2_0_27.md  |  6 ++++++
 Packs/PrismaSaasSecurity/pack_metadata.json      |  2 +-
 .../test_data/get_asset_ip_address_resp.json     |  1 -
 .../test_data/get_asset_page_resp.json           |  2 --
 .../SecurityScorecard/test_data/data.json        | 15 ---------------
 .../McafeeEpoModelingRules_schema.json           | 16 ----------------
 Packs/epo/ReleaseNotes/2_0_26.md                 |  6 ++++++
 Packs/epo/pack_metadata.json                     |  2 +-
 21 files changed, 37 insertions(+), 58 deletions(-)
 create mode 100644 Packs/CortexXDR/ReleaseNotes/5_1_4.md
 create mode 100644 Packs/DuoAdminApi/ReleaseNotes/4_0_9.md
 create mode 100644 Packs/MicrosoftAdvancedThreatAnalytics/ReleaseNotes/1_0_15.md
 create mode 100644 Packs/PrismaSaasSecurity/ReleaseNotes/2_0_27.md
 create mode 100644 Packs/epo/ReleaseNotes/2_0_26.md

diff --git a/Packs/CofenseIntelligenceV2/Integrations/CofenseIntelligenceV2/test_data/test_threats.json b/Packs/CofenseIntelligenceV2/Integrations/CofenseIntelligenceV2/test_data/test_threats.json
index 48f4ae5b6c..84c1647f27 100644
--- a/Packs/CofenseIntelligenceV2/Integrations/CofenseIntelligenceV2/test_data/test_threats.json
+++ b/Packs/CofenseIntelligenceV2/Integrations/CofenseIntelligenceV2/test_data/test_threats.json
@@ -50,8 +50,7 @@
       ],
       "senderEmailSet": [
         {
-          "1": 1,
-          "1": "1"
+          "1": 1
         }
       ],
       "executableSet": [
diff --git a/Packs/CortexXDR/Classifiers/classifier-PaloAltoNetworks_CortexXDR_5_9_9.json b/Packs/CortexXDR/Classifiers/classifier-PaloAltoNetworks_CortexXDR_5_9_9.json
index f60bdb2a72..fbe7b9dcc5 100644
--- a/Packs/CortexXDR/Classifiers/classifier-PaloAltoNetworks_CortexXDR_5_9_9.json
+++ b/Packs/CortexXDR/Classifiers/classifier-PaloAltoNetworks_CortexXDR_5_9_9.json
@@ -1,6 +1,5 @@
 {
 	"brandName": "Cortex XDR - IR",
-	"custom": true,
 	"defaultIncidentType": "",
 	"fromVersion": "5.0.0",
 	"toVersion": "5.9.9",
diff --git a/Packs/CortexXDR/ReleaseNotes/5_1_4.md b/Packs/CortexXDR/ReleaseNotes/5_1_4.md
new file mode 100644
index 0000000000..282f9967ae
--- /dev/null
+++ b/Packs/CortexXDR/ReleaseNotes/5_1_4.md
@@ -0,0 +1,6 @@
+
+#### Classifiers
+
+##### Cortex XDR - IR
+
+Removed duplicate key from the classifier.
diff --git a/Packs/CortexXDR/pack_metadata.json b/Packs/CortexXDR/pack_metadata.json
index 451998ecdf..48d7226dae 100644
--- a/Packs/CortexXDR/pack_metadata.json
+++ b/Packs/CortexXDR/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Cortex XDR by Palo Alto Networks",
     "description": "Automates Cortex XDR incident response, and includes custom Cortex XDR incident views and layouts to aid analyst investigations.",
     "support": "xsoar",
-    "currentVersion": "5.1.3",
+    "currentVersion": "5.1.4",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/DuoAdminApi/ModelingRules/DuoModelingRule/DuoModelingRule_schema.json b/Packs/DuoAdminApi/ModelingRules/DuoModelingRule/DuoModelingRule_schema.json
index fe31f8dc6b..027b5b8998 100644
--- a/Packs/DuoAdminApi/ModelingRules/DuoModelingRule/DuoModelingRule_schema.json
+++ b/Packs/DuoAdminApi/ModelingRules/DuoModelingRule/DuoModelingRule_schema.json
@@ -51,14 +51,6 @@
     "type": {
       "type": "string",
       "is_array": false
-    },
-    "phone": {
-      "type": "string",
-      "is_array": false
-    },
-    "description": {
-      "type": "string",
-      "is_array": false
     }
   }
 }
\ No newline at end of file
diff --git a/Packs/DuoAdminApi/ReleaseNotes/4_0_9.md b/Packs/DuoAdminApi/ReleaseNotes/4_0_9.md
new file mode 100644
index 0000000000..56cd18edc3
--- /dev/null
+++ b/Packs/DuoAdminApi/ReleaseNotes/4_0_9.md
@@ -0,0 +1,6 @@
+
+#### Modeling Rules
+
+##### Duo Modeling Rule
+
+Removed duplicate keys from the schema.
diff --git a/Packs/DuoAdminApi/pack_metadata.json b/Packs/DuoAdminApi/pack_metadata.json
index c7d6afbe00..ec573358a1 100644
--- a/Packs/DuoAdminApi/pack_metadata.json
+++ b/Packs/DuoAdminApi/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "DUO Admin",
     "description": "DUO for admins.\nMust have access to the admin api in order to use this",
     "support": "xsoar",
-    "currentVersion": "4.0.8",
+    "currentVersion": "4.0.9",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/MicrosoftAdvancedThreatAnalytics/IncidentTypes/incidenttype-MicrosoftATASuspiciousActivity.json b/Packs/MicrosoftAdvancedThreatAnalytics/IncidentTypes/incidenttype-MicrosoftATASuspiciousActivity.json
index 02dec9e351..91f487e804 100644
--- a/Packs/MicrosoftAdvancedThreatAnalytics/IncidentTypes/incidenttype-MicrosoftATASuspiciousActivity.json
+++ b/Packs/MicrosoftAdvancedThreatAnalytics/IncidentTypes/incidenttype-MicrosoftATASuspiciousActivity.json
@@ -21,7 +21,6 @@
     "closureScript": "",
     "disabled": false,
     "reputationCalc": 0,
-    "layout": "",
     "fromVersion": "5.0.0",
     "layout": "Microsoft ATA Suspicious Activity"
 }
\ No newline at end of file
diff --git a/Packs/MicrosoftAdvancedThreatAnalytics/ReleaseNotes/1_0_15.md b/Packs/MicrosoftAdvancedThreatAnalytics/ReleaseNotes/1_0_15.md
new file mode 100644
index 0000000000..00c831d5d9
--- /dev/null
+++ b/Packs/MicrosoftAdvancedThreatAnalytics/ReleaseNotes/1_0_15.md
@@ -0,0 +1,4 @@
+
+#### Incident Types
+
+- **Microsoft ATA Suspicious Activity**
diff --git a/Packs/MicrosoftAdvancedThreatAnalytics/pack_metadata.json b/Packs/MicrosoftAdvancedThreatAnalytics/pack_metadata.json
index 8980d41c32..1be222b5c9 100644
--- a/Packs/MicrosoftAdvancedThreatAnalytics/pack_metadata.json
+++ b/Packs/MicrosoftAdvancedThreatAnalytics/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Microsoft Advanced Threat Analytics",
     "description": "Manage suspicious activities, monitoring alerts and entities on Microsoft ATA.",
     "support": "xsoar",
-    "currentVersion": "1.0.14",
+    "currentVersion": "1.0.15",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/Palo_Alto_Networks_WildFire/Integrations/Palo_Alto_Networks_WildFire_v2/tests_data/report_url_response_success.json b/Packs/Palo_Alto_Networks_WildFire/Integrations/Palo_Alto_Networks_WildFire_v2/tests_data/report_url_response_success.json
index a20b2de14d..b6737b1d91 100644
--- a/Packs/Palo_Alto_Networks_WildFire/Integrations/Palo_Alto_Networks_WildFire_v2/tests_data/report_url_response_success.json
+++ b/Packs/Palo_Alto_Networks_WildFire/Integrations/Palo_Alto_Networks_WildFire_v2/tests_data/report_url_response_success.json
@@ -123,5 +123,6 @@
       "sha256": "191347bfe55d0ca9a574db77bc8648275ce258461450e793528e0cc6d2dcf8f5",
       "type": "wf-report",
       "verdict": "benign"
-  },
-  "url_type": "original"}}
\ No newline at end of file
+    }
+  }
+}
\ No newline at end of file
diff --git a/Packs/PhishLabs/Integrations/PhishLabsIOC_DRP/test_data/client_methods/get_cases/begin_date_filter/output_1.json b/Packs/PhishLabs/Integrations/PhishLabsIOC_DRP/test_data/client_methods/get_cases/begin_date_filter/output_1.json
index 61fba7ea6b..c6774ecf25 100644
--- a/Packs/PhishLabs/Integrations/PhishLabsIOC_DRP/test_data/client_methods/get_cases/begin_date_filter/output_1.json
+++ b/Packs/PhishLabs/Integrations/PhishLabsIOC_DRP/test_data/client_methods/get_cases/begin_date_filter/output_1.json
@@ -41,7 +41,6 @@
             ],
             "formReceiver": false,
             "brandAbuseFlag": false,
-            "brandAbuseFlag": false,
             "appDate": "0001-01-01T00:00:00Z",
             "primaryMarketplace": false
         }
diff --git a/Packs/PrismaSaasSecurity/ModelingRules/SaasSecurityEventCollector_1_3/SaasSecurityEventCollector_1_3_schema.json b/Packs/PrismaSaasSecurity/ModelingRules/SaasSecurityEventCollector_1_3/SaasSecurityEventCollector_1_3_schema.json
index ebc895c73e..1abc1d5e7f 100644
--- a/Packs/PrismaSaasSecurity/ModelingRules/SaasSecurityEventCollector_1_3/SaasSecurityEventCollector_1_3_schema.json
+++ b/Packs/PrismaSaasSecurity/ModelingRules/SaasSecurityEventCollector_1_3/SaasSecurityEventCollector_1_3_schema.json
@@ -64,10 +64,6 @@
         "type": "string",
         "is_array": false
       },
-      "log_type": {
-        "type": "string",
-        "is_array": false
-      },
       "cloud_app_instance": {
         "type": "string",
         "is_array": false
diff --git a/Packs/PrismaSaasSecurity/ReleaseNotes/2_0_27.md b/Packs/PrismaSaasSecurity/ReleaseNotes/2_0_27.md
new file mode 100644
index 0000000000..cac14522a8
--- /dev/null
+++ b/Packs/PrismaSaasSecurity/ReleaseNotes/2_0_27.md
@@ -0,0 +1,6 @@
+
+#### Modeling Rules
+
+##### SaasSecurityModelingRules
+
+Removed duplicate keys from the schema.
diff --git a/Packs/PrismaSaasSecurity/pack_metadata.json b/Packs/PrismaSaasSecurity/pack_metadata.json
index b59781fcf2..0d95703d1d 100644
--- a/Packs/PrismaSaasSecurity/pack_metadata.json
+++ b/Packs/PrismaSaasSecurity/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "SaaS Security by Palo Alto Networks",
     "description": "SaaS Security connects directly to your sanctioned SaaS applications to provide data classification, sharing and permission visibility, and threat detection.",
     "support": "xsoar",
-    "currentVersion": "2.0.26",
+    "currentVersion": "2.0.27",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
diff --git a/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_ip_address_resp.json b/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_ip_address_resp.json
index 9fab8bc770..cc1d08dd20 100644
--- a/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_ip_address_resp.json
+++ b/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_ip_address_resp.json
@@ -1766,7 +1766,6 @@
         "current": true
       }
     ],
-    "attributes": [],
     "cookies": [],
     "sslCerts": [
       {
diff --git a/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_page_resp.json b/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_page_resp.json
index c61827ff1e..5d40e9bff2 100644
--- a/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_page_resp.json
+++ b/Packs/RiskIQDigitalFootprint/Integrations/RiskIQDigitalFootprint/test_data/get_asset_page_resp.json
@@ -470,7 +470,6 @@
         "current": true
       }
     ],
-    "attributes": [],
     "assetSecurityPolicies": [
       {
         "policyName": "content-security-policy-high",
@@ -1053,7 +1052,6 @@
         "lastSeen": 1543521869887
       }
     ],
-    "sslCerts": [],
     "firstSeen": 1539018024251,
     "lastSeen": 1591595881794,
     "count": 860,
diff --git a/Packs/SecurityScorecard/Integrations/SecurityScorecard/test_data/data.json b/Packs/SecurityScorecard/Integrations/SecurityScorecard/test_data/data.json
index dd4f5fb12c..cc714f1196 100644
--- a/Packs/SecurityScorecard/Integrations/SecurityScorecard/test_data/data.json
+++ b/Packs/SecurityScorecard/Integrations/SecurityScorecard/test_data/data.json
@@ -16,22 +16,12 @@
 				"factor": "network_security",
 				"direction": "drops",
 				"grade_letter": "C",
-				"score_impact": -3,
-				"direction": "drops",
-				"score": 77,
-				"grade_letter": "C",
-				"factor": "network_security",
 				"score_impact": -3
 			}, {
 				"score": 69,
 				"factor": "ip_reputation",
 				"direction": "drops",
 				"grade_letter": "D",
-				"score_impact": -3,
-				"direction": "drops",
-				"score": 69,
-				"grade_letter": "D",
-				"factor": "ip_reputation",
 				"score_impact": -3
 			}]
 		}, {
@@ -51,11 +41,6 @@
 				"factor": "network_security",
 				"direction": "drops",
 				"grade_letter": "C",
-				"score_impact": -2,
-				"direction": "drops",
-				"score": 78,
-				"grade_letter": "C",
-				"factor": "network_security",
 				"score_impact": -2
 			}]
 		}],
diff --git a/Packs/epo/ModelingRules/McafeeEpoModelingRules/McafeeEpoModelingRules_schema.json b/Packs/epo/ModelingRules/McafeeEpoModelingRules/McafeeEpoModelingRules_schema.json
index 4216885e1a..a2aa797cef 100644
--- a/Packs/epo/ModelingRules/McafeeEpoModelingRules/McafeeEpoModelingRules_schema.json
+++ b/Packs/epo/ModelingRules/McafeeEpoModelingRules/McafeeEpoModelingRules_schema.json
@@ -32,22 +32,6 @@
       "type": "string",
       "is_array": false
     },
-    "ThreatName": {
-      "type": "string",
-      "is_array": false
-    },
-    "NodeName": {
-      "type": "string",
-      "is_array": false
-    },
-    "ServerID": {
-      "type": "string",
-      "is_array": false
-    },
-    "AnalyzerVersion": {
-      "type": "string",
-      "is_array": false
-    },
     "AnalyzerName": {
       "type": "string",
       "is_array": false
diff --git a/Packs/epo/ReleaseNotes/2_0_26.md b/Packs/epo/ReleaseNotes/2_0_26.md
new file mode 100644
index 0000000000..774ea2343e
--- /dev/null
+++ b/Packs/epo/ReleaseNotes/2_0_26.md
@@ -0,0 +1,6 @@
+
+#### Modeling Rules
+
+##### Mcafee Epo Modeling Rule
+
+Removed duplicate keys from the schema.
diff --git a/Packs/epo/pack_metadata.json b/Packs/epo/pack_metadata.json
index ece976df73..9ac7e08ed1 100644
--- a/Packs/epo/pack_metadata.json
+++ b/Packs/epo/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "McAfee ePO",
     "description": "McAfee ePolicy Orchestrator",
     "support": "xsoar",
-    "currentVersion": "2.0.25",
+    "currentVersion": "2.0.26",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 88aba4146698535cec0cb4922cc72968ca30b343 Mon Sep 17 00:00:00 2001
From: Andrew Shamah <42912128+amshamah419@users.noreply.github.com>
Date: Thu, 7 Sep 2023 14:48:54 +0300
Subject: [PATCH 21/26] Workday Sign on Event Collector (#28832)

---
 Packs/Workday/.pack-ignore                    |   8 +
 .../WorkdaySignOnEventCollector/README.md     |  49 ++
 .../WorkdaySignOnEventCollector.py            | 571 ++++++++++++++++
 .../WorkdaySignOnEventCollector.yml           | 110 +++
 ...WorkdaySignOnEventCollector_description.md |   7 +
 .../WorkdaySignOnEventCollector_image.png     | Bin 0 -> 4818 bytes
 .../WorkdaySignOnEventCollector_test.py       | 629 ++++++++++++++++++
 .../command_examples                          |   1 +
 .../test_data/example_event.json              |  39 ++
 .../WorkdaySignonEventGenerator/README.md     |  15 +
 .../WorkdaySignonEventGenerator.py            | 189 ++++++
 .../WorkdaySignonEventGenerator.yml           |  31 +
 ...WorkdaySignonEventGenerator_description.md |   5 +
 .../WorkdaySignonEventGenerator_image.png     | Bin 0 -> 4818 bytes
 .../WorkdaySignonEventGenerator_test.py       | 133 ++++
 .../WorkdayEventCollector.xif                 |  62 +-
 .../WorkdayEventCollector.yml                 |   4 +-
 .../WorkdayEventCollector_schema.json         | 136 +++-
 Packs/Workday/README.md                       |  14 +-
 Packs/Workday/ReleaseNotes/1_4_0.md           |  17 +
 Packs/Workday/pack_metadata.json              |   2 +-
 21 files changed, 2015 insertions(+), 7 deletions(-)
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/README.md
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.py
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.yml
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_description.md
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_image.png
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_test.py
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/command_examples
 create mode 100644 Packs/Workday/Integrations/WorkdaySignOnEventCollector/test_data/example_event.json
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/README.md
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.py
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.yml
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_description.md
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_image.png
 create mode 100644 Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_test.py
 create mode 100644 Packs/Workday/ReleaseNotes/1_4_0.md

diff --git a/Packs/Workday/.pack-ignore b/Packs/Workday/.pack-ignore
index 0534618aee..963b5054f2 100644
--- a/Packs/Workday/.pack-ignore
+++ b/Packs/Workday/.pack-ignore
@@ -7,6 +7,12 @@ ignore=IM111
 [file:WorkdayEventCollector_image.png]
 ignore=IM111
 
+[file:WorkdaySignOnEventCollector_image.png]
+ignore=IM111
+
+[file:WorkdaySignonEventGenerator_image.png]
+ignore=IM111
+
 [file:WorkdayIAMEventsGenerator_image.png]
 ignore=IM111
 
@@ -19,3 +25,5 @@ ignore=BA124
 [file:WorkdayEventCollector.yml]
 ignore=MR108
 
+[known_words]
+signon
\ No newline at end of file
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/README.md b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/README.md
new file mode 100644
index 0000000000..1d23d169cb
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/README.md
@@ -0,0 +1,49 @@
+Use the Workday Sign On Event Collector integration to get sign on logs from Workday.
+This integration was integrated and tested with version v37.0 of Workday Sign On Event Collector.
+
+## Configure Workday Sign On Event Collector on Cortex XSOAR
+
+1. Navigate to **Settings** > **Integrations** > **Servers & Services**.
+2. Search for Workday Sign On Event Collector.
+3. Click **Add instance** to create and configure a new integration instance.
+
+    | **Parameter**                                     | **Description** | **Required** |
+---------------------------------------------------| --- | --- | --- |
+    | Server URL (e.g., https://services1.myworkday.com) | API Endpoint of Workday server. Can be obtained from View API Clients report in Workday application. | True |
+    | Tenant Name                                       | The name of the Workday Tenant. Can be obtained from View API Clients report in Workday application. | True |
+    | Username                                          |  | True |
+    | Password                                          |  | True |
+    | Trust any certificate (not secure)                |  | False |
+    | Use system proxy settings                         |  | False |
+    | Max events per fetch                              | The maximum number of sign on events to retrieve. Large amount of events may cause performance issues. | False |
+    | Events Fetch Interval                             |  | False |
+
+4. Click **Test** to validate the URLs, token, and connection.
+
+## Commands
+
+You can execute these commands from the Cortex XSIAM CLI, as part of an automation, or in a playbook.
+After you successfully execute a command, a DBot message appears in the War Room with the command details.
+
+### workday-get-sign-on-events
+
+***
+Returns sign on events extracted from Workday. This command is used for developing/debugging and is to be used with caution, as it can create events, leading to events duplication and exceeding the API request limitation.
+
+#### Base Command
+
+`workday-get-sign-on-events`
+
+#### Input
+
+| **Argument Name**  | **Description**                                                                                                                                                                                      | **Required** |
+|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------|
+| should_push_events | Set this argument to True in order to create events, otherwise the command will only display them. Possible values are: True, False. Default is False.                                               | Required     | 
+| limit              | The maximum number of events to return. Default is 1000.                                                                                                                                             | Optional     | 
+| from_date          | The date and time of the earliest event. The default timezone is UTC/GMT. The time format is "{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z". Example: "2021-05-18T13:45:14Z" indicates May 18, 2021, 1:45PM UTC. | Optional     | 
+| to_date            | The time format is "{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z". Example: "2021-05-18T13:45:14Z" indicates May 18, 2021, 1:45PM UTC.                                                                           | Optional     | 
+| relative_from_date | The query from date, for example, "5 minutes". Be advised, it is strongly suggested to keep this parameter limited in time.                                                                          | Optional     | 
+
+#### Context Output
+
+There is no context output for this command.
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.py b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.py
new file mode 100644
index 0000000000..ed7b00b7f1
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.py
@@ -0,0 +1,571 @@
+
+import demistomock as demisto
+from CommonServerPython import *  # noqa # pylint: disable=unused-wildcard-import
+
+import urllib3
+
+# Disable insecure warnings
+urllib3.disable_warnings()
+
+VENDOR = "workday"
+PRODUCT = "signon"
+API_VERSION = "v40.0"
+REQUEST_DATE_FORMAT = "%Y-%m-%dT%H:%M:%SZ"  # Old format for making requests
+EVENT_DATE_FORMAT = "%Y-%m-%dT%H:%M:%S.%f%z"  # New format for processing events
+TIMEDELTA = 1
+
+
+def get_from_time(seconds_ago: int) -> str:
+    current_time = datetime.now(tz=timezone.utc)
+    from_time = current_time - timedelta(seconds=seconds_ago)
+    return from_time.strftime(REQUEST_DATE_FORMAT)
+
+
+def fletcher16(data: bytes) -> int:
+    """
+    Compute the Fletcher-16 checksum for the given data.
+
+    The Fletcher-16 checksum is a simple and fast checksum algorithm that provides
+    a checksum value based on the input data. It's not as collision-resistant as
+    cryptographic hashes but is faster and can be suitable for non-security-critical
+    applications.
+
+    Parameters:
+    - data (bytes): The input data for which the checksum is to be computed.
+
+    Returns:
+    - int: The computed Fletcher-16 checksum value.
+    """
+    sum1, sum2 = 0, 0
+    for byte in data:
+        sum1 = (sum1 + byte) % 256
+        sum2 = (sum2 + sum1) % 256
+    return (sum2 << 8) | sum1
+
+
+def generate_pseudo_id(event: dict) -> str:
+    """
+    Compute a checksum for the given event using the Fletcher-16 algorithm.
+
+    This function takes the entire event, serializes it to a JSON string,
+    converts that string to bytes, and then computes a Fletcher-16 checksum
+    for the byte data.
+
+    Parameters:
+    - event (dict): The entire event dictionary.
+
+    Returns:
+    - str: The unique ID, which is the computed Fletcher-16 checksum value concatenated with the event's Signon_DateTime.
+    """
+    # Serialize the entire event to a JSON string and encode that to bytes
+    event_str = json.dumps(event, sort_keys=True)
+    data = event_str.encode()
+
+    # Calculate the checksum
+    checksum = fletcher16(data)
+
+    # Create a unique ID by concatenating the checksum with the Signon_DateTime
+    try:
+        unique_id = f"{checksum}_{event['Signon_DateTime']}"
+    except KeyError as e:
+        raise DemistoException(f"While calculating the pseudo ID for an event, an event without a Signon_DateTime was "
+                               f"found.\nError: {e}")
+
+    return unique_id
+
+
+""" CLIENT CLASS """
+
+
+class Client(BaseClient):
+    """
+    Client will implement the service API, and should not contain any Demisto logic.
+    Should only do requests and return data.
+    """
+
+    def __init__(
+        self,
+        base_url: str,
+        verify_certificate: bool,
+        proxy: bool,
+        tenant_name: str,
+        username: str,
+        password: str,
+    ):
+        headers = {"content-type": "text/xml;charset=UTF-8"}
+
+        super().__init__(
+            base_url=base_url, verify=verify_certificate, proxy=proxy, headers=headers
+        )
+        self.tenant_name = tenant_name
+        self.username = username
+        self.password = password
+
+    def generate_workday_account_signons_body(
+        self,
+        page: int,
+        count: int,
+        to_time: Optional[str] = None,
+        from_time: Optional[str] = None,
+    ) -> str:
+        """
+        Generates XML body for Workday Account Signons Request.
+
+        :type page: ``int``
+        :param page: Page number.
+
+        :type count: ``int``
+        :param count: Number of results per page.
+
+        :type to_time: ``Optional[str]``
+        :param to_time: End time for fetching events.
+
+        :type from_time: ``Optional[str]``
+        :param from_time: Start time for fetching events.
+
+        :return: XML body as string.
+        :rtype: ``str``
+        """
+
+        return f"""
+            <soapenv:Envelope xmlns:bsvc="urn:com.workday/bsvc" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
+                <soapenv:Header>
+                    <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
+                        <wsse:UsernameToken wsu:Id="UsernameToken-BF23D830F28697AA1614674076904673">
+                            <wsse:Username>{self.username}</wsse:Username>
+                            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">{self.password}</wsse:Password>
+                        </wsse:UsernameToken>
+                    </wsse:Security>
+                </soapenv:Header>
+                <soapenv:Body>
+                    <bsvc:Get_Workday_Account_Signons_Request xmlns:bsvc="urn:com.workday/bsvc" bsvc:version="v37.0">
+                        <!-- Optional: -->
+                        <bsvc:Request_Criteria>
+                            <!-- Optional: -->
+                            <bsvc:From_DateTime>{from_time}</bsvc:From_DateTime>
+                            <!-- Optional: -->
+                            <bsvc:To_DateTime>{to_time}</bsvc:To_DateTime>
+                        </bsvc:Request_Criteria>
+                        <!-- Optional: -->
+                        <bsvc:Response_Filter>
+                            <bsvc:Page>{page}</bsvc:Page>
+                            <!-- Optional: -->
+                            <bsvc:Count>{count}</bsvc:Count>
+                            <bsvc:As_Of_Entry_DateTime>{from_time}</bsvc:As_Of_Entry_DateTime>
+                        </bsvc:Response_Filter>
+                    </bsvc:Get_Workday_Account_Signons_Request>
+                </soapenv:Body>
+            </soapenv:Envelope>
+
+            """  # noqa:E501
+
+    def generate_test_payload(self, from_time: str, to_time: str) -> str:
+        return f"""
+            <soapenv:Envelope xmlns:bsvc="urn:com.workday/bsvc" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
+                <soapenv:Header>
+                    <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
+                        <wsse:UsernameToken wsu:Id="UsernameToken-BF23D830F28697AA1614674076904673">
+                            <wsse:Username>{self.username}</wsse:Username>
+                            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">{self.password}</wsse:Password>
+                        </wsse:UsernameToken>
+                    </wsse:Security>
+                </soapenv:Header>
+                <soapenv:Body>
+                    <bsvc:Get_Workday_Account_Signons_Request xmlns:bsvc="urn:com.workday/bsvc" bsvc:version="v37.0">
+                        <!-- Optional: -->
+                        <bsvc:Request_Criteria>
+                            <!-- Optional: -->
+                            <bsvc:From_DateTime>{from_time}</bsvc:From_DateTime>
+                            <!-- Optional: -->
+                            <bsvc:To_DateTime>{to_time}</bsvc:To_DateTime>
+                        </bsvc:Request_Criteria>
+                        <!-- Optional: -->
+                        <bsvc:Response_Filter>
+                            <bsvc:Page>1</bsvc:Page>
+                            <!-- Optional: -->
+                            <bsvc:Count>1</bsvc:Count>
+                        </bsvc:Response_Filter>
+                    </bsvc:Get_Workday_Account_Signons_Request>
+                </soapenv:Body>
+            </soapenv:Envelope>
+            """  # noqa:E501
+
+    def retrieve_events(
+            self,
+            page: int,
+            count: int,
+            to_time: Optional[str] = None,
+            from_time: Optional[str] = None,
+    ) -> tuple:
+        """
+        Retrieves events from Workday.
+
+        :type page: ``int``
+        :param page: Page number.
+
+        :type count: ``int``
+        :param count: Number of results per page.
+
+        :type to_time: ``Optional[str]``
+        :param to_time: End time for fetching events.
+
+        :type from_time: ``Optional[str]``
+        :param from_time: Start time for fetching events.
+
+        :return: Tuple containing raw JSON response and account sign-on data.
+        :rtype: ``Tuple``
+        """
+
+        # Make the HTTP request.
+        raw_response = self._http_request(
+            method="POST",
+            url_suffix="",
+            data=self.generate_workday_account_signons_body(page, count, to_time, from_time),
+            resp_type="text",
+            timeout=120
+        )
+
+        raw_json_response, account_signon_data = convert_to_json(raw_response)
+
+        total_pages = int(demisto.get(
+            obj=raw_json_response, field="Envelope.Body.Get_Workday_Account_Signons_Response.Response_Results",
+            defaultParam={}
+        ).get("Total_Pages", "1"))
+
+        return account_signon_data, total_pages
+
+    def test_connectivity(self) -> str:
+        """
+        Tests API connectivity and authentication.
+
+        :return: 'ok' if test passed, else exception.
+        :rtype: ``str``
+        """
+        seconds_ago = 5
+        from_time = get_from_time(seconds_ago)
+        to_time = datetime.now(tz=timezone.utc).strftime(REQUEST_DATE_FORMAT)
+
+        payload = self.generate_test_payload(from_time=from_time, to_time=to_time)
+
+        self._http_request(
+            method="POST", url_suffix="", data=payload, resp_type="text", timeout=120
+        )
+
+        return "ok"
+
+
+""" HELPER FUNCTIONS """
+
+
+def convert_to_json(response: str | dict) -> tuple[Dict[str, Any], Dict[str, Any]]:
+    """
+    Convert an XML response to a JSON object and extract the 'Workday_Account_Signons' data.
+
+    :param response: XML response to be converted
+    :return: Tuple containing the full converted response and the extracted 'Workday_Account_Signons' data.
+    :raises ValueError: If the expected data cannot be found in the response.
+    """
+    if type(response) == dict:
+        raw_json_response = response
+    else:
+        try:
+            raw_json_response = json.loads(xml2json(response))
+        except Exception as e:
+            raise ValueError(f"Error parsing XML to JSON: {e}")
+
+    # Get the 'Get_Workday_Account_Signons_Response' dictionary safely
+    response_data = demisto.get(raw_json_response, "Envelope.Body.Get_Workday_Account_Signons_Response")
+
+    if not response_data:
+        response_data = raw_json_response.get(
+            "Get_Workday_Account_Signons_Response", {}
+        )
+
+    account_signon_data = response_data.get("Response_Data", {})
+
+    # Ensure 'Workday_Account_Signon' is a list
+    workday_account_signons = account_signon_data.get("Workday_Account_Signon")
+    if isinstance(workday_account_signons, dict):
+        account_signon_data["Workday_Account_Signon"] = [workday_account_signons]
+
+    return raw_json_response, account_signon_data
+
+
+def process_and_filter_events(events: list, from_time: str, previous_run_pseudo_ids: set) -> tuple:
+    non_duplicates = []
+    duplicates = []
+    pseudo_ids_for_next_iteration = set()
+
+    try:
+        from_datetime = datetime.strptime(from_time, EVENT_DATE_FORMAT).replace(tzinfo=timezone.utc)
+    except ValueError:
+        # On first run, the from_time is in UTC since that is what's sent in the request, this covers this scenario
+        from_datetime = datetime.strptime(from_time, REQUEST_DATE_FORMAT).replace(tzinfo=timezone.utc)
+    most_recent_event_time = datetime.min.replace(tzinfo=timezone.utc)
+
+    for event in events:
+        event_datetime = datetime.strptime(event["Signon_DateTime"], EVENT_DATE_FORMAT).replace(tzinfo=timezone.utc)
+
+        # Add '_time' key to each event
+        event["_time"] = event.get("Signon_DateTime")
+
+        # Update the most recent event time
+        if event_datetime > most_recent_event_time:
+            most_recent_event_time = event_datetime
+
+        # Check for duplicates within ±1 second of from_time
+        if abs((event_datetime - from_datetime).total_seconds()) <= 1:
+            event_pseudo_id = generate_pseudo_id(event)
+            if event_pseudo_id not in previous_run_pseudo_ids:
+                non_duplicates.append(event)
+            else:
+                duplicates.append(event_pseudo_id)
+        else:
+            non_duplicates.append(event)
+    # Generate pseudo IDs for events within the last second of the most recent event
+    last_second_start_time = most_recent_event_time - timedelta(seconds=TIMEDELTA)
+
+    if duplicates:
+        demisto.debug(f"Found {len(duplicates)} duplicate events: {duplicates}")
+
+    for event in non_duplicates:
+        event_datetime = datetime.strptime(event["_time"], EVENT_DATE_FORMAT).replace(tzinfo=timezone.utc)
+
+        if event_datetime >= last_second_start_time:
+            event_pseudo_id = generate_pseudo_id(event)
+            pseudo_ids_for_next_iteration.add(event_pseudo_id)
+
+    return non_duplicates, pseudo_ids_for_next_iteration
+
+
+def fetch_sign_on_logs(
+    client: Client, limit_to_fetch: int, from_date: str, to_date: str
+):
+    """
+    Fetches Sign On logs from workday.
+    Args:
+        client: Client object.
+        limit_to_fetch: limit of logs to fetch from Workday.
+        from_date: Events from time.
+        to_date: Events to time.
+
+    Returns:
+        Sign On Events fetched from Workday.
+    """
+    sign_on_logs: list = []
+    page = 1  # We assume that we will need to make one call at least
+    total_fetched = 0  # Keep track of the total number of events fetched
+    res, total_pages = client.retrieve_events(
+        from_time=from_date, to_time=to_date, page=1, count=999
+    )
+    sign_on_events_from_api = res.get("Workday_Account_Signon", [])
+    sign_on_logs.extend(sign_on_events_from_api)
+    demisto.debug(f"Request indicates a total of {total_pages} pages to paginate.")
+    pages_remaining = total_pages - 1
+
+    while (page <= total_pages and pages_remaining != 0) and res:
+        page += 1
+        # Calculate the remaining number of events to fetch
+        remaining_to_fetch = limit_to_fetch - total_fetched
+        if remaining_to_fetch <= 0:
+            break
+        res, _ = client.retrieve_events(
+            from_time=from_date, to_time=to_date, page=page, count=limit_to_fetch
+        )
+        pages_remaining -= 1
+        fetched_count = len(sign_on_events_from_api)
+        total_fetched += fetched_count
+
+        demisto.debug(f"Fetched {len(sign_on_events_from_api)} sign on logs.")
+        sign_on_logs.extend(sign_on_events_from_api)
+        demisto.debug(f"{pages_remaining} pages left to fetch.")
+    return sign_on_logs
+
+
+""" COMMAND FUNCTIONS """
+
+
+def get_sign_on_events_command(
+    client: Client, from_date: str, to_date: str, limit: int
+) -> tuple[list, CommandResults]:
+    """
+
+    Args:
+        limit: The maximum number of logs to return.
+        to_date: date to fetch events from.
+        from_date: date to fetch events to.
+        client: Client object.
+
+    Returns:
+        Sign on logs from Workday.
+    """
+
+    sign_on_events = fetch_sign_on_logs(
+        client=client, limit_to_fetch=limit, from_date=from_date, to_date=to_date
+    )
+
+    [_event.update({"_time": _event.get("Signon_DateTime")}) for _event in sign_on_events]
+
+    demisto.info(
+        f"Got a total of {len(sign_on_events)} events between the time {from_date} to {to_date}"
+    )
+    readable_output = tableToMarkdown(
+        "Sign On Events List:",
+        sign_on_events,
+        removeNull=True,
+        headerTransform=lambda x: string_to_table_header(camel_case_to_underscore(x)),
+    )
+
+    return sign_on_events, CommandResults(readable_output=readable_output)
+
+
+def fetch_sign_on_events_command(client: Client, max_fetch: int, last_run: dict):
+    """
+    Fetches sign on logs from Workday.
+    Args:
+        client: Client object.
+        max_fetch: max logs to fetch set by customer.
+        last_run: last run object.
+
+    Returns:
+        Sign on logs from Workday.
+
+    """
+    current_time = datetime.utcnow()
+    if "last_fetch_time" not in last_run:
+        first_fetch_time = current_time - timedelta(minutes=1)
+        first_fetch_str = first_fetch_time.strftime(REQUEST_DATE_FORMAT)
+        from_date = last_run.get("last_fetch_time", first_fetch_str)
+    else:
+        from_date = last_run.get("last_fetch_time")
+    # Checksums in this context is used as an ID since none is provided directly from Workday.
+    # This is to prevent duplicates.
+    previous_run_pseudo_ids = last_run.get("previous_run_pseudo_ids", {})
+    to_date = datetime.now(tz=timezone.utc).strftime(REQUEST_DATE_FORMAT)
+    demisto.debug(f"Getting Sign On Events {from_date=}, {to_date=}.")
+    sign_on_events = fetch_sign_on_logs(
+        client=client, limit_to_fetch=max_fetch, from_date=from_date, to_date=to_date
+    )
+
+    if sign_on_events:
+        demisto.debug(f"Got {len(sign_on_events)} sign_on_events. Begin processing.")
+        non_duplicates, pseudo_ids_for_next_iteration = process_and_filter_events(
+            events=sign_on_events,
+            previous_run_pseudo_ids=previous_run_pseudo_ids,
+            from_time=from_date
+        )
+
+        demisto.debug(f"Done processing {len(non_duplicates)} sign_on_events.")
+        last_event = non_duplicates[-1]
+        last_run = {
+            "last_fetch_time": last_event.get('Signon_DateTime'),
+            "previous_run_pseudo_ids": pseudo_ids_for_next_iteration,
+        }
+        demisto.debug(f"Saving last run as {last_run}")
+    else:
+        # Handle the case where no events were retrieved
+        last_run["last_fetch_time"] = current_time
+        non_duplicates = []
+
+    return non_duplicates, last_run
+
+
+def module_of_testing(client: Client) -> str:  # pragma: no cover
+    """Tests API connectivity and authentication
+
+    Returning 'ok' indicates that the integration works like it is supposed to.
+    Connection to the service is successful.
+    Raises exceptions if something goes wrong.
+
+    :type client: ``Client``
+    :param Client: client to use
+
+    :return: 'ok' if test passed, anything else will fail the test.
+    :rtype: ``str``
+    """
+    return client.test_connectivity()
+
+
+""" MAIN FUNCTION """
+
+
+def main() -> None:  # pragma: no cover
+    """main function, parses params and runs command functions"""
+    command = demisto.command()
+    args = demisto.args()
+    params = demisto.params()
+
+    tenant_name = params.get("tenant_name")
+    base_url = params.get("base_url")
+
+    if not base_url.startswith("https://"):
+        raise ValueError("Invalid base URL. Should begin with https://")
+    url = f"{base_url}/ccx/service/{tenant_name}/Identity_Management/{API_VERSION}"
+
+    username = params.get("credentials", {}).get("identifier")
+    password = params.get("credentials", {}).get("password")
+
+    verify_certificate = not params.get("insecure", False)
+    proxy = params.get("proxy", False)
+    max_fetch = arg_to_number(params.get("max_fetch")) or 10000
+
+    demisto.debug(f"Command being called is {command}")
+    try:
+        client = Client(
+            base_url=url,
+            tenant_name=tenant_name,
+            username=username,
+            password=password,
+            verify_certificate=verify_certificate,
+            proxy=proxy,
+        )
+
+        if command == "test-module":
+            return_results(module_of_testing(client))
+        elif command == "workday-get-sign-on-events":
+            if args.get("relative_from_date", None):
+                from_time = arg_to_datetime(  # type:ignore
+                    arg=args.get('relative_from_date'),
+                    arg_name='Relative datetime',
+                    required=False
+                ).strftime(REQUEST_DATE_FORMAT)
+                to_time = datetime.utcnow().strftime(REQUEST_DATE_FORMAT)
+            else:
+                from_time = args.get("from_date")
+                to_time = args.get("to_date")
+
+            sign_on_events, results = get_sign_on_events_command(
+                client=client,
+                from_date=from_time,
+                to_date=to_time,
+                limit=arg_to_number(args.get("limit", "100"), required=True),  # type: ignore
+            )
+            return_results(results)
+            if argToBoolean(args.get("should_push_events", "true")):
+                send_events_to_xsiam(sign_on_events, vendor=VENDOR, product=PRODUCT)
+        elif command == "fetch-events":
+            last_run = demisto.getLastRun()
+            demisto.debug(f"Starting new fetch with last_run as {last_run}")
+            sign_on_events, new_last_run = fetch_sign_on_events_command(
+                client=client, max_fetch=max_fetch, last_run=last_run
+            )
+            demisto.debug(f"Done fetching events, sending to XSIAM. - {sign_on_events}")
+            send_events_to_xsiam(sign_on_events, vendor=VENDOR, product=PRODUCT)
+            if new_last_run:
+                # saves next_run for the time fetch-events is invoked
+                demisto.info(f"Setting new last_run to {new_last_run}")
+                demisto.setLastRun(new_last_run)
+        else:
+            raise NotImplementedError(f"command {command} is not implemented.")
+
+    # Log exceptions and return errors
+    except Exception as e:
+        return_error(
+            f"Failed to execute {demisto.command()} command.\nError:\n{str(e)}"
+        )
+
+
+""" ENTRY POINT """
+
+if __name__ in ("__main__", "__builtin__", "builtins"):
+    main()
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.yml b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.yml
new file mode 100644
index 0000000000..da3720c8cc
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector.yml
@@ -0,0 +1,110 @@
+category: Analytics & SIEM
+sectionOrder:
+- Connect
+- Collect
+commonfields:
+  id: Workday Sign On Event Collector
+  version: -1
+configuration:
+- name: base_url
+  display: Server URL (e.g., https://services1.myworkday.com)
+  required: true
+  defaultvalue: 'https://services1.myworkday.com'
+  type: 0
+  additionalinfo: 'API endpoint of Workday server. Can be obtained from the View API Clients report in the Workday application.'
+  section: Connect
+- name: tenant_name
+  display: Tenant Name
+  required: true
+  defaultvalue:
+  type: 0
+  additionalinfo: 'The name of the Workday Tenant. Can be obtained from View API Clients report in Workday application.'
+  section: Connect
+- name: credentials
+  display: Username
+  required: true
+  defaultvalue:
+  type: 9
+  displaypassword: Password
+  section: Connect
+  hiddenusername: false
+- name: insecure
+  display: Trust any certificate (not secure)
+  required: false
+  type: 8
+  additionalinfo:
+  section: Connect
+  advanced: true
+- name: proxy
+  display: Use system proxy settings
+  required: false
+  type: 8
+  additionalinfo:
+  section: Connect
+  advanced: true
+- additionalinfo: The maximum number of sign on events to retrieve. Large amount of events may cause performance issues.
+  defaultvalue: '10000'
+  display: Max events per fetch
+  name: max_fetch
+  required: false
+  type: 0
+  section: Collect
+  hidden: false
+- defaultvalue: 1
+  display: Events Fetch Interval
+  hidden: false
+  name: eventFetchInterval
+  required: false
+  type: 19
+  section: Collect
+  advanced: true
+description: Use the Workday Sign On Event Collector integration to get sign on logs from Workday.
+display: Workday Sign On Event Collector
+name: Workday Sign On Event Collector
+script:
+  commands:
+  - name: workday-get-sign-on-events
+    description: Returns sign on events extracted from Workday. This command is used for developing/debugging and is to be used with caution, as it can create events, leading to events duplication and exceeding the API request limitation.
+    deprecated: false
+    arguments:
+    - auto: PREDEFINED
+      defaultValue: "False"
+      description: Set this argument to True in order to create events, otherwise the command will only display them.
+      name: should_push_events
+      predefined:
+      - "True"
+      - "False"
+      required: true
+    - name: limit
+      description: The maximum number of events to return.
+      required: false
+      isArray: false
+      defaultValue: 1000
+    - name: from_date
+      description: 'The date and time of the earliest event. The default timezone is UTC/GMT. The time format is "{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z". Example: "2021-05-18T13:45:14Z" indicates May 18, 2021, 1:45PM UTC.'
+      required: false
+      isArray: false
+      defaultValue: ""
+    - name: to_date
+      description: 'The time format is "{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z". Example: "2021-05-18T13:45:14Z" indicates May 18, 2021, 1:45PM UTC.'
+      required: false
+      isArray: false
+      defaultValue: ""
+    - name: relative_from_date
+      description: 'The query from date, for example, "5 minutes". Note: We strongly suggest to limit the value of this parameter.'
+      required: false
+      isArray: false
+      defaultValue: ""
+    outputs: []
+  runonce: false
+  script: "-"
+  type: python
+  subtype: python3
+  isfetchevents: true
+  dockerimage: demisto/python3:3.10.13.72123
+  feed: false
+fromversion: 8.2.0
+tests:
+- No tests (auto formatted)
+marketplaces:
+- marketplacev2
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_description.md b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_description.md
new file mode 100644
index 0000000000..86f2da6825
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_description.md
@@ -0,0 +1,7 @@
+## Workday Event Collector
+
+Use this integration to collect Signon events automatically from Workday.
+
+In order to use this integration, you need to enter your Workday credentials in the relevant integration instance parameters.
+
+The API Endpoint of Workday server can be obtained from View API Clients report in Workday application.
\ No newline at end of file
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_image.png b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_image.png
new file mode 100644
index 0000000000000000000000000000000000000000..1426dc48413218e3c859ace23ebd9f8ce3605796
GIT binary patch
literal 4818
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

literal 0
HcmV?d00001

diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_test.py b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_test.py
new file mode 100644
index 0000000000..95821d5618
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/WorkdaySignOnEventCollector_test.py
@@ -0,0 +1,629 @@
+import json
+import unittest
+from typing import Any
+from unittest.mock import patch
+from freezegun import freeze_time
+
+from CommonServerPython import DemistoException
+from WorkdaySignOnEventCollector import (
+    get_from_time,
+    fletcher16,
+    generate_pseudo_id,
+    convert_to_json,
+    Client,
+    fetch_sign_on_logs,
+    get_sign_on_events_command,
+    fetch_sign_on_events_command,
+    process_and_filter_events,
+    main,
+    VENDOR,
+    PRODUCT,
+)
+
+
+def test_get_from_time() -> None:
+    """
+    Given:
+        - A time duration in seconds (3600 seconds or 1 hour ago).
+
+    When:
+        - The function `get_from_time` is called to convert this duration to a UTC datetime string.
+
+    Then:
+        - Ensure that the returned value is a string.
+        - Validate that the string ends with 'Z', indicating it's in UTC format.
+    """
+    # Given: A time duration of 3600 seconds (or 1 hour) ago.
+    seconds_ago = 3600  # 1 hour ago
+
+    # When: Calling the function to convert this to a UTC datetime string.
+    result: Any = get_from_time(seconds_ago)
+
+    # Then: Validate the type and format of the returned value.
+    assert isinstance(result, str)
+    assert result.endswith("Z")  # Check if it's in the right format
+
+
+def test_fletcher16() -> None:
+    """
+    Given:
+        - Two types of byte strings, one containing the word 'test' and another being empty.
+
+    When:
+        - The function `fletcher16` is called to calculate the checksum for these byte strings.
+
+    Then:
+        - Ensure that the checksum calculated for the byte string 'test' matches the expected value of 22976.
+        - Validate that the checksum for an empty byte string is 0.
+    """
+    # Given: A byte string containing the word 'test'.
+    data = b"test"
+
+    # When: Calling `fletcher16` to calculate the checksum.
+    result: Any = fletcher16(data)
+
+    # Then: Validate that the checksum matches the expected value.
+    expected = 22976
+    assert result == expected
+
+    # Given: An empty byte string.
+    data = b""
+
+    # When: Calling `fletcher16` to calculate the checksum.
+    result = fletcher16(data)
+
+    # Then: Validate that the checksum for an empty byte string is 0.
+    expected = 0
+    assert result == expected
+
+
+def test_generate_pseudo_id() -> None:
+    """
+    Given:
+        - Four different event dictionaries:
+            1. A valid event dictionary with known values.
+            2. An empty event dictionary.
+            3. An event dictionary missing the "Signon_DateTime" key.
+            4. A large event dictionary.
+
+    When:
+        - Calling `generate_pseudo_id` to calculate a unique ID based on the event dictionary.
+
+    Then:
+        - For the first case, ensure that the unique ID matches the expected value.
+        - For the second and third cases, ensure that an exception is raised.
+        - For the fourth case, ensure the function can handle large dictionaries without errors.
+    """
+
+    # Given: A valid event dictionary with known values.
+    event1 = {
+        "Short_Session_ID": "12345",
+        "User_Name": "ABC123",
+        "Successful": 1,
+        "Signon_DateTime": "2023-09-04T07:47:57.460-07:00",
+    }
+    # When: Calling `generate_pseudo_id` to calculate the unique ID.
+    event1_str: str = json.dumps(event1, sort_keys=True)
+    expected_checksum1: Any = fletcher16(event1_str.encode())
+    expected_unique_id1: str = f"{expected_checksum1}_{event1['Signon_DateTime']}"
+    result1: str = generate_pseudo_id(event1)
+    # Then: Validate that the unique ID matches the expected value.
+    assert result1 == expected_unique_id1
+
+    # Given: An empty event dictionary.
+    event2 = {}
+    # When & Then: Calling `generate_pseudo_id` and expecting an exception.
+    try:
+        generate_pseudo_id(event2)
+    except DemistoException as e:
+        assert (
+            str(e)
+            == "While calculating the pseudo ID for an event, an event without a Signon_DateTime was "
+            "found.\nError: 'Signon_DateTime'"
+        )
+    else:
+        raise AssertionError("Expected DemistoException but did not get one")
+
+    # Given: An event dictionary missing the "Signon_DateTime" key.
+    event3 = {
+        "Short_Session_ID": "12345",
+        "User_Name": "ABC123",
+        "Successful": 1,
+    }
+    # When & Then: Calling `generate_pseudo_id` and expecting an exception.
+    try:
+        generate_pseudo_id(event3)
+    except DemistoException:
+        pass
+    else:
+        raise AssertionError("Expected DemistoException but did not get one")
+
+    # Given: A large event dictionary.
+    event4 = {str(i): i for i in range(10000)}  # Create a large dictionary
+    event4["Signon_DateTime"] = "2023-09-04T07:47:57.460-07:00"  # Add a Signon_DateTime key
+    # When & Then: Calling `generate_pseudo_id` to check if the function can handle it.
+    assert generate_pseudo_id(event4)
+
+
+def test_process_and_filter_events() -> None:
+    """
+    Given:
+        - A list of two valid sign-on events that differ by 1 second in their "Signon_DateTime".
+        - An initial time ("from_time") that matches the "Signon_DateTime" of one of the events.
+        - An empty set of pseudo_ids from the previous run.
+
+    When:
+        - Calling the `process_and_filter_events` function to filter out duplicates and process events for the next
+         iteration.
+
+    Then:
+        - The list of non-duplicate events should match the original list of events.
+        - The set of pseudo_ids for the next iteration should contain two elements.
+        - Each event in the list of non-duplicates should have an additional "_time" key that matches its
+          "Signon_DateTime".
+    """
+
+    # Given: A list of two valid sign-on events and other initial conditions
+    events = [
+        {
+            "Short_Session_ID": "12345",
+            "User_Name": "ABC6789",
+            "Successful": 1,
+            "Signon_DateTime": "2023-09-04T07:47:57.460-07:00",
+        },
+        {
+            "Short_Session_ID": "12346",
+            "User_Name": "ABC6790",
+            "Successful": 1,
+            "Signon_DateTime": "2023-09-04T07:47:57.460-07:00",
+        },
+    ]
+    from_time: str = "2021-09-01T12:00:00Z"
+    previous_run_pseudo_ids: set[
+        Any
+    ] = set()  # Assume no previous checksums for simplicity
+
+    # When: Calling the function to test
+    non_duplicates, pseudo_ids_for_next_iteration = process_and_filter_events(
+        events, from_time, previous_run_pseudo_ids
+    )
+
+    # Then: Validate the function's output
+    assert (
+        non_duplicates == events
+    )  # Check if the list of non-duplicates is as expected
+    assert (
+        len(pseudo_ids_for_next_iteration) == 2
+    )  # Check if the set of pseudo_ids for next iteration is updated
+
+    # Check if '_time' key is added to each event
+    for event in non_duplicates:
+        assert "_time" in event
+        assert event["_time"] == event["Signon_DateTime"]
+
+
+def test_convert_to_json() -> None:
+    """
+    Given:
+        - A sample XML response string containing a single 'Workday_Account_Signon' entry with a 'Signon_DateTime'.
+
+    When:
+        - Calling the 'convert_to_json' function to convert the XML data to a Python dictionary.
+
+    Then:
+        - The function should return two Python dictionaries.
+        - The first dictionary should represent the entire XML structure.
+        - The second dictionary should contain just the 'Workday_Account_Signon' entries.
+        - Both dictionaries should correctly reflect the 'Signon_DateTime' from the original XML.
+    """
+
+    # Given: Test with XML data (this is a simplified version for the sake of the test)
+    xml_response = """
+    <Envelope>
+        <Body>
+            <Get_Workday_Account_Signons_Response>
+                <Response_Data>
+                    <Workday_Account_Signon>
+                        <Signon_DateTime>2023-09-04T07:47:57.460-07:00</Signon_DateTime>
+                    </Workday_Account_Signon>
+                </Response_Data>
+            </Get_Workday_Account_Signons_Response>
+        </Body>
+    </Envelope>
+    """
+
+    # When: Calling the function to test
+    raw_json_response, account_signon_data = convert_to_json(xml_response)
+
+    # Then: Check if the converted data matches the expected structure
+    assert (
+        raw_json_response["Envelope"]["Body"]["Get_Workday_Account_Signons_Response"][
+            "Response_Data"
+        ]["Workday_Account_Signon"][0]["Signon_DateTime"]
+        == "2023-09-04T07:47:57.460-07:00"
+    )
+
+    assert (
+        account_signon_data["Workday_Account_Signon"][0]["Signon_DateTime"]
+        == "2023-09-04T07:47:57.460-07:00"
+    )
+
+
+def test_generate_workday_account_signons_body() -> None:
+    """
+    Given:
+        - A Client object initialized with a base URL, verification settings, a tenant name, and login credentials.
+        - Parameters specifying the page, count, and time range for fetching Workday sign-on events.
+
+    When:
+        - Calling the 'generate_workday_account_signons_body' method on the Client object to generate the SOAP request body.
+
+    Then:
+        - The returned SOAP request body should contain all the specified parameters.
+        - The body should also contain the username and password for authentication.
+    """
+
+    # Given: Initialize a Client object with sample data
+    client = Client(
+        base_url="",
+        verify_certificate=True,
+        proxy=False,
+        tenant_name="test_tenant",
+        username="test_user",
+        password="test_pass",
+    )
+
+    # When: Generate the SOAP request body
+    body = client.generate_workday_account_signons_body(
+        page=1,
+        count=10,
+        to_time="2021-09-01T12:00:00Z",
+        from_time="2021-09-01T11:00:00Z",
+    )
+
+    # Then: Verify that the SOAP request body contains all the specified parameters
+    assert "<bsvc:Page>1</bsvc:Page>" in body
+    assert "<bsvc:Count>10</bsvc:Count>" in body
+    assert "<bsvc:From_DateTime>2021-09-01T11:00:00Z</bsvc:From_DateTime>" in body
+    assert "<bsvc:To_DateTime>2021-09-01T12:00:00Z</bsvc:To_DateTime>" in body
+    assert "<wsse:Username>test_user</wsse:Username>" in body
+    assert (
+        '<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">test_pass</wsse:Password>'  # noqa:E501
+        in body
+    )
+
+
+def test_generate_test_payload() -> None:
+    """
+    Given:
+        - A Client object initialized with a base URL, verification settings, a tenant name, and login credentials.
+        - Parameters specifying the time range for fetching Workday sign-on events for the test payload.
+
+    When:
+        - Calling the 'generate_test_payload' method on the Client object to generate a SOAP request payload for testing.
+
+    Then:
+        - The returned SOAP request payload should contain all the specified parameters.
+        - The payload should also contain the username and password for authentication.
+    """
+
+    # Given: Initialize a Client object with sample data
+    client = Client(
+        base_url="",
+        verify_certificate=True,
+        proxy=False,
+        tenant_name="test_tenant",
+        username="test_user",
+        password="test_pass",
+    )
+
+    # When: Generate the SOAP request payload for testing
+    payload = client.generate_test_payload(
+        from_time="2021-09-01T11:00:00Z", to_time="2021-09-01T12:00:00Z"
+    )
+
+    # Then: Verify that the SOAP request payload contains all the specified parameters
+    assert "<bsvc:Page>1</bsvc:Page>" in payload
+    assert "<bsvc:Count>1</bsvc:Count>" in payload
+    assert "<bsvc:From_DateTime>2021-09-01T11:00:00Z</bsvc:From_DateTime>" in payload
+    assert "<bsvc:To_DateTime>2021-09-01T12:00:00Z</bsvc:To_DateTime>" in payload
+    assert "<wsse:Username>test_user</wsse:Username>" in payload
+    assert (
+        '<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">test_pass</wsse:Password>'  # noqa:E501
+        in payload
+    )
+
+
+def test_convert_to_json_valid_input() -> None:
+    """
+    Given:
+        - An XML-formatted response string from the Workday API, containing sign-on event data.
+
+    When:
+        - Calling the 'convert_to_json' function to convert the XML response to JSON format.
+
+    Then:
+        - The function should return two JSON objects: one containing the full JSON-converted data,
+          and another containing only the sign-on event data.
+        - Both JSON objects should be properly formatted and contain the expected data fields.
+    """
+
+    # Given: An XML-formatted response string from the Workday API
+    response = """
+    <Envelope>
+        <Body>
+            <Get_Workday_Account_Signons_Response>
+                <Response_Data>
+                    <Workday_Account_Signon>
+                        <Signon_DateTime>2021-09-01T11:00:00Z</Signon_DateTime>
+                    </Workday_Account_Signon>
+                </Response_Data>
+            </Get_Workday_Account_Signons_Response>
+        </Body>
+    </Envelope>
+    """
+
+    # When: Converting the XML to JSON
+    full_json, account_signon_data = convert_to_json(response)
+
+    # Then: Validate the full_json data structure
+    envelope = full_json.get("Envelope", {})
+    body = envelope.get("Body", {})
+    response = body.get("Get_Workday_Account_Signons_Response", {})
+    response_data = response.get("Response_Data", {})
+    workday_account_signons = response_data.get("Workday_Account_Signon", [])
+
+    # Assertions for full_json
+    assert isinstance(
+        workday_account_signons, list
+    ), "workday_account_signons is not a list"
+    assert workday_account_signons, "workday_account_signons is empty"
+    assert workday_account_signons[0].get("Signon_DateTime") == "2021-09-01T11:00:00Z"
+
+    # Then: Validate the account_signon_data structure
+    workday_account_signons_data = account_signon_data.get("Workday_Account_Signon", [])
+
+    # Assertions for account_signon_data
+    assert workday_account_signons_data
+    assert (
+        workday_account_signons_data[0].get("Signon_DateTime") == "2021-09-01T11:00:00Z"
+    )
+
+
+class TestFetchSignOnLogs(unittest.TestCase):
+    def setUp(self) -> None:
+        """
+        Given:
+            - A Client object with mock URL, tenant, username, and password.
+
+        When:
+            - Setting up each unit test case.
+
+        Then:
+            - The Client object should be initialized and ready for testing.
+        """
+        self.client = Client(
+            "mock_url",
+            False,
+            False,
+            "mock_tenant",
+            "mock_user",
+            "mock_pass",
+        )
+
+    @patch.object(Client, "retrieve_events")
+    def test_fetch_sign_on_logs_single_page(self, mock_retrieve_events) -> None:
+        """
+        Given:
+            - A mock Client object with a retrieve_events method that returns a sample response.
+            - The sample response contains a single Workday sign-on event.
+
+        When:
+            - Calling the fetch_sign_on_logs function to fetch sign-on logs.
+
+        Then:
+            - The function should return a list of events.
+            - The length of the list should be 1.
+            - The event in the list should have the User_Name "John".
+        """
+
+        # Given: Sample data to be returned by the mock
+        mock_response = (
+            {
+                "Workday_Account_Signon": [
+                    {
+                        "Signon_DateTime": "2021-09-01T11:00:00Z",
+                        "User_Name": "John",
+                        "Short_Session_ID": "123456",
+                        "Successful": 1,
+                    }
+                ]
+            },
+            1,
+        )
+
+        # Setup: Configure the mock to return the sample data
+        mock_retrieve_events.return_value = mock_response
+
+        # When: Fetching sign-on logs
+        events = fetch_sign_on_logs(
+            self.client, 10, "2021-09-01T00:00:00Z", "2021-09-02T00:00:00Z"
+        )
+
+        # Then: Validate the function's return value
+        assert len(events) == 1
+        assert events[0]["User_Name"] == "John"
+
+
+class TestGetSignOnEventsCommand(unittest.TestCase):
+    def test_get_sign_on_events_command(self) -> None:
+        """
+        Given:
+            - A Client object with mock settings.
+            - A patch for the fetch_sign_on_logs function to return a mock event.
+            - The mock event has details such as Signon_DateTime, User_Name, Short_Session_ID, and Successful status.
+
+        When:
+            - Calling the get_sign_on_events_command function to get sign-on events between two date-time ranges.
+
+        Then:
+            - The function should return a list of events and results.
+            - The length of the list should be 1.
+            - The event in the list should have the User_Name "John" and _time "2021-09-01T11:00:00Z".
+            - The readable_output of the results should start with "### Sign On Events List:".
+        """
+
+        # Given: Sample data to be returned by the mock
+        mock_events = [
+            {
+                "Signon_DateTime": "2023-09-04T07:47:57.460-07:00",
+                "User_Name": "John",
+                "Short_Session_ID": "123456",
+                "Successful": 1,
+                "_time": "2021-09-01T11:00:00Z",  # This is added by the process_events function
+            }
+        ]
+
+        # Setup: Use patch to mock the fetch_sign_on_logs function
+        with patch(
+            "WorkdaySignOnEventCollector.fetch_sign_on_logs", return_value=mock_events
+        ):
+            client = Client(
+                "mock_url",
+                False,
+                False,
+                "mock_tenant",
+                "mock_user",
+                "mock_pass",
+            )
+
+            # When: Calling the get_sign_on_events_command
+            events, results = get_sign_on_events_command(
+                client, "2021-09-01T00:00:00Z", "2021-09-02T00:00:00Z", 10
+            )
+
+            # Then: Validate the function's return value
+            assert len(events) == 1
+            assert events[0]["User_Name"] == "John"
+            assert events[0]["_time"] == "2023-09-04T07:47:57.460-07:00"
+            assert results.readable_output.startswith("### Sign On Events List:")
+
+
+@freeze_time("2023-09-04T00:00:00.000-07:00")
+def test_fetch_sign_on_events_command_single_page() -> None:
+    """
+    Given:
+        - A Client object with mock settings.
+        - A patch for the Client's retrieve_events method to return a mock event.
+        - A patch for demisto.getLastRun function to return a mock last_run dictionary.
+        - The mock event has details such as Signon_DateTime, User_Name, Short_Session_ID, and Successful status.
+        - The mock last_run dictionary contains last_fetch_time and previous_run_pseudo_ids.
+
+    When:
+        - Calling the fetch_sign_on_events_command function to fetch sign-on events.
+
+    Then:
+        - The function should return a list of events and a new_last_run dictionary.
+        - The length of the list should be 1.
+        - The event in the list should have the User_Name "John" and _time "2021-09-01T11:00:00Z".
+        - The new_last_run dictionary should have last_fetch_time updated to "2021-09-01T11:00:00Z".
+    """
+
+    # Given: Sample data to be returned by the mock
+    mock_events = [
+        {
+            "Signon_DateTime": "2023-09-04T07:47:57.460-07:00",
+            "User_Name": "John",
+            "Short_Session_ID": "123456",
+            "Successful": 1,
+            "_time": "2023-09-04T07:47:57.460-07:00",  # This is added by the process_events function
+        }
+    ]
+
+    # Setup: Mock the client's retrieve_events method and demisto.getLastRun function
+    mock_retrieve_response = ({"Workday_Account_Signon": mock_events}, 1)
+    mock_last_run = {
+        "last_fetch_time": "2023-09-04T07:47:57.460-07:00",
+        "previous_run_pseudo_ids": set(),
+    }
+
+    # When: Calling the fetch_sign_on_events_command
+    with patch.object(
+        Client, "retrieve_events", return_value=mock_retrieve_response
+    ), patch("demistomock.getLastRun", return_value=mock_last_run):
+        client = Client(
+            "mock_url",
+            False,
+            False,
+            "mock_tenant",
+            "mock_user",
+            "mock_pass",
+        )
+        events, new_last_run = fetch_sign_on_events_command(client, 10, mock_last_run)
+
+    # Then: Validate the function's return value
+    assert len(events) == 1
+    assert events[0]["User_Name"] == "John"
+    assert events[0]["_time"] == "2023-09-04T07:47:57.460-07:00"
+    assert new_last_run["last_fetch_time"] == "2023-09-04T07:47:57.460-07:00"
+
+
+def test_main_fetch_events() -> None:
+    """
+    Given:
+        - A set of mock parameters for the client.
+        - Mock functions for demisto's getLastRun, setLastRun, and params.
+        - Mock for the fetch_sign_on_events_command function to return mock events and new last_run data.
+        - Mock for the send_events_to_xsiam function.
+
+    When:
+        - The main function is called and the command is 'fetch-events'.
+
+    Then:
+        - Ensure that fetch_sign_on_events_command is called with the correct arguments.
+        - Ensure that send_events_to_xsiam is called with the mock events.
+        - Ensure that setLastRun is called to update the last_run data.
+    """
+    # Given: Mock parameters and last run data
+    mock_params = {
+        "tenant_name": "TestTenant",
+        "max_fetch": "10000",
+        "base_url": "https://testurl.com",
+        "credentials": {"identifier": "TestUser", "password": "testpass"},
+        "insecure": True,
+    }
+
+    # Mocking demisto.command to return 'fetch-events'
+    with patch("demistomock.command", return_value="fetch-events"), patch(
+        "demistomock.getLastRun", return_value={"some": "data"}
+    ), patch("demistomock.setLastRun") as mock_set_last_run, patch(
+        "demistomock.params", return_value=mock_params
+    ), patch(
+        "WorkdaySignOnEventCollector.Client"
+    ) as mock_client, patch(
+        "WorkdaySignOnEventCollector.fetch_sign_on_events_command"
+    ) as mock_fetch_sign_on_events_command, patch(
+        "WorkdaySignOnEventCollector.send_events_to_xsiam"
+    ) as mock_send_events_to_xsiam:
+        # Mocking the output of fetch_sign_on_events_command
+        mock_events = [{"event": "data"}]
+        mock_new_last_run = {"new": "data"}
+        mock_fetch_sign_on_events_command.return_value = (
+            mock_events,
+            mock_new_last_run,
+        )
+
+        # When: Calling the main function
+        main()
+
+        # Then: Validate the function calls and arguments
+        mock_fetch_sign_on_events_command.assert_called_with(
+            client=mock_client.return_value,
+            max_fetch=10000,
+            last_run={"some": "data"},
+        )
+
+        mock_send_events_to_xsiam.assert_called_with(
+            mock_events, vendor=VENDOR, product=PRODUCT
+        )
+        mock_set_last_run.assert_called_with(mock_new_last_run)
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/command_examples b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/command_examples
new file mode 100644
index 0000000000..1b69d34708
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/command_examples
@@ -0,0 +1 @@
+workday-get-sign-on-events should_push_events=false limit=1 from_date="2023-08-23T18:20:03Z" to_date="2023-08-23T18:20:08Z"
\ No newline at end of file
diff --git a/Packs/Workday/Integrations/WorkdaySignOnEventCollector/test_data/example_event.json b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/test_data/example_event.json
new file mode 100644
index 0000000000..000fa21d00
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignOnEventCollector/test_data/example_event.json
@@ -0,0 +1,39 @@
+{
+  "Workday_Account_Signon": {
+    "Signon_DateTime": "2023-08-08T23:04:01.788-07:00",
+    "User_Name": 123456,
+    "Successful": 1,
+    "Failed_Signon": 0,
+    "Invalid_Credentials": 0,
+    "Password_Changed": 0,
+    "Forgotten_Password_Reset_Request": 0,
+    "Signon_IP_Address": "Workday Internal",
+    "Signoff_DateTime": "2023-08-08T23:10:17.310-07:00",
+    "Authentication_Channel": "Web Services",
+    "Authentication_Type": "Trusted",
+    "Workday_Account_Reference": {
+      "ID": {
+        "WID": "1234567890qwertyuiop",
+        "System_User_ID": 123456,
+        "WorkdayUserName": 123456
+      }
+    },
+    "System_Account_Signon_Reference": {
+      "ID": "1234567890"
+    },
+    "Request_Originator_Reference": {
+      "ID": "1234567890qwertyuiop"
+    },
+    "Invalid_for_Authentication_Channel": 0,
+    "Invalid_for_Authentication_Policy": 0,
+    "Required_Password_Change": 0,
+    "Account_Disabled_or_Expired": 0,
+    "MFA_Authentication_Exempt": 0,
+    "Has_Grace_Period_for_MFA": 0,
+    "MFA_Enrollment": 0,
+    "Short_Session_ID": "abc123",
+    "Device_is_Trusted": 0,
+    "Tenant_Access_Read_Only": 0
+  }
+}
+
diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/README.md b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/README.md
new file mode 100644
index 0000000000..fe283ec6c7
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/README.md
@@ -0,0 +1,15 @@
+Generates mock signon events for Workday Signon Event Collector. Use these for testing and development.
+This integration was integrated and tested with version 37.0 of WorkdaySignonEventGenerator.
+
+## Configure Workday Signon Event Generator (Beta) on Cortex XSOAR
+
+1. Navigate to **Settings** > **Integrations** > **Servers & Services**.
+2. Search for Workday Signon Event Generator (Beta).
+3. Click **Add instance** to create and configure a new integration instance.
+
+    | **Parameter** | **Required** |
+    | --- | --- |
+    | Long running instance | False |
+    | Port mapping (&lt;port&gt; or &lt;host port&gt;:&lt;docker port&gt;) | True |
+
+4. Click **Test** to validate the URLs, token, and connection.
diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.py b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.py
new file mode 100644
index 0000000000..eba9da1fe8
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.py
@@ -0,0 +1,189 @@
+import random
+import string
+
+from gevent.pywsgi import WSGIServer
+from flask import Flask, request, Response
+from CommonServerPython import *
+
+import urllib3
+
+# Disable insecure warnings
+urllib3.disable_warnings()
+
+''' CONSTANTS '''
+APP: Flask = Flask('xsoar-workday-signon')
+DATE_FORMAT = '%Y-%m-%dT%H:%M:%SZ'  # ISO8601 format with UTC, default in XSOAR
+
+SIGNON_ITEM_TEMPLATE = """
+                <wd:Workday_Account_Signon>
+                    <wd:Signon_DateTime>{signon_datetime}</wd:Signon_DateTime>
+                    <wd:User_Name>{user_name}</wd:User_Name>
+                    <wd:Successful>1</wd:Successful>
+                    <wd:Failed_Signon>0</wd:Failed_Signon>
+                    <wd:Invalid_Credentials>0</wd:Invalid_Credentials>
+                    <wd:Password_Changed>0</wd:Password_Changed>
+                    <wd:Forgotten_Password_Reset_Request>0</wd:Forgotten_Password_Reset_Request>
+                    <wd:Signon_IP_Address>Workday Internal</wd:Signon_IP_Address>
+                    <wd:Authentication_Channel>Web Services</wd:Authentication_Channel>
+                    <wd:Authentication_Type>Trusted</wd:Authentication_Type>
+                    <wd:Workday_Account_Reference>
+                        <wd:ID wd:type="WID">dc28d59c523f1010e415d814cbd50002</wd:ID>
+                        <wd:ID wd:type="System_User_ID">12345678</wd:ID>
+                        <wd:ID wd:type="WorkdayUserName">{user_name}</wd:ID>
+                    </wd:Workday_Account_Reference>
+                    <wd:System_Account_Signon_Reference>
+                        <wd:ID wd:type="IID">4328$170406698</wd:ID>
+                    </wd:System_Account_Signon_Reference>
+                    <wd:Request_Originator_Reference>
+                        <wd:ID wd:type="WID">02f60ab5ed5744c0afbc9cc5096d7a73</wd:ID>
+                    </wd:Request_Originator_Reference>
+                    <wd:Invalid_for_Authentication_Channel>0</wd:Invalid_for_Authentication_Channel>
+                    <wd:Invalid_for_Authentication_Policy>0</wd:Invalid_for_Authentication_Policy>
+                    <wd:Required_Password_Change>0</wd:Required_Password_Change>
+                    <wd:Account_Disabled_or_Expired>0</wd:Account_Disabled_or_Expired>
+                    <wd:MFA_Authentication_Exempt>0</wd:MFA_Authentication_Exempt>
+                    <wd:Has_Grace_Period_for_MFA>0</wd:Has_Grace_Period_for_MFA>
+                    <wd:MFA_Enrollment>0</wd:MFA_Enrollment>
+                    <wd:Short_Session_ID>{short_session_id}</wd:Short_Session_ID>
+                    <wd:Device_is_Trusted>0</wd:Device_is_Trusted>
+                    <wd:Tenant_Access_Read_Only>0</wd:Tenant_Access_Read_Only>
+                </wd:Workday_Account_Signon>
+    """
+
+
+def generate_xml_template(from_date: str, to_date: str, count: int, total_responses: int):
+    return f"""
+<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
+    <env:Body>
+        <wd:Get_Workday_Account_Signons_Response xmlns:wd="urn:com.workday/bsvc" wd:version="v37.0">
+            <wd:Request_Criteria>
+                <wd:From_DateTime>{from_date}</wd:From_DateTime>
+                <wd:To_DateTime>{to_date}</wd:To_DateTime>
+            </wd:Request_Criteria>
+            <wd:Response_Filter>
+                <wd:As_Of_Entry_DateTime>{from_date}</wd:As_Of_Entry_DateTime>
+                <wd:Page>1</wd:Page>
+                <wd:Count>{count}</wd:Count>
+            </wd:Response_Filter>
+            <wd:Response_Results>
+                <wd:Total_Results>{total_responses}</wd:Total_Results>
+                <wd:Total_Pages>1</wd:Total_Pages>
+                <wd:Page_Results>{total_responses}</wd:Page_Results>
+                <wd:Page>1</wd:Page>
+            </wd:Response_Results>
+            <wd:Response_Data>
+                %%workday_account_signon_items%%
+            </wd:Response_Data>
+        </wd:Get_Workday_Account_Signons_Response>
+    </env:Body>
+</env:Envelope>
+"""
+
+
+def random_datetime_in_range(start_str: str, end_str: str):
+    start_datetime = datetime.strptime(start_str, DATE_FORMAT)
+    end_datetime = datetime.strptime(end_str, DATE_FORMAT)
+
+    random_seconds = random.randint(0, int((end_datetime - start_datetime).total_seconds()))
+    return (start_datetime + timedelta(seconds=random_seconds)).strftime(DATE_FORMAT)
+
+
+def random_string(length: int = 10):
+    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=length))
+
+
+def xml_generator(from_datetime: str, to_datetime: str, count: int):
+    # Generate randomized Signon_DateTime
+    random_signon_datetime = random_datetime_in_range(from_datetime, to_datetime)
+
+    # Determine the number of Workday_Account_Signon items
+    num_signon_items = random.randint(1, count)
+
+    template = generate_xml_template(from_date=from_datetime, to_date=to_datetime, total_responses=num_signon_items,
+                                     count=num_signon_items)
+
+    # Generate Workday_Account_Signon items
+    signon_items = []
+    for _ in range(num_signon_items):
+        signon_item = SIGNON_ITEM_TEMPLATE.format(
+            signon_datetime=random_signon_datetime,
+            user_name=random_string(),
+            short_session_id=random_string(length=6)
+        )
+        signon_items.append(signon_item)
+
+    # Insert the generated items into the main template
+    populated_template = template.replace("%%workday_account_signon_items%%", "\n".join(signon_items))
+
+    return populated_template
+
+
+@APP.route('/', methods=['POST'])
+def mock_workday_endpoint():
+    request_text = request.get_data(as_text=True)
+    demisto.info(f"{request_text}")
+
+    # Define regex patterns
+    from_datetime_pattern = r'<bsvc:From_DateTime>(.*?)</bsvc:From_DateTime>'
+    to_datetime_pattern = r'<bsvc:To_DateTime>(.*?)</bsvc:To_DateTime>'
+    count_pattern = r'<bsvc:Count>(\d+)</bsvc:Count>'
+
+    # Extract values using regex
+    from_datetime_match = re.search(from_datetime_pattern, request_text)
+    from_datetime = from_datetime_match.group(1) if from_datetime_match else "2023-08-23T18:20:03Z"
+
+    to_datetime_match = re.search(to_datetime_pattern, request_text)
+    to_datetime = to_datetime_match.group(1) if to_datetime_match else "2023-08-23T18:20:08Z"
+
+    count_match = re.search(count_pattern, request_text)
+    count = int(count_match.group(1)) if count_match else 1
+
+    # Use the extracted values to generate the response XML
+    response_xml = xml_generator(from_datetime, to_datetime, count)
+
+    # Return the generated XML
+    return Response(response_xml, mimetype='text/xml')
+
+
+def module_of_testing(is_longrunning: bool, longrunning_port: int):
+    if longrunning_port and is_longrunning:
+        xml_response = xml_generator('2023-08-21T11:46:02Z', '2023-08-21T11:47:02Z', 2)
+        if xml_response:
+            return_results('ok')
+        else:
+            raise DemistoException('Could not connect to the long running server. Please make sure everything is '
+                                   'configured.')
+    else:
+        raise DemistoException('Please make sure the long running port is filled and the long running checkbox is '
+                               'marked.')
+
+
+''' MAIN FUNCTION '''
+
+
+def main():
+    command = demisto.command()
+    params = demisto.params()
+    port = int(params.get('longRunningPort', '5000'))
+    is_longrunning = params.get("longRunning")
+    try:
+        if command == 'test-module':
+            module_of_testing(longrunning_port=port, is_longrunning=is_longrunning)
+        elif command == 'long-running-execution':
+            while True:
+                server = WSGIServer(('0.0.0.0', port), APP)
+                server.serve_forever()
+        else:
+            raise NotImplementedError(f"command {command} is not implemented.")
+
+    # Log exceptions and return errors
+    except Exception as e:
+        return_error(
+            f"Failed to execute {demisto.command()} command.\nError:\n{str(e)}"
+        )
+
+
+''' ENTRY POINT '''
+
+if __name__ in ('__main__', '__builtin__', 'builtins'):
+    main()
diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.yml b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.yml
new file mode 100644
index 0000000000..ab55b598c9
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator.yml
@@ -0,0 +1,31 @@
+category: Analytics & SIEM
+beta: true
+commonfields:
+  id: WorkdaySignonEventGenerator
+  version: -1
+configuration:
+- display: Long running instance
+  name: longRunning
+  type: 8
+  required: false
+- defaultvalue: '5000'
+  display: Port mapping (<port> or <host port>:<docker port>)
+  name: longRunningPort
+  required: true
+  type: 0
+description: Generates mock sign on events for Workday Signon Event Collector. Use these for testing and development.
+display: Workday Signon Event Generator (Beta)
+name: WorkdaySignonEventGenerator
+system: true
+script:
+  runonce: false
+  script: '-'
+  type: python
+  subtype: python3
+  dockerimage: demisto/teams:1.0.0.72377
+  longRunning: true
+  longRunningPort: true
+fromversion: 6.8.0
+toversion: 7.9.9
+tests:
+- No tests (auto formatted)
diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_description.md b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_description.md
new file mode 100644
index 0000000000..68892bac28
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_description.md
@@ -0,0 +1,5 @@
+## Event Generator Help
+
+Generates mock sign on events for the Workday Signon Event Collector. Use these for testing and development.
+
+Note: This is a beta Integration, which lets you implement and test pre-release software. Since the integration is beta, it might contain bugs. Updates to the integration during the beta phase might include non-backward compatible features. We appreciate your feedback on the quality and usability of the integration to help us identify issues, fix them, and continually improve.
\ No newline at end of file
diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_image.png b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_image.png
new file mode 100644
index 0000000000000000000000000000000000000000..1426dc48413218e3c859ace23ebd9f8ce3605796
GIT binary patch
literal 4818
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

literal 0
HcmV?d00001

diff --git a/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_test.py b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_test.py
new file mode 100644
index 0000000000..e3cd63d4a6
--- /dev/null
+++ b/Packs/Workday/Integrations/WorkdaySignonEventGenerator/WorkdaySignonEventGenerator_test.py
@@ -0,0 +1,133 @@
+import unittest
+from unittest.mock import patch
+
+from CommonServerPython import DemistoException
+from WorkdaySignonEventGenerator import (
+    random_datetime_in_range,
+    random_string,
+    xml_generator,
+    mock_workday_endpoint,
+    module_of_testing,
+    main,
+)
+
+from WorkdaySignonEventGenerator import APP as app
+
+
+class TestWorkdaySignonEventGenerator(unittest.TestCase):
+    def test_random_datetime_in_range(self) -> None:
+        """
+        Given:
+            - A start datetime '2023-08-21T11:46:02Z' and an end datetime '2023-08-21T11:47:02Z'
+
+        When:
+            - Generating a random datetime in the given range
+
+        Then:
+            - Ensure that the random datetime generated falls within the specified range
+        """
+        random_date = random_datetime_in_range(
+            "2023-08-21T11:46:02Z", "2023-08-21T11:47:02Z"
+        )
+        assert "2023-08-21T11:46:02Z" <= random_date <= "2023-08-21T11:47:02Z"
+
+    def test_random_string(self) -> None:
+        """
+        Given:
+            - No initial conditions
+
+        When:
+            - Generating a random string of default length 10
+
+        Then:
+            - Ensure that the length of the generated string is 10
+        """
+        assert len(random_string()) == 10
+
+    def test_random_guid(self) -> None:
+        """
+        Given:
+            - No initial conditions
+
+        When:
+            - Generating a random GUID-like string of default length 6
+
+        Then:
+            - Ensure that the length of the generated string is 6
+        """
+        assert len(random_string(length=6)) == 6
+
+    def test_xml_generator(self) -> None:
+        """
+        Given:
+            - A start datetime '2023-08-21T11:46:02Z', an end datetime '2023-08-21T11:47:02Z', and a count 1
+
+        When:
+            - Generating an XML response containing Workday sign-on events
+
+        Then:
+            - Ensure that the XML response contains exactly one Workday sign-on event
+        """
+        xml_response = xml_generator("2023-08-21T11:46:02Z", "2023-08-21T11:47:02Z", 1)
+        assert xml_response.count("<wd:Workday_Account_Signon>") == 1
+
+
+class TestMockWorkdayEndpoint(unittest.TestCase):
+    def setUp(self):
+        self.app = app.test_client()
+        self.app.testing = True
+
+    @patch("WorkdaySignonEventGenerator.Response")
+    def test_mock_workday_endpoint(self, MockResponse):
+        mock_post_data = """<bsvc:From_DateTime>2023-08-21T11:46:02Z</bsvc:From_DateTime>
+            <bsvc:To_DateTime>2023-08-21T11:47:02Z</bsvc:To_DateTime>
+            <bsvc:Count>2</bsvc:Count>"""
+        with self.app as c, c.post("/", data=mock_post_data):
+            mock_workday_endpoint()
+
+        MockResponse.assert_called()
+
+
+class TestModuleOfTesting(unittest.TestCase):
+    @patch("WorkdaySignonEventGenerator.demisto.results")
+    @patch("WorkdaySignonEventGenerator.return_error")
+    @patch("WorkdaySignonEventGenerator.xml_generator")
+    def test_module_of_testing(self, MockXmlGenerator, MockReturnError, MockResults):
+        MockXmlGenerator.return_value = "<xml>some response</xml>"
+
+        # Test for valid input
+        module_of_testing(True, 5000)
+        MockResults.assert_called_with("ok")
+
+        # Test for invalid input
+        try:
+            module_of_testing(False, None)
+        except DemistoException as e:
+            assert (
+                str(e)
+                == "Please make sure the long running port is filled and the long running checkbox is marked."
+            )
+        else:
+            raise AssertionError("Expected DemistoException but did not get one")
+
+
+class TestMainTestingFunction(unittest.TestCase):
+    @patch("WorkdaySignonEventGenerator.demisto")
+    def test_main_function_test_module(self, MockDemisto):
+        MockDemisto.params.return_value = {
+            "longRunningPort": "5000",
+            "longRunning": True,
+        }
+        MockDemisto.command.return_value = "test-module"
+
+        with patch(
+            "WorkdaySignonEventGenerator.module_of_testing"
+        ) as MockModuleTesting:
+            main()
+            MockModuleTesting.assert_called_with(
+                longrunning_port=5000, is_longrunning=True
+            )
+
+
+if __name__ == "__main__":
+    unittest.main()
diff --git a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.xif b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.xif
index e29850d0b3..83ee952ba8 100644
--- a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.xif
+++ b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.xif
@@ -15,4 +15,64 @@ alter
 | alter
     xdm.source.user.identifier = json_extract_scalar(`target`, "$.id"),
     xdm.target.host.device_category = json_extract_scalar(`target`, "$.descriptor"),
-    xdm.target.url = json_extract_scalar(`target`, "$.href");
\ No newline at end of file
+    xdm.target.url = json_extract_scalar(`target`, "$.href");
+
+[MODEL: dataset=workday_signon_raw]
+alter 
+    // define util constants
+    boolean_true = to_boolean("TRUE"),
+    boolean_false = to_boolean("FALSE"),
+    
+    // add labels for enriching event description according to the boolean flags
+    sigon_successful_label = if(to_integer(Successful) = 1, "Signon was successful.", to_integer(Successful) = 0, "Signon was unsuccessful."), 
+    account_disabled_or_expired_label = if(to_integer(Account_Disabled_or_Expired) = 1, "Account is disabled or expired."),
+    device_trusted_label = if(to_integer(Device_is_Trusted) = 1, "Sign on is from a trusted device."),
+    failed_signon_label = if(to_integer(Failed_Signon) = 1, "An invalid password was supplied for the Signon attempt."),
+    invalid_credentials_label = if(to_integer(Invalid_Credentials) = 1, "User provided invalid credentials."),
+    invalid_auth_channel_label = if(to_integer(Invalid_for_Authentication_Channel) = 1, "Invalid for authentication channel."),
+    invalid_auth_policy_label = if(to_integer(Invalid_for_Authentication_Policy) = 1, "Invalid for authentication policy."),
+    mfa_required_label = if(to_integer(Requires_MFA) = 1, "MFA is required."),
+    mfa_has_grace_label = if(to_integer(Has_Grace_Period_for_MFA) = 1, "MFA has a grace period."),
+    mfa_auth_exempt_label = if(to_integer(MFA_Authentication_Exempt) = 1, "MFA authentication is exempted."),
+    mfa_enrollment_label = if(to_integer(MFA_Enrollment) = 1, "User is enrolled in MFA."),
+    password_change_required_label = if(to_integer(Required_Password_Change) = 1, "Password change required."),
+    password_reset_label = if(to_integer(Forgotten_Password_Reset_Request) = 1, "A request was made to reset the password in the Signon attempt."),
+    password_changed_label = if(to_integer(Password_Changed) = 1, "The password was changed after the signon."),
+    read_only_label = if(to_integer(Tenant_Access_Read_Only) = 1, "Read only Access is enabled for the signon.")
+| alter
+    // init useful flags & extract nested json properties 
+    device_type_reference_id = Device_Type_Reference -> ID, 
+    is_account_disabled = if(to_integer(Account_Disabled_or_Expired) = 1, boolean_true, to_integer(Account_Disabled_or_Expired) = 0, boolean_false),
+    is_mfa_needed = if(to_integer(Requires_MFA) = 1, boolean_true, to_integer(Requires_MFA) = 0, boolean_false),
+    is_password_change_required = if(to_integer(Required_Password_Change) = 1, boolean_true, to_integer(Required_Password_Change) = 0, boolean_false), 
+    is_sign_on_successful = if(to_integer(Successful) = 1, boolean_true, to_integer(Successful) = 0, boolean_false),
+    mfa_authentication_type_id = Multi_Factor_Authentication_Type_Reference -> ID,
+    os = lowercase(Operating_System),
+    saml_identity_provider_id = SAML_Identity_Provider_Reference -> ID, 
+    src_ipv4 = if(Signon_IP_Address ~= "\.", Signon_IP_Address),
+    src_ipv6 = if(Signon_IP_Address ~= ":", Signon_IP_Address), 
+    event_labels = arraycreate(sigon_successful_label, account_disabled_or_expired_label, device_trusted_label, failed_signon_label, invalid_credentials_label, invalid_auth_channel_label, invalid_auth_policy_label, mfa_required_label, mfa_has_grace_label, mfa_auth_exempt_label, mfa_enrollment_label, password_change_required_label, password_reset_label, password_changed_label, read_only_label)
+| alter
+    // map fields
+    xdm.auth.auth_method = Authentication_Type,
+    xdm.auth.is_mfa_needed = is_mfa_needed,
+    xdm.auth.mfa.method = mfa_authentication_type_id, 
+    xdm.auth.mfa.provider = if(to_integer(MFA_Enrollment) = 1, saml_identity_provider_id), 
+    xdm.event.type = if(is_sign_on_successful, "Successful Signon", is_sign_on_successful = false, "Signon Failure", "Signon"),
+    xdm.event.description = arraystring(event_labels, " "),
+    xdm.event.outcome = if(is_sign_on_successful, XDM_CONST.OUTCOME_SUCCESS, is_sign_on_successful = boolean_false, XDM_CONST.OUTCOME_FAILED, XDM_CONST.OUTCOME_UNKNOWN),
+    xdm.event.outcome_reason = Authentication_Failure_Message, 
+    xdm.logon.type = Authentication_Channel, 
+    xdm.network.session_id = Short_Session_ID,
+    xdm.network.tls.protocol_version = TLS_Version, 
+    xdm.observer.unique_identifier = API_Client_ID,
+    xdm.source.host.device_id = device_type_reference_id, 
+    xdm.source.host.os = Operating_System, 
+    xdm.source.host.os_family = if(os contains "windows", XDM_CONST.OS_FAMILY_WINDOWS, os contains "mac", XDM_CONST.OS_FAMILY_MACOS, os contains "linux", XDM_CONST.OS_FAMILY_LINUX, os contains "android", XDM_CONST.OS_FAMILY_ANDROID, os contains "ios", XDM_CONST.OS_FAMILY_IOS, os contains "ubuntu", XDM_CONST.OS_FAMILY_UBUNTU, os contains "debian", XDM_CONST.OS_FAMILY_DEBIAN, os contains "fedora", XDM_CONST.OS_FAMILY_FEDORA, os contains "centos", XDM_CONST.OS_FAMILY_CENTOS, os contains "chrome", XDM_CONST.OS_FAMILY_CHROMEOS, os contains "solaris", XDM_CONST.OS_FAMILY_SOLARIS, os contains "scada", XDM_CONST.OS_FAMILY_SCADA, Operating_System),
+    xdm.source.ipv4 = src_ipv4,
+    xdm.source.ipv6 = src_ipv6, 
+    xdm.source.user_agent = Browser_Type,
+    xdm.source.user.is_disabled = is_account_disabled,
+    xdm.source.user.is_password_expired = is_password_change_required,
+    xdm.source.user.username = to_string(User_Name),
+    xdm.source.zone = Location;
\ No newline at end of file
diff --git a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.yml b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.yml
index d1a92a50a4..7d4539826d 100644
--- a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.yml
+++ b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector.yml
@@ -1,5 +1,5 @@
-fromversion: 8.2.0
-id: workday_workday_modeling_rule
+fromversion: 8.3.0
+id: Workday_Workday_ModelingRule
 name: Workday Modeling Rule
 rules: ''
 schema: ''
diff --git a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector_schema.json b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector_schema.json
index a62eec04cb..80a8291efc 100644
--- a/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector_schema.json
+++ b/Packs/Workday/ModelingRules/WorkdayEventCollector/WorkdayEventCollector_schema.json
@@ -36,5 +36,139 @@
         "type": "string",
         "is_array": false
       }
-    }
+    },
+
+    "workday_signon_raw": {
+      "access_restriction_reference": {
+          "type": "string",
+          " is_array": false
+      },
+      "account_disabled_or_expired": {
+          "type": "int",
+          " is_array": false
+      },
+      "api_client_id": {
+          "type": "string",
+          " is_array": false
+      },
+      "authentication_channel": {
+          "type": "string",
+          " is_array": false
+      },
+      "authentication_failure_message": {
+          "type": "string",
+          " is_array": false
+      },
+      "authentication_type": {
+          "type": "string",
+          " is_array": false
+      },
+      "browser_type": {
+          "type": "string",
+          " is_array": false
+      },
+      "device_is_trusted": {
+          "type": "int",
+          " is_array": false
+      },
+      "device_type_reference": {
+          "type": "string",
+          " is_array": false
+      },
+      "failed_signon": {
+          "type": "int",
+          " is_array": false
+      },
+      "forgotten_password_reset_request": {
+          "type": "int",
+          " is_array": false
+      },
+      "has_grace_period_for_mfa": {
+          "type": "int",
+          " is_array": false
+      },
+      "invalid_for_authentication_channel": {
+          "type": "int",
+          " is_array": false
+      },
+      "invalid_for_authentication_policy": {
+          "type": "int",
+          " is_array": false
+      },
+      "invalid_credentials": {
+          "type": "int",
+          " is_array": false
+      },
+      "location": {
+          "type": "string",
+          " is_array": false
+      },
+      "mfa_enrollment": {
+          "type": "int",
+          " is_array": false
+      },
+      "mfa_authentication_exempt": {
+          "type": "int",
+          " is_array": false
+      },
+
+      "multi_factor_authentication_type_reference": {
+          "type": "string",
+          " is_array": false
+      },
+      "operating_system": {
+          "type": "string",
+          " is_array": false
+      },
+      "password_changed": {
+          "type": "int",
+          " is_array": false
+      },
+      "required_password_change": {
+          "type": "int",
+          " is_array": false
+      },
+      "requires_mfa": {
+          "type": "int",
+          " is_array": false
+      },
+      "saml_identity_provider_reference": {
+          "type": "string",
+          " is_array": false
+      },
+      "short_session_id": {
+          "type": "string",
+          " is_array": false
+      },
+      "signon_datetime": {
+          "type": "datetime",
+          " is_array": false
+      },
+      "signoff_datetime": {
+          "type": "datetime",
+          " is_array": false
+      },
+      "signon_ip_address": {
+          "type": "string",
+          " is_array": false
+      },
+      "successful": {
+          "type": "int",
+          " is_array": false
+      },
+      "tenant_access_read_only": {
+          "type": "int",
+          " is_array": false
+      },
+      "tls_version": {
+          "type": "string",
+          " is_array": false
+      },
+      "user_name": {
+          "type": "string",
+          " is_array": false
+      }
+  }
+
+    
   }
\ No newline at end of file
diff --git a/Packs/Workday/README.md b/Packs/Workday/README.md
index e9de4e400b..1e9adbd722 100644
--- a/Packs/Workday/README.md
+++ b/Packs/Workday/README.md
@@ -1,2 +1,12 @@
-Note: In order to parse the timestamp correctly, make sure that the "requestTime" field is in UTC time zone (timestamp ends with "Z").
-The supported time format is YYYY-MM-DDTHH:MM:SS.E3Z%z (2023-07-15T07:00:00.000Z).
\ No newline at end of file
+<~XSIAM>
+
+This pack supports collection and modeling of the following event types:
+- *User activity* audit log entries.
+- *Sign-on* events. 
+
+Note: Regarding the *user activity* audit log entries, 
+in order to parse the timestamp correctly, 
+make sure that the "requestTime" field is in UTC time zone (timestamp ends with "Z").
+The supported time format is *YYYY-MM-DDTHH:MM:SS.E3Z%z* (e.g, *2023-09-05T14:00:00.123Z*).
+
+</~XSIAM>
\ No newline at end of file
diff --git a/Packs/Workday/ReleaseNotes/1_4_0.md b/Packs/Workday/ReleaseNotes/1_4_0.md
new file mode 100644
index 0000000000..af0c80de1a
--- /dev/null
+++ b/Packs/Workday/ReleaseNotes/1_4_0.md
@@ -0,0 +1,17 @@
+
+#### Integrations
+
+##### New: Workday Sign On Event Collector
+
+New: Use the Workday Sign On Event Collector integration to get sign on logs from Workday (Available from Cortex XSIAM 8.2.0).
+
+##### New: Workday Signon Event Generator (Beta)
+
+New: Generates mock sign on events for Workday Signon Event Collector. Use these for testing and development. (Available from Cortex XSIAM 8.3.0).
+
+#### Modeling Rules
+
+##### Workday Modeling Rule
+
+Added support for modeling sign on events (Available from Cortex XSIAM 8.3.0).
+
diff --git a/Packs/Workday/pack_metadata.json b/Packs/Workday/pack_metadata.json
index 21d564790b..f424840492 100644
--- a/Packs/Workday/pack_metadata.json
+++ b/Packs/Workday/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Workday",
     "description": "Workday offers enterprise-level software solutions for financial management, human resources, and planning.",
     "support": "xsoar",
-    "currentVersion": "1.3.9",
+    "currentVersion": "1.4.0",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 69c1ca079cda9cb98508a9fdf772e71db624590f Mon Sep 17 00:00:00 2001
From: content-bot <55035720+content-bot@users.noreply.github.com>
Date: Thu, 7 Sep 2023 15:22:21 +0300
Subject: [PATCH 22/26] Update Docker Image To demisto/crypto  (#29533)

* Updated Metadata Of Pack X509Certificate

* Added release notes to pack X509Certificate

* Packs/X509Certificate/Scripts/CertificateExtract/CertificateExtract.yml Docker image update

* Fixed DS108

* fix DS108

---------

Co-authored-by: sberman <sberman@paloaltonetworks.com>
Co-authored-by: israelpolishook <ipolishuk@paloaltonetworks.com>
Co-authored-by: israelpoli <72099621+israelpoli@users.noreply.github.com>
---
 Packs/X509Certificate/ReleaseNotes/1_0_29.md               | 4 ++++
 .../Scripts/CertificateExtract/CertificateExtract.yml      | 7 +++----
 Packs/X509Certificate/pack_metadata.json                   | 2 +-
 3 files changed, 8 insertions(+), 5 deletions(-)
 create mode 100644 Packs/X509Certificate/ReleaseNotes/1_0_29.md

diff --git a/Packs/X509Certificate/ReleaseNotes/1_0_29.md b/Packs/X509Certificate/ReleaseNotes/1_0_29.md
new file mode 100644
index 0000000000..fa8dab9bec
--- /dev/null
+++ b/Packs/X509Certificate/ReleaseNotes/1_0_29.md
@@ -0,0 +1,4 @@
+
+#### Scripts
+##### CertificateExtract
+- Updated the Docker image to: *demisto/crypto:1.0.0.72229*.
\ No newline at end of file
diff --git a/Packs/X509Certificate/Scripts/CertificateExtract/CertificateExtract.yml b/Packs/X509Certificate/Scripts/CertificateExtract/CertificateExtract.yml
index 7107cfd79e..353c34f740 100644
--- a/Packs/X509Certificate/Scripts/CertificateExtract/CertificateExtract.yml
+++ b/Packs/X509Certificate/Scripts/CertificateExtract/CertificateExtract.yml
@@ -13,9 +13,8 @@ outputs:
   description: Name (CN or SAN) that appears in the certificate.
   type: String
 - contextPath: Certificate.SubjectDN
-  description: |
-    The Subject Distinguished Name of the certificate.
-    This field includes the Common Name of the certificate.
+  description: |-
+    The Subject Distinguished Name of the certificate. This field includes the Common Name of the certificate.
   type: String
 - contextPath: Certificate.PEM
   description: Certificate in PEM format.
@@ -127,7 +126,7 @@ tags: []
 timeout: '0'
 type: python
 subtype: python3
-dockerimage: demisto/crypto:1.0.0.68914
+dockerimage: demisto/crypto:1.0.0.72229
 fromversion: 6.0.0
 tests:
 - X509Certificate Test Playbook
diff --git a/Packs/X509Certificate/pack_metadata.json b/Packs/X509Certificate/pack_metadata.json
index d008ac7f04..1b63cc0c2b 100644
--- a/Packs/X509Certificate/pack_metadata.json
+++ b/Packs/X509Certificate/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "X509Certificate",
     "description": "The X509 Certificate Content Packs provides additional capabilities for handling, parsing and validating X509 Certificates in Cortex XSOAR.",
     "support": "xsoar",
-    "currentVersion": "1.0.28",
+    "currentVersion": "1.0.29",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From e3bd40bee61a84134c2a3914a2a887acff9fe72d Mon Sep 17 00:00:00 2001
From: eepstain <116078117+eepstain@users.noreply.github.com>
Date: Thu, 7 Sep 2023 15:37:46 +0300
Subject: [PATCH 23/26] Netskope Update (#29463)

---
 .../NetskopeEventCollector_1_3.xif                   | 12 ++++++++----
 .../NetskopeEventCollector_1_3_schema.json           |  4 ++--
 Packs/Netskope/ReleaseNotes/3_2_3.md                 |  6 ++++++
 Packs/Netskope/pack_metadata.json                    |  2 +-
 4 files changed, 17 insertions(+), 7 deletions(-)
 create mode 100644 Packs/Netskope/ReleaseNotes/3_2_3.md

diff --git a/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3.xif b/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3.xif
index 8abdcbea55..b1be1656d5 100644
--- a/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3.xif
+++ b/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3.xif
@@ -40,7 +40,8 @@ filter source_log_event = "page"
     xdm.target.location.longitude = to_float(dst_longitude),
 	xdm.target.location.region = dst_region,
 	xdm.target.location.timezone = dst_timezone,
-	xdm.target.port = dstport,
+	xdm.target.port = to_integer(dstport),
+	xdm.source.port = to_integer(srcport),	
 	xdm.target.sent_bytes = server_bytes,
 	xdm.target.url = page,
 	xdm.target.user.identifier = userkey;
@@ -109,7 +110,8 @@ filter source_log_event = "application"
     xdm.target.location.longitude = to_float(dst_longitude),
 	xdm.target.location.region = dst_region,
 	xdm.target.location.timezone = dst_timezone,
-	xdm.target.port = dstport,
+	xdm.target.port = to_integer(dstport),
+	xdm.source.port = to_integer(srcport),	
 	xdm.target.sent_bytes = server_bytes,
 	xdm.target.url = coalesce(page, web_url),
 	xdm.target.user.identifier = userkey;
@@ -178,7 +180,8 @@ filter source_log_event = "alert"
     xdm.target.location.longitude = to_float(dst_longitude),
 	xdm.target.location.region = dst_region,
 	xdm.target.location.timezone = dst_timezone,
-	xdm.target.port = dstport,
+	xdm.target.port = to_integer(dstport),
+	xdm.source.port = to_integer(srcport),	
 	xdm.target.sent_bytes = server_bytes,
 	xdm.target.url = coalesce(page, web_url),
 	xdm.target.user.identifier = userkey;
@@ -219,7 +222,8 @@ filter source_log_event = "network"
 	xdm.target.domain = type_web,
 	xdm.target.host.hostname = dsthost,
 	xdm.target.ipv4 = dstip,
-	xdm.target.port = dstport,
+	xdm.target.port = to_integer(dstport),
+	xdm.source.port = to_integer(srcport),	
 	xdm.target.sent_bytes = server_bytes,
 	xdm.target.user.identifier = userkey,
 	xdm.network.http.referrer = referer,
diff --git a/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3_schema.json b/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3_schema.json
index 81b4a62a92..6616bdb231 100644
--- a/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3_schema.json
+++ b/Packs/Netskope/ModelingRules/NetskopeEventCollector_1_3/NetskopeEventCollector_1_3_schema.json
@@ -17,7 +17,7 @@
       "is_array": false
     },
     "dstport": {
-      "type": "string",
+      "type": "int",
       "is_array": false
     },
     "hostname": {
@@ -49,7 +49,7 @@
       "is_array": false
     },
     "srcport": {
-      "type": "string",
+      "type": "int",
       "is_array": false
     },
     "timestamp": {
diff --git a/Packs/Netskope/ReleaseNotes/3_2_3.md b/Packs/Netskope/ReleaseNotes/3_2_3.md
new file mode 100644
index 0000000000..0738d3a0e2
--- /dev/null
+++ b/Packs/Netskope/ReleaseNotes/3_2_3.md
@@ -0,0 +1,6 @@
+
+#### Modeling Rules
+
+##### Netskope Modeling Rule
+
+Updated the Modeling Rule mapping, adding the srcport field to the XDM xdm.source.port field.  
diff --git a/Packs/Netskope/pack_metadata.json b/Packs/Netskope/pack_metadata.json
index 65505d051c..dd41033ada 100644
--- a/Packs/Netskope/pack_metadata.json
+++ b/Packs/Netskope/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Netskope",
     "description": "Cloud access security broker that enables to find, understand, and secure cloud apps.",
     "support": "xsoar",
-    "currentVersion": "3.2.2",
+    "currentVersion": "3.2.3",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From dda269c007df2473543460578f757a7aeb400a03 Mon Sep 17 00:00:00 2001
From: Darya Koval <72339940+daryakoval@users.noreply.github.com>
Date: Thu, 7 Sep 2023 16:46:01 +0300
Subject: [PATCH 24/26] SplunkPy help links in description broken (#29471)

* save description broken md

* save rn

* Update Packs/SplunkPy/ReleaseNotes/3_1_6.md

Co-authored-by: Shelly Tzohar <45915502+Shellyber@users.noreply.github.com>

* Update Packs/SplunkPy/Integrations/SplunkPy/SplunkPy_description.md

Co-authored-by: Shelly Tzohar <45915502+Shellyber@users.noreply.github.com>

* update links to xsoar.pan.dev

---------

Co-authored-by: Shelly Tzohar <45915502+Shellyber@users.noreply.github.com>
---
 .../SplunkPy/SplunkPy_description.md          | 24 +++++++------------
 Packs/SplunkPy/ReleaseNotes/3_1_6.md          |  6 +++++
 Packs/SplunkPy/pack_metadata.json             |  2 +-
 3 files changed, 16 insertions(+), 16 deletions(-)
 create mode 100644 Packs/SplunkPy/ReleaseNotes/3_1_6.md

diff --git a/Packs/SplunkPy/Integrations/SplunkPy/SplunkPy_description.md b/Packs/SplunkPy/Integrations/SplunkPy/SplunkPy_description.md
index d4dfc87d85..5577e3dcf9 100644
--- a/Packs/SplunkPy/Integrations/SplunkPy/SplunkPy_description.md
+++ b/Packs/SplunkPy/Integrations/SplunkPy/SplunkPy_description.md
@@ -9,21 +9,15 @@ this will set the integration to use basic authentication when connecting to the
 For example:
 TestUser@_basic
 
-There are two main use cases for the SplunkPy integration. Refer to the following sections based on your needs.
-- [Splunk Enterprise Security Users](#splunk-enterprise-security-users)
-  - [Fetching notable events](#fetching-notable-events)
-    - [How to configure](#how-to-configure)
-    - [Enriching Notable Events](#enriching-notable-events)
-      - [Enrichment types](#enrichment-types)
-      - [How to configure](#how-to-configure-1)
-      - [Troubleshooting enrichment status](#troubleshooting-enrichment-status)
-      - [Resetting the enriching fetch mechanism](#resetting-the-enriching-fetch-mechanism)
-      - [Limitations](#limitations)
-    - [Incident Mirroring](#incident-mirroring)
-    - [Existing users](#existing-users)
-- [Splunk non-Enterprise Security Users](#splunk-non-enterprise-security-users)
-    - [Configure Splunk to Produce Alerts for SplunkPy for non-ES Splunk Users](#configure-splunk-to-produce-alerts-for-splunkpy-for-non-es-splunk-users)
-    - [Constraints](#constraints)
+There are two main use cases for the SplunkPy integration. 
+- [Splunk Enterprise Security Users](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#splunk-enterprise-security-users)
+  - [Fetching notable events](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#fetching-notable-events)
+  - [Enriching Notable Events](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#enriching-notable-events)
+  - [Incident Mirroring](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#incident-mirroring)
+  - [Existing users](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#existing-users)
+- [Splunk non-Enterprise Security Users](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#splunk-non-enterprise-security-users)
+  - [Configure Splunk to Produce Alerts for SplunkPy for non-ES Splunk Users](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#configure-splunk-to-produce-alerts-for-splunkpy-for-non-es-splunk-users)
+  - [Constraints](https://xsoar.pan.dev/docs/reference/integrations/splunk-py#constraints)
 
 ***
 # Splunk Enterprise Security Users
diff --git a/Packs/SplunkPy/ReleaseNotes/3_1_6.md b/Packs/SplunkPy/ReleaseNotes/3_1_6.md
new file mode 100644
index 0000000000..e42f2f84cf
--- /dev/null
+++ b/Packs/SplunkPy/ReleaseNotes/3_1_6.md
@@ -0,0 +1,6 @@
+
+#### Integrations
+
+##### SplunkPy
+
+- Fixed the broken links in the integration help section.
diff --git a/Packs/SplunkPy/pack_metadata.json b/Packs/SplunkPy/pack_metadata.json
index 68e724c070..eb4a335ee7 100644
--- a/Packs/SplunkPy/pack_metadata.json
+++ b/Packs/SplunkPy/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "Splunk",
     "description": "Run queries on Splunk servers.",
     "support": "xsoar",
-    "currentVersion": "3.1.5",
+    "currentVersion": "3.1.6",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From 47738d5650624bcd29d107632f140f6bd0db7684 Mon Sep 17 00:00:00 2001
From: Darya Koval <72339940+daryakoval@users.noreply.github.com>
Date: Thu, 7 Sep 2023 16:49:07 +0300
Subject: [PATCH 25/26] Cs limit in idp detections (#29550)

* revert change in idp detections

* rn

* rn

* fixes

* revert limit

---------

Co-authored-by: YuvHayun <yhayun011@gmail.com>
---
 .../Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py     | 4 ++--
 Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_9.md              | 6 ++++++
 Packs/CrowdStrikeFalcon/pack_metadata.json                  | 2 +-
 3 files changed, 9 insertions(+), 3 deletions(-)
 create mode 100644 Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_9.md

diff --git a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
index 8323ce049b..7fa1c6e32e 100644
--- a/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
+++ b/Packs/CrowdStrikeFalcon/Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.py
@@ -1369,7 +1369,7 @@ def get_idp_detections_ids(filter_arg=None, offset: int = 0, limit=INCIDENTS_PER
         :rtype ``dict``
     """
     params = {
-        'sort': 'created_timestamp.asc',
+        'sort': 'start_time.asc',
         'offset': offset,
         'filter': filter_arg
     }
@@ -2632,7 +2632,7 @@ def fetch_incidents():
                                                                     date_format=IDP_DATE_FORMAT)
         fetch_limit = current_fetch_info_idp_detections.get('limit') or INCIDENTS_PER_FETCH
         fetch_query = demisto.params().get('idp_detections_fetch_query', "")
-        filter = f"product:'idp'+created_timestamp:>'{start_fetch_time}'"
+        filter = f"product:'idp'+start_time:>'{start_fetch_time}'"
 
         if fetch_query:
             filter += f"+{fetch_query}"
diff --git a/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_9.md b/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_9.md
new file mode 100644
index 0000000000..56afca7385
--- /dev/null
+++ b/Packs/CrowdStrikeFalcon/ReleaseNotes/1_11_9.md
@@ -0,0 +1,6 @@
+
+#### Integrations
+
+##### CrowdStrike Falcon
+
+- Fixed an issue where there was inconsistency in the last_run object for **IDP Detection** incident type.
\ No newline at end of file
diff --git a/Packs/CrowdStrikeFalcon/pack_metadata.json b/Packs/CrowdStrikeFalcon/pack_metadata.json
index 333712b727..2eaa4fbd29 100644
--- a/Packs/CrowdStrikeFalcon/pack_metadata.json
+++ b/Packs/CrowdStrikeFalcon/pack_metadata.json
@@ -2,7 +2,7 @@
     "name": "CrowdStrike Falcon",
     "description": "The CrowdStrike Falcon OAuth 2 API (formerly the Falcon Firehose API), enables fetching and resolving detections, searching devices, getting behaviors by ID, containing hosts, and lifting host containment.",
     "support": "xsoar",
-    "currentVersion": "1.11.8",
+    "currentVersion": "1.11.9",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0


From da93bf0b6a0d3a7d4149526a58c6b4302040d52e Mon Sep 17 00:00:00 2001
From: Yuval Cohen <86777474+yucohen@users.noreply.github.com>
Date: Thu, 7 Sep 2023 17:14:46 +0300
Subject: [PATCH 26/26] Revert autocommitgenericsql (#29504)

* reverted autocommit

* reverted autocommit

* added bc changes and docs to default value

* reverted bc file

* added autocommit by default to ms sql

* added test case

* added to ms odbc as well

* removed commented code
---
 .../Integrations/GenericSQL/GenericSQL.py          | 12 +++++-------
 .../Integrations/GenericSQL/GenericSQL_test.py     | 14 +++++++++++---
 Packs/GenericSQL/ReleaseNotes/1_0_25.json          |  1 +
 Packs/GenericSQL/ReleaseNotes/1_0_25.md            |  4 ++++
 Packs/GenericSQL/pack_metadata.json                |  2 +-
 5 files changed, 22 insertions(+), 11 deletions(-)
 create mode 100644 Packs/GenericSQL/ReleaseNotes/1_0_25.json
 create mode 100644 Packs/GenericSQL/ReleaseNotes/1_0_25.md

diff --git a/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL.py b/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL.py
index 98a5dc9777..b43dbda644 100644
--- a/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL.py
+++ b/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL.py
@@ -69,8 +69,10 @@ class Client:
             connect_parameters_dict[key] = value
         if dialect == "Microsoft SQL Server":
             connect_parameters_dict['driver'] = 'FreeTDS'
+            connect_parameters_dict.setdefault('autocommit', 'True')
         elif dialect == 'Microsoft SQL Server - MS ODBC Driver':
             connect_parameters_dict['driver'] = 'ODBC Driver 18 for SQL Server'
+            connect_parameters_dict.setdefault('autocommit', 'True')
             if not verify_certificate:
                 connect_parameters_dict['TrustServerCertificate'] = 'yes'
         return connect_parameters_dict
@@ -151,13 +153,9 @@ class Client:
         if type(bind_vars) is dict:
             sql_query = text(sql_query)
 
-        with self.connection as connection:
-            # The isolation level is for stored procedures SQL queries that include INSERT, DELETE etc.
-            connection.execution_options(isolation_level="AUTOCOMMIT")
-            result = self.connection.execute(sql_query, bind_vars)
-            # For avoiding responses with lots of records
-            results = result.fetchmany(fetch_limit) if fetch_limit else result.fetchall()
-
+        result = self.connection.execute(sql_query, bind_vars)
+        # For avoiding responses with lots of records
+        results = result.fetchmany(fetch_limit) if fetch_limit else result.fetchall()
         headers = []
         if results:
             # if the table isn't empty
diff --git a/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL_test.py b/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL_test.py
index f9a135d939..f47959d383 100644
--- a/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL_test.py
+++ b/Packs/GenericSQL/Integrations/GenericSQL/GenericSQL_test.py
@@ -263,10 +263,18 @@ def test_mysql_integration():
 
 
 @pytest.mark.parametrize('connect_parameters, dialect, expected_response', [
-    ('arg1=value1&arg2=value2', 'MySQL', {'arg1': 'value1', 'arg2': 'value2'}),
-    ('arg1=value1&arg2=value2', 'Microsoft SQL Server', {'arg1': 'value1', 'arg2': 'value2', 'driver': 'FreeTDS'}),
+    ('arg1=value1&arg2=value2', 'MySQL',
+     {'arg1': 'value1', 'arg2': 'value2'}),
+    ('arg1=value1&arg2=value2', 'Microsoft SQL Server',
+     {'arg1': 'value1', 'arg2': 'value2', 'driver': 'FreeTDS', 'autocommit': 'True'}),
+    ('arg1=value1&arg2=value2&autocommit=False', 'Microsoft SQL Server',
+     {'arg1': 'value1', 'arg2': 'value2', 'driver': 'FreeTDS', 'autocommit': 'False'}),
     ('arg1=value1&arg2=value2', 'Microsoft SQL Server - MS ODBC Driver',
-     {'arg1': 'value1', 'arg2': 'value2', 'driver': 'ODBC Driver 18 for SQL Server', 'TrustServerCertificate': 'yes'})])
+     {'arg1': 'value1', 'arg2': 'value2', 'driver': 'ODBC Driver 18 for SQL Server',
+      'TrustServerCertificate': 'yes', 'autocommit': 'True'}),
+    ('arg1=value1&arg2=value2&autocommit=False', 'Microsoft SQL Server - MS ODBC Driver',
+     {'arg1': 'value1', 'arg2': 'value2', 'driver': 'ODBC Driver 18 for SQL Server',
+      'TrustServerCertificate': 'yes', 'autocommit': 'False'})])
 def test_parse_connect_parameters(connect_parameters, dialect, expected_response):
     assert Client.parse_connect_parameters(connect_parameters, dialect, False) == expected_response
 
diff --git a/Packs/GenericSQL/ReleaseNotes/1_0_25.json b/Packs/GenericSQL/ReleaseNotes/1_0_25.json
new file mode 100644
index 0000000000..dac8e8d0db
--- /dev/null
+++ b/Packs/GenericSQL/ReleaseNotes/1_0_25.json
@@ -0,0 +1 @@
+{"breakingChanges":true,"breakingChangesNotes": "The ***Connection Argument*** 'autocommit' is now True by default for Microsoft SQL server and Microsoft SQL Server - MS ODBC Driver dialects. Set 'autocommit=False' in order to disable it.\n"}
\ No newline at end of file
diff --git a/Packs/GenericSQL/ReleaseNotes/1_0_25.md b/Packs/GenericSQL/ReleaseNotes/1_0_25.md
new file mode 100644
index 0000000000..13e7d11aee
--- /dev/null
+++ b/Packs/GenericSQL/ReleaseNotes/1_0_25.md
@@ -0,0 +1,4 @@
+
+#### Integrations
+##### Generic SQL
+- The ***Connection Argument*** 'autocommit' is now True by default for Microsoft SQL server and Microsoft SQL Server - MS ODBC Driver dialects. Set 'autocommit=False' in order to disable it.
diff --git a/Packs/GenericSQL/pack_metadata.json b/Packs/GenericSQL/pack_metadata.json
index 2eff9fa824..6b11dae66f 100644
--- a/Packs/GenericSQL/pack_metadata.json
+++ b/Packs/GenericSQL/pack_metadata.json
@@ -3,7 +3,7 @@
     "description": "Connect and execute sql queries in 4 Databases: MySQL, PostgreSQL, Microsoft SQL Server and Oracle",
     "support": "xsoar",
     "serverMinVersion": "5.0.0",
-    "currentVersion": "1.0.24",
+    "currentVersion": "1.0.25",
     "author": "Cortex XSOAR",
     "url": "https://www.paloaltonetworks.com/cortex",
     "email": "",
-- 
2.41.0

